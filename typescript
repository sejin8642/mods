Script started on 2024-01-26 00:25:29+00:00 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="105" LINES="52"]
l [1m[7m%[27m[1m[0m                                                                                                         ]2;sejinnam@gn-08-15-00:~/gd/projects/mods]1;..projects/mods[0m[27m[24m[J(TF) [1m[38;5;226mgn-08-15-00[0m  [38;5;046mmods[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004heexe  sscripts[?1l>[?2004l
]2;scripts]1;scripts[1m[7m%[27m[1m[0m                                                                                                         ]2;sejinnam@gn-08-15-00:~/gd/projects/mods/scripts]1;../mods/scripts[0m[27m[24m[J(TF) [1m[38;5;226mgn-08-15-00[0m  [38;5;046mscripts[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004hlls[?1l>[?2004l
]2;ls --color=tty]1;ls[0m[01;34m__pycache__[0m  mods.py
[1m[7m%[27m[1m[0m                                                                                                         ]2;sejinnam@gn-08-15-00:~/gd/projects/mods/scripts]1;../mods/scripts[0m[27m[24m[J(TF) [1m[38;5;226mgn-08-15-00[0m  [38;5;046mscripts[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004hvvim mods.py[1m [0m[0m [?1l>[?2004l
]2;vim mods.py]1;vim[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"mods.py" 347L, 11114B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[2;1H    xi = x_mid - x_size_half*x_scale[2;37H[K[3;1H    xf = x_mid + x_size_half*x_scale[3;37H[K[4;5Hyi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[7;5Hx_diff = x_max - xf
    y_diff = y_max - yf[10;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[15;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print
    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter
    ---------
    args: tuple
        Tuple of multiple input objects
    num: int
        Line number of strings to truncate after (default 10)
    """[m
    [34m# get each object to print[m
    [38;5;130mfor[m arg [38;5;130min[m args:[32;9H[34m# initialize first index, end string, and object string[m[33;9Hind = [31m0[m[34;9Hend_str = [31m' ............'[m[35;9Harg_str = arg.__str__()[37;9H[34m# iterate num times to find num-th index of '\n' for arg_str[m[38;9H[38;5;130mfor[m count [38;5;130min[m [36mrange[m(num):[39;13Hnew_ind = arg_str[ind:].find([31m'[m[35m\n[m[31m'[m)[41;13H[34m# stop iterating if there are fewer than num lines in the string[m[42;13H[38;5;130mif[m new_ind == -[31m1[m:[43;17Hind = new_ind[44;17Hend_str = [31m''[m[45;17H[38;5;130mbreak[m[47;13H[34m# update the index until it reaches num-th line[m[48;13Hind = new_ind + ind + [31m2[m[50;9H[34m# print the string until num-th line[m[51;9H[36mprint[m(arg_str[:ind-[31m2[m] + end_str + [31m'[m[35m\n\n[m[31m'[m)[52;88H347,9[9CBot[51;9H[?25h[?12$p[?25l[52;78H:[51;9H[52;1H[K[52;1H:[?25hset mouse=a[?25l[?1000h[51;9H[52;88H347,9[9CBot[51;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;1H[K[52;88H339,9[9C98%[46;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hplt.plot(x, y)[3;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H336,0-1[7C97%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mfor[m y [38;5;130min[m Y:[2;9Hy_min = np.min([y_min, np.min(y)])[3;9Hy_max = np.max([y_max, np.max(y)])[52;88H[K[52;88H333,9[9C96%[46;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H330,9[9C95%[46;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_min = x[[31m0[m]
    x_max = x[-[31m1[m]
    plt.grid(grid)[52;88H[K[52;88H327,9[9C94%[46;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H324,9[9C93%[46;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        between -1 and 1 (default 0)
    grid: bool
        If true, grid is shown on the graph (default False)[m[52;88H[K[52;88H321,9[9C92%[46;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        between -1 and 1 (default 0)
    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H318,4[9C91%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H315,7[9C90%[46;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    args: tuple
        Tuple of multiple input objects
    num: int[m[52;88H[K[52;88H315,7[9C91%[43;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Line number of strings to truncate after (default 10)
    """[m
    [34m# get each object to print[m[52;88H[K[52;88H315,7[9C92%[40;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mfor[m arg [38;5;130min[m args:[50;9H[34m# initialize first index, end string, and object string[m[51;9Hind = [31m0[m[52;88H[K[52;88H315,7[9C93%[37;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hend_str = [31m' ............'[m[50;9Harg_str = arg.__str__()[52;88H[K[52;88H315,7[9C94%[34;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9H[34m# iterate num times to find num-th index of '\n' for arg_str[m[50;9H[38;5;130mfor[m count [38;5;130min[m [36mrange[m(num):[51;13Hnew_ind = arg_str[ind:].find([31m'[m[35m\n[m[31m'[m)[52;88H[K[52;88H315,7[9C95%[31;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;13H[34m# stop iterating if there are fewer than num lines in the string[m[51;13H[38;5;130mif[m new_ind == -[31m1[m:[52;88H[K[52;88H315,7[9C96%[28;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;17Hind = new_ind[50;17Hend_str = [31m''[m[51;17H[38;5;130mbreak[m[52;88H[K[52;88H315,7[9C97%[25;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;13H[34m# update the index until it reaches num-th line[m[51;13Hind = new_ind + ind + [31m2[m[52;88H[K[52;88H315,7[9C98%[22;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;9H[34m# print the string until num-th line[m[51;9H[36mprint[m(arg_str[:ind-[31m2[m] + end_str + [31m'[m[35m\n\n[m[31m'[m)[52;88H[K[52;88H315,7[9CBot[19;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H315,7[9CBot[16;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H315,7[9CBot[13;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H315,7[9CBot[10;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H315,7[9CBot[7;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H317,9[9CBot[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H320,9[9CBot[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H323,9[9CBot[6;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print
    in order to see multiple prints all at once on Jupyter lab.[m[52;88H[K[52;88H323,9[9CBot[9;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):[52;88H[K[52;88H323,9[9CBot[12;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_max = yf + y_diff*y_position[3;5Hplt.axis([x_min, x_max, y_min, y_max])[52;88H[K[52;88H323,9[9CBot[15;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position[52;88H[K[52;88H323,9[9CBot[18;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H323,9[9CBot[21;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hyi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H323,9[9CBot[24;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale[52;88H[K[52;88H323,9[9CBot[27;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H323,9[9CBot[24;9H[?25h[?25l[52;90H8,16[29;16H[?25h[?25l[52;89H30,13[31;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale[52;88H[K[52;88H330,13[8CBot[34;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H330,13[8C98%[37;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hplt.plot(x, y)[3;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H330,13[8C97%[40;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mfor[m y [38;5;130min[m Y:[2;9Hy_min = np.min([y_min, np.min(y)])[3;9Hy_max = np.max([y_max, np.max(y)])[52;88H[K[52;88H330,13[8C96%[43;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H330,13[8C95%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_min = x[[31m0[m]
    x_max = x[-[31m1[m]
    plt.grid(grid)[52;88H[K[52;88H327,13[8C94%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H324,13[8C93%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        between -1 and 1 (default 0)
    grid: bool
        If true, grid is shown on the graph (default False)[m[52;88H[K[52;88H321,13[8C92%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        between -1 and 1 (default 0)
    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H318,4[9C91%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H315,7[9C90%[46;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float[m[46;13H[106m()[m[52;88H[K[52;88H312,13[8C89%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Domain of the graph
    y: numpy array[float]
        Range of the graph[m[49;13H()[52;88H[K[52;88H309,13[8C88%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Parameter
    ---------
    x: numpy array[float][m[52;88H[K[52;88H306,13[8C87%[46;13H[?25h[?25l[52;88H292,4 [32;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    to dynamically change the position and scale of the part of the graph to inspect the
    data easily
    [m[52;88H[K[52;88H292,4[9C86%[35;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows[m[52;88H[K[52;88H292,4[9C85%[38;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H292,4[9C84%[41;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_scale=[31m1[m,
    y_scale=[31m1[m,
    x_position=[31m0[m,[52;88H[K[52;88H292,4[9C83%[44;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[38;5;130mdef[m [36minteract_plot[m(
    x,
    Y,[52;88H[K[52;88H291,13[8C82%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H288,13[8C81%[46;13H[?25h[?25l[52;89H74[32;13H[?25h[?25l[52;89H62[20;13H[?25h[?25l[52;89H59[17;13H[?25h[?25l[52;90H6,15[14;15H[?25h[?25l[52;89H61,13[19;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m (save == [36mTrue[m):[2;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H261,13[8C80%[22;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.yticks(ytick_locations, ytick_labels)[3;5H[34m# save the figure as eps vector image if save==True[m[52;88H[K[52;88H261,13[8C79%[25;13H[?25h[?25l[52;89H56,18[20;18H[?25h[?25l[52;90H3,12[17;12H[?25h[?25l[52;90H0,11[14;11H[?25h[?25l[52;89H48,7 [12;7H[?25h[?25l[52;89H53,12[17;12H[?25h[?25l[52;93H3[17;13H[?25h[?25l[52;89H49,15[13;15H[?25h[?25l[52;89H54,4 [18;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mfor[m y [38;5;130min[m Y:[50;9Hy_min = np.min([y_min, np.min(y)])[51;9Hy_max = np.max([y_max, np.max(y)])[52;88H[K[52;88H254,4[9C80%[15;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hplt.plot(x, y)[51;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H254,4[9C81%[12;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H254,4[9C82%[9;4H[?25h[?25l[52;89H66,15[21;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H266,15[8C81%[24;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m (save == [36mTrue[m):[2;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H266,15[8C80%[27;15H[?25h[?25l[52;90H3,11[24;11H[?25h[?25l[52;89H56,6 [17;6H[?25h[?25l[52;92H5[17;5H[?25h[?25l[52;89H61,11[22;11H[?25h[?25l[52;90H4,13[25;13H[?25h[?25l[52;90H3,9 [24;9H[?25h[?25l[52;90H4,13[25;13H[?25h[?25l[52;90H6,12[27;12H[?25h[?25l[52;90H2,13[23;13H[?25h[?25l[52;90H6,14[27;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hplt.plot(x, y)[51;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H266,14[8C81%[24;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H266,14[8C82%[21;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale[52;88H[K[52;88H266,14[8C83%[18;14H[?25h[?25l[52;89H76,15[28;15H[?25h[?25l[52;90H8,17[30;17H[?25h[?25l[52;90H5,19[27;19H[?25h[?25l[52;90H3,21[25;21H[?25h[?25l[52;90H2[24;21H[?25h[?25l[52;90H6[28;21H[?25h[?25l[52;92H18[28;18H[?25h[?25l[52;90H3,14[25;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[38;5;130mdef[m [36minteract_plot[m(
    x,
    Y,[52;88H[K[52;88H273,14[8C82%[28;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H273,14[8C81%[31;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m (save == [36mTrue[m):[2;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H273,14[8C80%[34;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.yticks(ytick_locations, ytick_labels)[3;5H[34m# save the figure as eps vector image if save==True[m[52;88H[K[52;88H273,14[8C79%[37;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# tick locations with labels[m
    plt.xticks(xtick_locations, xtick_labels)[52;88H[K[52;88H273,14[8C78%[40;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m
    ax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[52;88H[K[52;88H273,14[8C77%[43;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)
    ax.spines[[31m'right'[m].set_visible([36mFalse[m)[52;88H[K[52;88H273,14[8C76%[46;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H273,14[8C77%[43;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_min = x[[31m0[m]
    x_max = x[-[31m1[m]
    plt.grid(grid)[52;88H[K[52;88H273,14[8C78%[40;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H273,14[8C79%[37;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mfor[m y [38;5;130min[m Y:[50;9Hy_min = np.min([y_min, np.min(y)])[51;9Hy_max = np.max([y_max, np.max(y)])[52;88H[K[52;88H273,14[8C80%[34;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hplt.plot(x, y)[51;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H273,14[8C81%[31;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H273,14[8C82%[28;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale[52;88H[K[52;88H273,14[8C83%[25;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H273,14[8C84%[22;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H273,14[8C85%[19;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position[52;88H[K[52;88H273,14[8C86%[16;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = yf + y_diff*y_position[51;5Hplt.axis([x_min, x_max, y_min, y_max])[52;88H[K[52;88H273,14[8C87%[13;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):[52;88H[K[52;88H273,14[8C88%[10;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print
    in order to see multiple prints all at once on Jupyter lab.[m[52;88H[K[52;88H273,14[8C89%[7;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H275,14[8C90%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    args: tuple
        Tuple of multiple input objects
    num: int[m[52;88H[K[52;88H278,14[8C91%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Line number of strings to truncate after (default 10)
    """[m
    [34m# get each object to print[m[52;88H[K[52;88H281,14[8C92%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mfor[m arg [38;5;130min[m args:[50;9H[34m# initialize first index, end string, and object string[m[51;9Hind = [31m0[m[52;88H[K[52;88H284,14[8C93%[6;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        between -1 and 1 (default 0)
    grid: bool
        If true, grid is shown on the graph (default False)[m[52;88H[K[52;88H284,14[8C92%[9;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        between -1 and 1 (default 0)
    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H284,14[8C91%[12;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H284,14[8C90%[15;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float[m[52;88H[K[52;88H284,14[8C89%[18;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Domain of the graph
    y: numpy array[float]
        Range of the graph[m[52;88H[K[52;88H284,14[8C88%[21;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Parameter
    ---------
    x: numpy array[float][m[52;88H[K[52;88H284,14[8C87%[24;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    to dynamically change the position and scale of the part of the graph to inspect the
    data easily
    [m[52;88H[K[52;88H284,14[8C86%[27;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows[m[52;88H[K[52;88H284,14[8C85%[30;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H284,14[8C84%[33;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_scale=[31m1[m,
    y_scale=[31m1[m,
    x_position=[31m0[m,[52;88H[K[52;88H284,14[8C83%[36;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[38;5;130mdef[m [36minteract_plot[m(
    x,
    Y,[52;88H[K[52;88H284,14[8C82%[39;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H284,14[8C81%[42;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m (save == [36mTrue[m):[2;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H284,14[8C80%[45;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hplt.plot(x, y)[51;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H284,14[8C81%[42;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H284,14[8C82%[39;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale[52;88H[K[52;88H284,14[8C83%[36;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H284,14[8C84%[33;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H284,14[8C85%[30;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position[52;88H[K[52;88H284,14[8C86%[27;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = yf + y_diff*y_position[51;5Hplt.axis([x_min, x_max, y_min, y_max])[52;88H[K[52;88H284,14[8C87%[24;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):[52;88H[K[52;88H284,14[8C88%[21;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print
    in order to see multiple prints all at once on Jupyter lab.[m[52;88H[K[52;88H284,14[8C89%[18;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H284,14[8C90%[15;14H[?25h[?25l[52;89H99,22[30;22H[?25h[?25l[52;88H301[32;22H[?25h[?25l[52;90H6,20[37;20H[?25h[?25l[52;90H9,21[40;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float[m[52;88H[K[52;88H309,21[8C89%[43;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Domain of the graph
    y: numpy array[float]
        Range of the graph[m[52;88H[K[52;88H309,21[8C88%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Parameter
    ---------
    x: numpy array[float][m[52;88H[K[52;88H306,21[8C87%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    to dynamically change the position and scale of the part of the graph to inspect the
    data easily
    [m[52;88H[K[52;88H303,21[8C86%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows[m[52;88H[K[52;88H300,21[8C85%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H297,0-1[7C84%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_scale=[31m1[m,
    y_scale=[31m1[m,
    x_position=[31m0[m,[52;88H[K[52;88H294,21[8C83%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[38;5;130mdef[m [36minteract_plot[m(
    x,
    Y,[52;88H[K[52;88H291,21[8C82%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H288,15[8C81%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m (save == [36mTrue[m):[2;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[46;21H[106m[[1C][m[52;88H[K[52;88H285,21[8C80%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.yticks(ytick_locations, ytick_labels)[3;5H[34m# save the figure as eps vector image if save==True[m[46;14H[106m[[1C][m[49;21H[[1C][52;88H[K[52;88H282,16[8C79%[46;16H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# tick locations with labels[m
    plt.xticks(xtick_locations, xtick_labels)[49;14H[[1C][52;88H[K[52;88H279,7[9C78%[46;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m
    ax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[52;88H[K[52;88H276,21[8C77%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)
    ax.spines[[31m'right'[m].set_visible([36mFalse[m)[52;88H[K[52;88H273,21[8C76%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# change the spine linewidth[m
    plt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[52;88H[K[52;88H270,21[8C75%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.plot(x, y, [31m'k-'[m, linewidth=[31m.5[m)
    plt.axis([xmin, xmax, [31m1.1[m*ymin, [31m1.1[m*ymax])[52;88H[K[52;88H267,18[8C74%[46;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.plot([31m1[m, [31m0[m, [31m">k"[m, markersize=[31m3[m, transform=ax.get_yaxis_transform(), clip_on=[36mFalse[m)[3;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m[52;88H[K[52;88H264,21[8C73%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.spines[[31m'bottom'[m].set_position(([31m'data'[m, [31m0[m))
    ax.set_xlabel(xlabel)
    ax.xaxis.set_label_coords([31m1.02[m, y_pos_for_x_label)[52;88H[K[52;88H261,13[8C72%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[2;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H[K[52;88H258,21[8C71%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[2;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)
    [38;5;130melse[m:[52;88H[K[52;88H255,7[9C70%[46;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[2;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[3;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[52;88H[K[52;88H252,17[8C69%[46;17H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[3;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m[52;88H[K[52;88H249,15[8C68%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# axis label coordinate adjustments[m
    x_pos_for_y_label = -xmin/(xmax - xmin)[52;88H[K[52;88H246,18[8C67%[46;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax
    [38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[52;88H[K[52;88H243,19[8C66%[46;19H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hxmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[46;8H[106m([12C)[m[52;88H[K[52;88H240,21[8C65%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax = fig.add_subplot([31m111[m)[3;5H[34m# minimums and maximums of x and y[m[49;8H([12C)[52;88H[K[52;88H237,21[8C64%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    fig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)[52;88H[K[52;88H234,0-1[7C63%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9H[31m"text.usetex"[m: [36mTrue[m,[2;9H[31m"font.family"[m: [31m'serif'[m,[3;9H[31m"font.size"[m: [31m9[m})[52;88H[K[52;88H231,0-1[7C62%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    """[m
    [34m# LaTeX font with size 9[m
    plt.rcParams.update({[52;88H[K[52;88H228,21[8C61%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add
        more plot options after graph execution[m[52;88H[K[52;88H225,21[8C60%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        that is based on the PostScript language.
    filename: str
        filename for eps[m[52;88H[K[52;88H222,21[8C59%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool
        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics [m[52;88H[K[52;88H219,21[8C58%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ytick_locations: list[float]
        vertical locations of ticks. Default is empty list.
    xtick_labels: list[str][m[52;88H[K[52;88H216,21[8C57%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        horizontal locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for xtick locations. There should be exactly the same number of labels as locations[m[52;88H[K[52;88H213,21[8C56%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ylabel: str
        same as xlabel except for y-axis
    xtick_locations: list[float][m[52;88H[K[52;88H210,21[8C55%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        lable for x-axis. The default string is raw string. In Python, an r string, also known as 
        a raw string, is a string literal prefixed with the letter r. It is used to create strings 
        that treat backslashes (\) as literal characters, rather than escape characters.[m[52;88H[K[52;88H207,21[8C54%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y: list[float]
        y-axis values
    xlabel: str[m[52;88H[K[52;88H204,21[8C53%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ----------
    x: list[float]
        x-axis values[m[52;88H[K[52;88H201,0-1[7C52%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    eps file, which you can insert in LaTeX document.

    Parameters[m[52;88H[K[52;88H198,21[8C51%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hshow=[36mTrue[m):
    [31m"""
    plotting function without fancy coloring designed for LaTeX pdf file. You can save the plot as[m[52;88H[K[52;88H195,21[8C50%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hytick_labels = [],[2;9Hsave=[36mFalse[m,[3;9Hfilename=[31m'figure.eps'[m,[52;88H[K[52;88H192,21[8C49%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hxtick_locations = [],[2;9Hxtick_labels = [],[3;9Hytick_locations = [],[52;88H[K[52;88H189,0-1[7C48%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hy,[2;9Hxlabel=[31mr'$x$'[m,[3;9Hylabel=[31mr'$y$'[m,[52;88H[K[52;88H186,21[8C47%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36mgraph[m([3;9Hx,[52;88H[K[52;88H183,7[9C46%[46;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    """[m
    formatted_args = [36mtuple[m([36mmap[m(float2SI, args))
    [36mprint[m(*formatted_args, sep=[31m'    '[m)[52;88H[K[52;88H180,14[8C45%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Parameter
    args: tuple[float or int]
        Tuple of numbers to change the format [m[52;88H[K[52;88H177,21[8C44%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Same as print function, except it takes numbers as arguments and float2SI is used to each number
    arguments for easier inspection[m[52;88H[K[52;88H174,21[8C43%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36mprint_formatted[m(*args):
    [31m"""[m[52;88H[K[52;88H171,21[8C42%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hnum = [31m'{:.1f}'[m.format([36mround[m(digits, decimal_place)).zfill([31m4[m + decimal_place)[3;5H[38;5;130mreturn[m num+prefix[52;88H[K[52;88H168,21[8C41%[46;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool
        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics [m[52;88H[K[52;88H168,21[8C42%[43;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        that is based on the PostScript language.
    filename: str
        filename for eps[m[52;88H[K[52;88H168,21[8C43%[40;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add
        more plot options after graph execution[m[52;88H[K[52;88H168,21[8C44%[37;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    """[m
    [34m# LaTeX font with size 9[m
    plt.rcParams.update({[52;88H[K[52;88H168,21[8C45%[34;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9H[31m"text.usetex"[m: [36mTrue[m,[50;9H[31m"font.family"[m: [31m'serif'[m,[51;9H[31m"font.size"[m: [31m9[m})[52;88H[K[52;88H168,21[8C46%[31;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    fig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)[52;88H[K[52;88H168,21[8C47%[28;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax = fig.add_subplot([31m111[m)[51;5H[34m# minimums and maximums of x and y[m[52;88H[K[52;88H168,21[8C48%[25;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[52;88H[K[52;88H168,21[8C49%[22;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax
    [38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[52;88H[K[52;88H168,21[8C50%[19;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# axis label coordinate adjustments[m
    x_pos_for_y_label = -xmin/(xmax - xmin)[52;88H[K[52;88H168,21[8C51%[16;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[51;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m[52;88H[K[52;88H168,21[8C52%[13;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[50;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[51;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[52;88H[K[52;88H168,21[8C53%[10;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[50;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)
    [38;5;130melse[m:[52;88H[K[52;88H168,21[8C54%[7;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[50;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H[K[52;88H170,21[8C55%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.spines[[31m'bottom'[m].set_position(([31m'data'[m, [31m0[m))
    ax.set_xlabel(xlabel)
    ax.xaxis.set_label_coords([31m1.02[m, y_pos_for_x_label)[52;88H[K[52;88H173,21[8C56%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.plot([31m1[m, [31m0[m, [31m">k"[m, markersize=[31m3[m, transform=ax.get_yaxis_transform(), clip_on=[36mFalse[m)[51;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m[52;88H[K[52;88H176,21[8C57%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.plot(x, y, [31m'k-'[m, linewidth=[31m.5[m)
    plt.axis([xmin, xmax, [31m1.1[m*ymin, [31m1.1[m*ymax])[52;88H[K[52;88H179,21[8C58%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# change the spine linewidth[m
    plt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[52;88H[K[52;88H182,21[8C59%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)
    ax.spines[[31m'right'[m].set_visible([36mFalse[m)[52;88H[K[52;88H185,21[8C60%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m
    ax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[52;88H[K[52;88H188,21[8C61%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;21H[106m([22C)[m[50;5H[34m# tick locations with labels[m
    plt.xticks(xtick_locations, xtick_labels)[52;88H[K[52;88H191,21[8C62%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;21H([22C)[49;5Hplt.yticks(ytick_locations, ytick_labels)[51;5H[34m# save the figure as eps vector image if save==True[m[52;88H[K[52;88H194,21[8C63%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mif[m (save == [36mTrue[m):[50;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H197,0-1[7C64%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H200,21[8C65%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36minteract_plot[m(
    x,
    Y,[52;88H[K[52;88H203,21[8C66%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale=[31m1[m,
    y_scale=[31m1[m,
    x_position=[31m0[m,[52;88H[K[52;88H206,21[8C67%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H209,21[8C68%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows[m[52;88H[K[52;88H212,9[9C69%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    to dynamically change the position and scale of the part of the graph to inspect the
    data easily
    [m[52;88H[K[52;88H215,0-1[7C70%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    Parameter
    ---------
    x: numpy array[float][m[52;88H[K[52;88H218,21[8C71%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Domain of the graph
    y: numpy array[float]
        Range of the graph[m[52;88H[K[52;88H221,21[8C72%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float[m[52;88H[K[52;88H224,0-1[7C73%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H227,0-1[7C74%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        between -1 and 1 (default 0)
    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H230,21[8C75%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        between -1 and 1 (default 0)
    grid: bool
        If true, grid is shown on the graph (default False)[m[52;88H[K[52;88H233,21[8C76%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H236,21[8C77%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_min = x[[31m0[m]
    x_max = x[-[31m1[m]
    plt.grid(grid)[52;88H[K[52;88H239,21[8C78%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H242,0-1[7C79%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mfor[m y [38;5;130min[m Y:[50;9Hy_min = np.min([y_min, np.min(y)])[51;9Hy_max = np.max([y_max, np.max(y)])[52;88H[K[52;88H245,0-1[7C80%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hplt.plot(x, y)[51;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H248,7[9C81%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H251,17[8C82%[6;17H[?25h[?25l[52;89H74,21[29;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H274,21[8C81%[32;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m (save == [36mTrue[m):[2;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H274,21[8C80%[35;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.yticks(ytick_locations, ytick_labels)[3;5H[34m# save the figure as eps vector image if save==True[m[52;88H[K[52;88H274,21[8C79%[38;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# tick locations with labels[m
    plt.xticks(xtick_locations, xtick_labels)[52;88H[K[52;88H274,21[8C78%[41;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m
    ax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[52;88H[K[52;88H274,21[8C77%[44;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)
    ax.spines[[31m'right'[m].set_visible([36mFalse[m)[52;88H[K[52;88H273,23[8C76%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# change the spine linewidth[m
    plt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[52;88H[K[52;88H270,23[8C75%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.plot(x, y, [31m'k-'[m, linewidth=[31m.5[m)
    plt.axis([xmin, xmax, [31m1.1[m*ymin, [31m1.1[m*ymax])[52;88H[K[52;88H267,18[8C74%[46;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.plot([31m1[m, [31m0[m, [31m">k"[m, markersize=[31m3[m, transform=ax.get_yaxis_transform(), clip_on=[36mFalse[m)[3;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m[52;88H[K[52;88H264,23[8C73%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.spines[[31m'bottom'[m].set_position(([31m'data'[m, [31m0[m))
    ax.set_xlabel(xlabel)
    ax.xaxis.set_label_coords([31m1.02[m, y_pos_for_x_label)[52;88H[K[52;88H261,13[8C72%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[2;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H[K[52;88H258,23[8C71%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[2;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)
    [38;5;130melse[m:[52;88H[K[52;88H255,7[9C70%[46;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[2;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[3;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[52;88H[K[52;88H252,17[8C69%[46;17H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[3;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m[52;88H[K[52;88H249,15[8C68%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# axis label coordinate adjustments[m
    x_pos_for_y_label = -xmin/(xmax - xmin)[52;88H[K[52;88H246,18[8C67%[46;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax
    [38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[52;88H[K[52;88H243,19[8C66%[46;19H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hxmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[52;88H[K[52;88H240,22[8C65%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax = fig.add_subplot([31m111[m)[3;5H[34m# minimums and maximums of x and y[m[52;88H[K[52;88H237,23[8C64%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    fig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)[52;88H[K[52;88H234,0-1[7C63%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9H[31m"text.usetex"[m: [36mTrue[m,[2;9H[31m"font.family"[m: [31m'serif'[m,[3;9H[31m"font.size"[m: [31m9[m})[52;88H[K[52;88H231,0-1[7C62%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    """[m
    [34m# LaTeX font with size 9[m
    plt.rcParams.update({[52;88H[K[52;88H228,23[8C61%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add
        more plot options after graph execution[m[52;88H[K[52;88H225,23[8C60%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        that is based on the PostScript language.
    filename: str
        filename for eps[m[52;88H[K[52;88H222,23[8C59%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool
        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics [m[52;88H[K[52;88H219,23[8C58%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ytick_locations: list[float]
        vertical locations of ticks. Default is empty list.
    xtick_labels: list[str][m[46;14H[106m[[8C][m[52;88H[K[52;88H216,23[8C57%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        horizontal locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for xtick locations. There should be exactly the same number of labels as locations[m[49;14H[[8C][52;88H[K[52;88H213,23[8C56%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ylabel: str
        same as xlabel except for y-axis
    xtick_locations: list[float][m[52;88H[K[52;88H210,23[8C55%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        lable for x-axis. The default string is raw string. In Python, an r string, also known as 
        a raw string, is a string literal prefixed with the letter r. It is used to create strings 
        that treat backslashes (\) as literal characters, rather than escape characters.[m[52;88H[K[52;88H207,23[8C54%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y: list[float]
        y-axis values
    xlabel: str[m[52;88H[K[52;88H204,23[8C53%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ----------
    x: list[float]
        x-axis values[m[52;88H[K[52;88H201,0-1[7C52%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    eps file, which you can insert in LaTeX document.

    Parameters[m[52;88H[K[52;88H198,23[8C51%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hshow=[36mTrue[m):
    [31m"""
    plotting function without fancy coloring designed for LaTeX pdf file. You can save the plot as[m[52;88H[K[52;88H195,23[8C50%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hytick_labels = [],[2;9Hsave=[36mFalse[m,[3;9Hfilename=[31m'figure.eps'[m,[52;88H[K[52;88H192,23[8C49%[46;23H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hxtick_locations = [],[2;9Hxtick_labels = [],[3;9Hytick_locations = [],[52;88H[K[52;88H189,0-1[7C48%[46;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[52;88H[K[52;88H189,0-1[7C49%[43;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax
    [38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[52;88H[K[52;88H189,0-1[7C50%[40;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# axis label coordinate adjustments[m
    x_pos_for_y_label = -xmin/(xmax - xmin)[52;88H[K[52;88H189,0-1[7C51%[37;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[51;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m[52;88H[K[52;88H189,0-1[7C52%[34;1H[?25h[?25l[52;78H<314e>[34;1H[52;78H      [34;1H[?25h[?25l[52;78Hg[34;1H[?25h[?25l[52;78H [34;1H[52;78Hgg[34;1H[52;78H  [1;1H[27m[23m[29m[m[H[2J[1;1H[34m# personal python functions and classes[m

[35mimport[m numpy [38;5;130mas[m np
[35mimport[m matplotlib.pyplot [38;5;130mas[m plt

[38;5;130mclass[m [36mFUNCS[m:
    [31m"""
    class that returns funcs instance that returns list of custom-defined functions
    
    Attribute
    ---------
    num: int
        number variable used to keep track of total number of custom functions
        
    """[m
    [38;5;130mdef[m [36m__init__[m(self):[17;9Hself.num = [31m0[m[19;5H[38;5;130mdef[m [36m__repr__[m(self):[20;9H[31m"""
        prints custom-defined functions
        """[m[23;9Hself.num = [31m0[m[24;9Hitems = [36mglobals[m().items()[25;9H[38;5;130mfor[m key, value [38;5;130min[m items:[26;13H[38;5;130mif[m [36mcallable[m(value) [38;5;130mand[m value.__module__ == __name__:[27;17Hself.num += [31m1[m[28;17H[36mprint[m(key)[29;9H[38;5;130mreturn[m [36mstr[m(f[31m"total number of custom objects is {self.num}"[m)

[38;5;130mdef[m [36mmatd[m(matrix):
    [31m"""
    displays numpy array as image of matrix (without brackets) for easy view
    
    parameter
    ---------
    matrix: numpy array[float or int]
        numpy array of float or int
    """[m
    [34m# set configurations[m
    zeros = np.zeros(matrix.shape)
    rescale_factor = [31m3[m/[31m5[m
    figsize = (rescale_factor*matrix.shape[[31m1[m], rescale_factor*matrix.shape[[31m0[m])
    matrix = np.flip(matrix, axis=[31m0[m)
    ext1 = matrix.shape[[31m1[m] - [31m0.9[m
    ext2 = matrix.shape[[31m0[m] - [31m0.9[m[48;5H[34m# Create a figure and axes[m
    fig, ax = plt.subplots(figsize=figsize)[51;5H[34m# Set the title and remove the axes ticks[m[52;88H1,1[11CTop[1;1H[?25h[?25l[52;78Hu[1;1H[52;1HAlready at oldest change[52;78H[K[1;1H[52;88H1,1[11CTop[1;1H[?25h[?25l[52;78H^[[1;1H[52;78H  [1;1H[52;78H^[[1;1H[52;78H  [1;1H[?25h[?25l[52;78Ho[1;1H[52;78H [2;1H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H2,1[11CTop[2;51r[2;1H[L[1;52r[52;88H[K[52;88H2,1[11CTop[2;1H[?25h[52;1H[K[2;1H[?25l[52;78H^[[2;1H[52;78H  [2;1H[52;88H2,0-1[9CTop[2;1H[?25h[?25l[52;78H^O[2;1H[52;78H  [26;1H[27m[23m[29m[m[H[2J[1;1H[31m        that treat backslashes (\) as literal characters, rather than escape characters.
    ylabel: str
        same as xlabel except for y-axis
    xtick_locations: list[float]
        horizontal locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for xtick locations. There should be exactly the same number of labels as locations
    ytick_locations: list[float]
        vertical locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool
        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics 
        that is based on the PostScript language.
    filename: str
        filename for eps
    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add
        more plot options after graph execution
    """[m
    [34m# LaTeX font with size 9[m
    plt.rcParams.update({[23;9H[31m"text.usetex"[m: [36mTrue[m,[24;9H[31m"font.family"[m: [31m'serif'[m,[25;9H[31m"font.size"[m: [31m9[m})[27;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    fig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)
    ax = fig.add_subplot([31m111[m)[31;5H[34m# minimums and maximums of x and y[m
    xmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[35;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax
    [38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[39;5H[34m# axis label coordinate adjustments[m
    x_pos_for_y_label = -xmin/(xmax - xmin)
    y_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[43;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m
    [38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[45;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[46;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[47;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[48;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)
    [38;5;130melse[m:[50;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[51;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H190,0-1[7C55%[26;1H[?25h[?25l[52;78Hg[26;1H[?25h[?25l[52;78H [26;1H[52;78Hgg[26;1H[52;78H  [1;1H[27m[23m[29m[m[H[2J[1;1H[34m# personal python functions and classes[m


[35mimport[m numpy [38;5;130mas[m np
[35mimport[m matplotlib.pyplot [38;5;130mas[m plt

[38;5;130mclass[m [36mFUNCS[m:
    [31m"""
    class that returns funcs instance that returns list of custom-defined functions
    
    Attribute
    ---------
    num: int
        number variable used to keep track of total number of custom functions
        
    """[m
    [38;5;130mdef[m [36m__init__[m(self):[18;9Hself.num = [31m0[m[20;5H[38;5;130mdef[m [36m__repr__[m(self):[21;9H[31m"""
        prints custom-defined functions
        """[m[24;9Hself.num = [31m0[m[25;9Hitems = [36mglobals[m().items()[26;9H[38;5;130mfor[m key, value [38;5;130min[m items:[27;13H[38;5;130mif[m [36mcallable[m(value) [38;5;130mand[m value.__module__ == __name__:[28;17Hself.num += [31m1[m[29;17H[36mprint[m(key)[30;9H[38;5;130mreturn[m [36mstr[m(f[31m"total number of custom objects is {self.num}"[m)

[38;5;130mdef[m [36mmatd[m(matrix):
    [31m"""
    displays numpy array as image of matrix (without brackets) for easy view
    
    parameter
    ---------
    matrix: numpy array[float or int]
        numpy array of float or int
    """[m
    [34m# set configurations[m
    zeros = np.zeros(matrix.shape)
    rescale_factor = [31m3[m/[31m5[m
    figsize = (rescale_factor*matrix.shape[[31m1[m], rescale_factor*matrix.shape[[31m0[m])
    matrix = np.flip(matrix, axis=[31m0[m)
    ext1 = matrix.shape[[31m1[m] - [31m0.9[m
    ext2 = matrix.shape[[31m0[m] - [31m0.9[m[49;5H[34m# Create a figure and axes[m
    fig, ax = plt.subplots(figsize=figsize)[52;88H1,1[11CTop[1;1H[?25h[?25l[52;78Hj[1;1H[52;78H [2;1H[52;88H2,0-1[2;1H[?25h[?25l[52;78Hd[2;1H[?25h[?25l[52;79Hd[2;1H[52;78H  [2;1H[2;51r[51;1H
[1;52r[51;5H[34m# Set the title and remove the axes ticks[m[52;88H[K[52;88H2,0-1[9CTop[2;1H[?25h[?25l[52;78H^O[2;1H[52;78H  [26;1H[27m[23m[29m[m[H[2J[1;1H[31m        that treat backslashes (\) as literal characters, rather than escape characters.
    ylabel: str
        same as xlabel except for y-axis
    xtick_locations: list[float]
        horizontal locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for xtick locations. There should be exactly the same number of labels as locations
    ytick_locations: list[float]
        vertical locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool
        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics 
        that is based on the PostScript language.
    filename: str
        filename for eps
    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add
        more plot options after graph execution
    """[m
    [34m# LaTeX font with size 9[m
    plt.rcParams.update({[23;9H[31m"text.usetex"[m: [36mTrue[m,[24;9H[31m"font.family"[m: [31m'serif'[m,[25;9H[31m"font.size"[m: [31m9[m})[27;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    fig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)
    ax = fig.add_subplot([31m111[m)[31;5H[34m# minimums and maximums of x and y[m
    xmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[35;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax
    [38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[39;5H[34m# axis label coordinate adjustments[m
    x_pos_for_y_label = -xmin/(xmax - xmin)
    y_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[43;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m
    [38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[45;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[46;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[47;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[48;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)
    [38;5;130melse[m:[50;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[51;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H189,0-1[7C55%[26;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hax.spines[[31m'bottom'[m].set_position(([31m'data'[m, [31m0[m))
    ax.set_xlabel(xlabel)[52;88H[K[52;88H189,0-1[7C56%[23;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.xaxis.set_label_coords([31m1.02[m, y_pos_for_x_label)
    ax.plot([31m1[m, [31m0[m, [31m">k"[m, markersize=[31m3[m, transform=ax.get_yaxis_transform(), clip_on=[36mFalse[m)[52;88H[K[52;88H189,0-1[7C57%[20;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    plt.plot(x, y, [31m'k-'[m, linewidth=[31m.5[m)
    plt.axis([xmin, xmax, [31m1.1[m*ymin, [31m1.1[m*ymax])[52;88H[K[52;88H189,0-1[7C58%[17;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        labels for xtick locations. There should be exactly the same number of labels as locations
    ytick_locations: list[float]
        vertical locations of ticks. Default is empty list.[m[52;88H[K[52;88H189,0-1[7C57%[20;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    xtick_locations: list[float]
        horizontal locations of ticks. Default is empty list.
    xtick_labels: list[str][m[52;88H[K[52;88H189,0-1[7C56%[23;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        that treat backslashes (\) as literal characters, rather than escape characters.
    ylabel: str
        same as xlabel except for y-axis[m[52;88H[K[52;88H189,0-1[7C55%[26;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hax.spines[[31m'bottom'[m].set_position(([31m'data'[m, [31m0[m))
    ax.set_xlabel(xlabel)[52;88H[K[52;88H189,0-1[7C56%[23;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.xaxis.set_label_coords([31m1.02[m, y_pos_for_x_label)
    ax.plot([31m1[m, [31m0[m, [31m">k"[m, markersize=[31m3[m, transform=ax.get_yaxis_transform(), clip_on=[36mFalse[m)[52;88H[K[52;88H189,0-1[7C57%[20;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    plt.plot(x, y, [31m'k-'[m, linewidth=[31m.5[m)
    plt.axis([xmin, xmax, [31m1.1[m*ymin, [31m1.1[m*ymax])[52;88H[K[52;88H189,0-1[7C58%[17;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# change the spine linewidth[m
    plt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[52;88H[K[52;88H189,0-1[7C59%[14;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)[52;88H[K[52;88H189,0-1[7C60%[11;1H[?25h[?25l[52;78H^O[11;1H[52;78H  [51;9H[27m[23m[29m[m[H[2J[2;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[7;5Hx_diff = x_max - xf
    y_diff = y_max - yf[10;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[15;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print
    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter
    ---------
    args: tuple
        Tuple of multiple input objects
    num: int
        Line number of strings to truncate after (default 10)
    """[m
    [34m# get each object to print[m
    [38;5;130mfor[m arg [38;5;130min[m args:[32;9H[34m# initialize first index, end string, and object string[m[33;9Hind = [31m0[m[34;9Hend_str = [31m' ............'[m[35;9Harg_str = arg.__str__()[37;9H[34m# iterate num times to find num-th index of '\n' for arg_str[m[38;9H[38;5;130mfor[m count [38;5;130min[m [36mrange[m(num):[39;13Hnew_ind = arg_str[ind:].find([31m'[m[35m\n[m[31m'[m)[41;13H[34m# stop iterating if there are fewer than num lines in the string[m[42;13H[38;5;130mif[m new_ind == -[31m1[m:[43;17Hind = new_ind[44;17Hend_str = [31m''[m[45;17H[38;5;130mbreak[m[47;13H[34m# update the index until it reaches num-th line[m[48;13Hind = new_ind + ind + [31m2[m[50;9H[34m# print the string until num-th line[m[51;9H[36mprint[m(arg_str[:ind-[31m2[m] + end_str + [31m'[m[35m\n\n[m[31m'[m)[52;88H347,9[9CBot[51;9H[?25h[?25l[52;78H^O[51;9H
[97m[41mE37: No write since last change (add ! to override)[m[52;78H[K[51;9H[52;88H347,9[9CBot[51;9H[?25h[?25l[52;78H^I[51;9H[52;78H  [51;9H[?25h[?25l[52;78H^I[51;9H[52;78H  [26;1H[27m[23m[29m[m[H[2J[1;1H[31m        that treat backslashes (\) as literal characters, rather than escape characters.
    ylabel: str
        same as xlabel except for y-axis
    xtick_locations: list[float]
        horizontal locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for xtick locations. There should be exactly the same number of labels as locations
    ytick_locations: list[float]
        vertical locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool
        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics 
        that is based on the PostScript language.
    filename: str
        filename for eps
    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add
        more plot options after graph execution
    """[m
    [34m# LaTeX font with size 9[m
    plt.rcParams.update({[23;9H[31m"text.usetex"[m: [36mTrue[m,[24;9H[31m"font.family"[m: [31m'serif'[m,[25;9H[31m"font.size"[m: [31m9[m})[27;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    fig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)
    ax = fig.add_subplot([31m111[m)[31;5H[34m# minimums and maximums of x and y[m
    xmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[35;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax
    [38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[39;5H[34m# axis label coordinate adjustments[m
    x_pos_for_y_label = -xmin/(xmax - xmin)
    y_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[43;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m
    [38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[45;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[46;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[47;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[48;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)
    [38;5;130melse[m:[50;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[51;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H189,0-1[7C55%[26;1H[?25h[?25l[52;78H^I[26;1H[52;78H  [2;1H[27m[23m[29m[m[H[2J[1;1H[34m# personal python functions and classes[m

[35mimport[m numpy [38;5;130mas[m np
[35mimport[m matplotlib.pyplot [38;5;130mas[m plt

[38;5;130mclass[m [36mFUNCS[m:
    [31m"""
    class that returns funcs instance that returns list of custom-defined functions
    
    Attribute
    ---------
    num: int
        number variable used to keep track of total number of custom functions
        
    """[m
    [38;5;130mdef[m [36m__init__[m(self):[17;9Hself.num = [31m0[m[19;5H[38;5;130mdef[m [36m__repr__[m(self):[20;9H[31m"""
        prints custom-defined functions
        """[m[23;9Hself.num = [31m0[m[24;9Hitems = [36mglobals[m().items()[25;9H[38;5;130mfor[m key, value [38;5;130min[m items:[26;13H[38;5;130mif[m [36mcallable[m(value) [38;5;130mand[m value.__module__ == __name__:[27;17Hself.num += [31m1[m[28;17H[36mprint[m(key)[29;9H[38;5;130mreturn[m [36mstr[m(f[31m"total number of custom objects is {self.num}"[m)

[38;5;130mdef[m [36mmatd[m(matrix):
    [31m"""
    displays numpy array as image of matrix (without brackets) for easy view
    
    parameter
    ---------
    matrix: numpy array[float or int]
        numpy array of float or int
    """[m
    [34m# set configurations[m
    zeros = np.zeros(matrix.shape)
    rescale_factor = [31m3[m/[31m5[m
    figsize = (rescale_factor*matrix.shape[[31m1[m], rescale_factor*matrix.shape[[31m0[m])
    matrix = np.flip(matrix, axis=[31m0[m)
    ext1 = matrix.shape[[31m1[m] - [31m0.9[m
    ext2 = matrix.shape[[31m0[m] - [31m0.9[m[48;5H[34m# Create a figure and axes[m
    fig, ax = plt.subplots(figsize=figsize)[51;5H[34m# Set the title and remove the axes ticks[m[52;88H2,0-1[9CTop[2;1H[?25h[?25l[52;78H^I[2;1H[52;78H  [2;1H[?25h[?25l[52;78H^O[2;1H[52;78H  [26;1H[27m[23m[29m[m[H[2J[1;1H[31m        that treat backslashes (\) as literal characters, rather than escape characters.
    ylabel: str
        same as xlabel except for y-axis
    xtick_locations: list[float]
        horizontal locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for xtick locations. There should be exactly the same number of labels as locations
    ytick_locations: list[float]
        vertical locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool
        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics 
        that is based on the PostScript language.
    filename: str
        filename for eps
    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add
        more plot options after graph execution
    """[m
    [34m# LaTeX font with size 9[m
    plt.rcParams.update({[23;9H[31m"text.usetex"[m: [36mTrue[m,[24;9H[31m"font.family"[m: [31m'serif'[m,[25;9H[31m"font.size"[m: [31m9[m})[27;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    fig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)
    ax = fig.add_subplot([31m111[m)[31;5H[34m# minimums and maximums of x and y[m
    xmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[35;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax
    [38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[39;5H[34m# axis label coordinate adjustments[m
    x_pos_for_y_label = -xmin/(xmax - xmin)
    y_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[43;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m
    [38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[45;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[46;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[47;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[48;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)
    [38;5;130melse[m:[50;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[51;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H189,0-1[7C55%[26;1H[?25h[?25l[52;78H^O[26;1H[52;78H  [51;9H[27m[23m[29m[m[H[2J[2;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[7;5Hx_diff = x_max - xf
    y_diff = y_max - yf[10;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[15;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print
    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter
    ---------
    args: tuple
        Tuple of multiple input objects
    num: int
        Line number of strings to truncate after (default 10)
    """[m
    [34m# get each object to print[m
    [38;5;130mfor[m arg [38;5;130min[m args:[32;9H[34m# initialize first index, end string, and object string[m[33;9Hind = [31m0[m[34;9Hend_str = [31m' ............'[m[35;9Harg_str = arg.__str__()[37;9H[34m# iterate num times to find num-th index of '\n' for arg_str[m[38;9H[38;5;130mfor[m count [38;5;130min[m [36mrange[m(num):[39;13Hnew_ind = arg_str[ind:].find([31m'[m[35m\n[m[31m'[m)[41;13H[34m# stop iterating if there are fewer than num lines in the string[m[42;13H[38;5;130mif[m new_ind == -[31m1[m:[43;17Hind = new_ind[44;17Hend_str = [31m''[m[45;17H[38;5;130mbreak[m[47;13H[34m# update the index until it reaches num-th line[m[48;13Hind = new_ind + ind + [31m2[m[50;9H[34m# print the string until num-th line[m[51;9H[36mprint[m(arg_str[:ind-[31m2[m] + end_str + [31m'[m[35m\n\n[m[31m'[m)[52;88H347,9[9CBot[51;9H[?25h[?25l[52;78H^I[51;9H[52;78H  [26;1H[27m[23m[29m[m[H[2J[1;1H[31m        that treat backslashes (\) as literal characters, rather than escape characters.
    ylabel: str
        same as xlabel except for y-axis
    xtick_locations: list[float]
        horizontal locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for xtick locations. There should be exactly the same number of labels as locations
    ytick_locations: list[float]
        vertical locations of ticks. Default is empty list.
    xtick_labels: list[str]
        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool
        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics 
        that is based on the PostScript language.
    filename: str
        filename for eps
    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add
        more plot options after graph execution
    """[m
    [34m# LaTeX font with size 9[m
    plt.rcParams.update({[23;9H[31m"text.usetex"[m: [36mTrue[m,[24;9H[31m"font.family"[m: [31m'serif'[m,[25;9H[31m"font.size"[m: [31m9[m})[27;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    fig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)
    ax = fig.add_subplot([31m111[m)[31;5H[34m# minimums and maximums of x and y[m
    xmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[35;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax
    [38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[39;5H[34m# axis label coordinate adjustments[m
    x_pos_for_y_label = -xmin/(xmax - xmin)
    y_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[43;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m
    [38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[45;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[46;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[47;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[48;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)
    [38;5;130melse[m:[50;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[51;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H189,0-1[7C55%[26;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    xlabel: str
        lable for x-axis. The default string is raw string. In Python, an r string, also known as 
        a raw string, is a string literal prefixed with the letter r. It is used to create strings [m[52;88H[K[52;88H189,0-1[7C54%[29;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x-axis values
    y: list[float]
        y-axis values[m[52;88H[K[52;88H189,0-1[7C53%[32;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Parameters
    ----------
    x: list[float][m[52;88H[K[52;88H189,0-1[7C52%[35;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    plotting function without fancy coloring designed for LaTeX pdf file. You can save the plot as
    eps file, which you can insert in LaTeX document.[m[52;88H[K[52;88H189,0-1[7C51%[38;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hfilename=[31m'figure.eps'[m,[2;9Hshow=[36mTrue[m):
    [31m"""[m[52;88H[K[52;88H189,0-1[7C50%[41;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hytick_locations = [],[2;9Hytick_labels = [],[3;9Hsave=[36mFalse[m,[52;88H[K[52;88H189,0-1[7C48%[44;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hylabel=[31mr'$y$'[m,[2;9Hxtick_locations = [],[3;9Hxtick_labels = [],[52;88H[K[52;88H188,1[9C47%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hx,[2;9Hy,[3;9Hxlabel=[31mr'$x$'[m,[52;88H[K[52;88H185,1[9C46%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[36mprint[m(*formatted_args, sep=[31m'    '[m)

[38;5;130mdef[m [36mgraph[m([52;88H[K[52;88H182,1[9C45%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Tuple of numbers to change the format 
    """[m
    formatted_args = [36mtuple[m([36mmap[m(float2SI, args))[52;88H[K[52;88H179,1[9C44%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    Parameter
    args: tuple[float or int][m[52;88H[K[52;88H176,1[9C43%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[31m"""
    Same as print function, except it takes numbers as arguments and float2SI is used to each number
    arguments for easier inspection[m[52;88H[K[52;88H173,1[9C42%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mreturn[m num+prefix

[38;5;130mdef[m [36mprint_formatted[m(*args):[52;88H[K[52;88H170,1[9C41%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hdecimal_place = [31m1[m [38;5;130mif[m prefix != [31m''[m [38;5;130melse[m [31m2[m
    num = [31m'{:.1f}'[m.format([36mround[m(digits, decimal_place)).zfill([31m4[m + decimal_place)[52;88H[K[52;88H167,1[9C40%[46;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    xtick_labels: list[str]
        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool[m[52;88H[K[52;88H167,1[9C41%[43;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics 
        that is based on the PostScript language.
    filename: str[m[52;88H[K[52;88H167,1[9C42%[40;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        filename for eps
    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add[m[52;88H[K[52;88H167,1[9C43%[37;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        more plot options after graph execution
    """[m
    [34m# LaTeX font with size 9[m[52;88H[K[52;88H167,1[9C44%[34;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.rcParams.update({[50;9H[31m"text.usetex"[m: [36mTrue[m,[51;9H[31m"font.family"[m: [31m'serif'[m,[52;88H[K[52;88H167,1[9C45%[31;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9H[31m"font.size"[m: [31m9[m})[51;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m[52;88H[K[52;88H167,1[9C46%[28;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hfig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)
    ax = fig.add_subplot([31m111[m)[52;88H[K[52;88H167,1[9C47%[25;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# minimums and maximums of x and y[m
    xmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[52;88H[K[52;88H167,1[9C48%[22;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax[52;88H[K[52;88H167,1[9C50%[19;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[51;5H[34m# axis label coordinate adjustments[m[52;88H[K[52;88H167,1[9C51%[16;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_pos_for_y_label = -xmin/(xmax - xmin)
    y_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[52;88H[K[52;88H167,1[9C52%[13;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m
    [38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[51;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[52;88H[K[52;88H167,1[9C53%[10;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[50;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[51;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)[52;88H[K[52;88H167,1[9C54%[7;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130melse[m:[50;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[51;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H[K[52;88H169,1[9C55%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hax.spines[[31m'bottom'[m].set_position(([31m'data'[m, [31m0[m))
    ax.set_xlabel(xlabel)[52;88H[K[52;88H172,1[9C56%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.xaxis.set_label_coords([31m1.02[m, y_pos_for_x_label)
    ax.plot([31m1[m, [31m0[m, [31m">k"[m, markersize=[31m3[m, transform=ax.get_yaxis_transform(), clip_on=[36mFalse[m)[52;88H[K[52;88H175,1[9C57%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    plt.plot(x, y, [31m'k-'[m, linewidth=[31m.5[m)
    plt.axis([xmin, xmax, [31m1.1[m*ymin, [31m1.1[m*ymax])[52;88H[K[52;88H178,1[9C58%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# change the spine linewidth[m
    plt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[52;88H[K[52;88H181,1[9C59%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)[52;88H[K[52;88H184,1[9C60%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.spines[[31m'right'[m].set_visible([36mFalse[m)[51;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m[52;88H[K[52;88H187,1[9C61%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[51;5H[34m# tick locations with labels[m[52;88H[K[52;88H190,1[9C62%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[52;88H[K[52;88H193,0-1[7C63%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[51;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H196,1[9C64%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H199,1[9C65%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H202,1[9C66%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H205,0-1[7C67%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H208,1[9C68%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H211,1[9C69%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily[m[52;88H[K[52;88H214,1[9C70%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H217,1[9C71%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H220,0-1[7C72%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H223,1[9C73%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H226,1[9C74%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H229,1[9C75%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H232,1[9C76%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H235,1[9C77%[6;1H[?25h[?25l[52;89H58,26[29;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H258,26[8C78%[26;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H258,26[8C79%[23;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[38;5;130mfor[m y [38;5;130min[m Y:[51;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H258,26[8C80%[20;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y)[52;88H[K[52;88H258,26[8C81%[17;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H258,26[8C82%[14;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H258,26[8C83%[11;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H258,26[8C84%[8;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H259,15[8C85%[6;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H262,13[8C86%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;19H[31m[106m[[5C][m[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H265,25[8C87%[6;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily[m[52;88H[K[52;88H265,25[8C86%[9;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H265,25[8C85%[12;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H265,25[8C86%[9;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H265,25[8C87%[6;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;19H[31m[float][m[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H268,26[8C88%[6;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H268,26[8C87%[9;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily[m[52;88H[K[52;88H268,26[8C86%[12;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H268,26[8C85%[15;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H268,26[8C86%[12;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H268,26[8C87%[9;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily[m[52;88H[K[52;88H268,26[8C86%[12;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H268,26[8C85%[15;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H268,26[8C84%[18;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H268,26[8C83%[21;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H268,26[8C82%[24;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H268,26[8C81%[27;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H268,26[8C80%[30;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y)[52;88H[K[52;88H268,26[8C81%[27;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H268,26[8C82%[24;26H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H268,26[8C83%[21;26H[?25h[?25l[52;89H71,18[24;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H271,18[8C84%[21;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H271,18[8C85%[18;18H[?25h[?25l[52;89H81,14[28;14H[?25h[?25l[27;22H[106m([13C)[m[52;90H0,22[27;22H[?25h[?25l([13C)[52;90H1,24[28;24H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H281,24[8C84%[31;24H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H281,24[8C83%[34;24H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H281,24[8C84%[31;24H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H281,24[8C85%[28;24H[?25h[?25l[29;14H[106m[[1C][m[52;90H2,16[29;16H[?25h[?25l[[1C][52;90H1,25[28;25H[?25h[?25l[52;90H0[27;25H[?25h[?25l[52;90H1[28;25H[?25h[?25l[52;90H4,10[31;10H[?25h[?25l[52;90H6,15[33;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H286,15[8C86%[30;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H286,15[8C87%[27;15H[?25h[?25l[52;89H91,18[32;18H[?25h[?25l[52;90H0,15[31;15H[?25h[?25l[52;89H89[30;15H[?25h[?25l[52;89H91[32;15H[?25h[?25l[52;90H2,4 [33;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H292,4[9C88%[30;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H292,4[9C87%[33;4H[?25h[?25l[32;17H[106m([mx, y[106m)[m[52;90H1,22[32;22H[?25h[?25l(x, y)[52;90H2,4 [33;4H[?25h[?25l[52;90H1,21[32;21H[?25h[?25l[52;90H0,28[31;28H[?25h[?25l[52;89H89[30;28H[?25h[?25l[52;89H90,29[31;29H[?25h[?25l[52;89H89,35[30;35H[?25h[?25lmin[106m([my[106m)[m[52;93H8[30;38H[?25h[?25l(y)[32;17H[106m([mx, y[106m)[m[52;89H91,22[32;22H[?25h[?25l(x, y)[52;90H2,4 [33;4H[?25h[?25l[52;90H1,15[32;15H[?25h[?25l[52;90H0,20[31;20H[?25h[?25l[52;89H89,21[30;21H[?25h[?25l[52;89H91[32;21H[?25h[?25l[52;90H2,4 [33;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily[m[52;88H[K[52;88H292,4[9C86%[36;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H292,4[9C85%[39;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H292,4[9C84%[42;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H292,4[9C83%[45;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H290,20[8C82%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H287,4[9C81%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[46;13H[106m([mgrid[106m)[m[52;88H[K[52;88H284,18[8C80%[46;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[49;13H(grid)[52;88H[K[52;88H281,20[8C79%[46;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[38;5;130mfor[m y [38;5;130min[m Y:[51;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H281,20[8C80%[43;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y)[52;88H[K[52;88H281,20[8C81%[40;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H281,20[8C82%[37;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H281,20[8C83%[34;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H281,20[8C84%[31;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H281,20[8C85%[28;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H281,20[8C86%[25;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H281,20[8C87%[22;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H281,20[8C88%[19;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H281,20[8C89%[16;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter[m[52;88H[K[52;88H281,20[8C90%[13;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    ---------
    args: tuple
        Tuple of multiple input objects[m[52;88H[K[52;88H281,20[8C91%[10;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H281,20[8C90%[13;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H281,20[8C89%[16;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H281,20[8C88%[19;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H281,20[8C87%[22;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily[m[52;88H[K[52;88H281,20[8C86%[25;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H281,20[8C85%[28;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H281,20[8C84%[31;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H281,20[8C83%[34;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H281,20[8C82%[37;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H281,20[8C81%[40;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H281,20[8C82%[37;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H281,20[8C83%[34;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H281,20[8C84%[31;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H281,20[8C85%[28;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H281,20[8C86%[25;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H281,20[8C87%[22;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H281,20[8C88%[19;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H281,20[8C89%[16;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H281,20[8C88%[19;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H281,20[8C87%[22;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily[m[52;88H[K[52;88H281,20[8C86%[25;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H281,20[8C85%[28;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H281,20[8C84%[31;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H281,20[8C85%[28;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H281,20[8C86%[25;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H281,20[8C87%[22;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily[m[52;88H[K[52;88H281,20[8C86%[25;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H281,20[8C85%[28;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H281,20[8C84%[31;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H281,20[8C83%[34;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H281,20[8C82%[37;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H281,20[8C81%[40;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H281,20[8C82%[37;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H281,20[8C83%[34;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H281,20[8C84%[31;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H281,20[8C85%[28;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H281,20[8C86%[25;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H281,20[8C87%[22;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H281,20[8C88%[19;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H281,20[8C87%[22;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily[m[52;88H[K[52;88H281,20[8C86%[25;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H281,20[8C85%[28;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H281,20[8C84%[31;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H281,20[8C83%[34;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H281,20[8C82%[37;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H281,20[8C81%[40;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H281,20[8C80%[43;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[52;88H[K[52;88H281,20[8C79%[46;20H[?25h[?25l[52;89H59,15[24;15H[?25h[?25l[52;78Hk[24;15H[52;78H [23;19H[52;90H8,19[23;19H[?25h[?25l[52;78Hk[23;19H[52;78H [22;19H[52;90H7[22;19H[?25h[?25l[52;78Hl[22;19H[52;78H [22;20H[52;92H20[22;20H[?25h[?25l[52;78Hl[22;20H[52;78H [22;21H[52;93H1[22;21H[?25h[?25l[52;78Hl[22;21H[52;78H [22;22H[52;93H2[22;22H[?25h[?25l[52;78Hl[22;22H[52;78H [22;23H[52;93H3[22;23H[?25h[?25l[52;78Hl[22;23H[52;78H [22;24H[52;93H4[22;24H[?25h[?25l[52;78Hl[22;24H[52;78H [22;25H[52;93H5[22;25H[?25h[?25l[52;78Hl[22;25H[52;78H [22;26H[52;93H6[22;26H[?25h[?25l[52;78Hl[22;26H[52;78H [22;27H[52;93H7[22;27H[?25h[?25l[52;78Hl[22;27H[52;78H [22;28H[52;93H8[22;28H[?25h[?25l[52;78Hl[22;28H[52;78H [22;29H[52;93H9[22;29H[?25h[?25l[52;78Hl[22;29H[52;78H [22;30H[52;92H30[22;30H[?25h[?25l[52;78Hl[22;30H[52;78H [22;31H[52;93H1[22;31H[?25h[?25l[52;78Hl[22;31H[52;78H [22;32H[52;93H2[22;32H[?25h[?25l[52;78Hl[22;32H[52;78H [22;33H[52;93H3[22;33H[?25h[?25l[52;78Hl[22;33H[52;78H [22;34H[52;93H4[22;34H[?25h[?25l[52;78Hl[22;34H[52;78H [22;35H[52;93H5[22;35H[?25h[?25l[52;78Hl[22;35H[52;78H [22;36H[52;93H6[22;36H[?25h[?25l[52;78Hl[22;36H[52;78H [22;37H[52;93H7[22;37H[?25h[?25l[52;78Hj[22;37H[52;78H [23;37H[52;90H8[23;37H[?25h[?25l[52;78Hj[23;37H[52;78H [24;15H[52;90H9,15[24;15H[?25h[?25l[52;78Ha[24;15H[52;78H [24;16H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H259,16[8C79%[24;16H[?25h[?25l[31m.[m[52;93H7[24;17H[?25h[?25l[31m [m[52;93H8[24;18H[?25h[?25l[31mF[m[52;93H9[24;19H[?25h[?25l[31mi[m[52;92H20[24;20H[?25h[?25l[31mr[m[52;93H1[24;21H[?25h[?25l[31ms[m[52;93H2[24;22H[?25h[?25l[31mt[m[52;93H3[24;23H[?25h[?25l[31m,[m[52;93H4[24;24H[?25h[?25l[31m [m[52;93H5[24;25H[?25h[?25l[31mi[m[52;93H6[24;26H[?25h[?25l[31mm[m[52;93H7[24;27H[?25h[?25l[31mp[m[52;93H8[24;28H[?25h[?25l[31mo[m[52;93H9[24;29H[?25h[?25l[31mr[m[52;92H30[24;30H[?25h[?25l[31mt[m[52;93H1[24;31H[?25h[?25l[31m [m[52;93H2[24;32H[?25h[?25l[31mi[m[52;93H3[24;33H[?25h[?25l[31mn[m[52;93H4[24;34H[?25h[?25l[31mt[m[52;93H5[24;35H[?25h[?25l[31me[m[52;93H6[24;36H[?25h[?25l[31mr[m[52;93H7[24;37H[?25h[?25l[31ma[m[52;93H8[24;38H[?25h[?25l[31mc[m[52;93H9[24;39H[?25h[?25l[31mt[m[52;92H40[24;40H[?25h[?25l[24;39H[K[52;92H39[24;39H[?25h[?25l[24;38H[K[52;93H8[24;38H[?25h[?25l[24;37H[K[52;93H7[24;37H[?25h[?25l[24;36H[K[52;93H6[24;36H[?25h[?25l[24;35H[K[52;93H5[24;35H[?25h[?25l[24;34H[K[52;93H4[24;34H[?25h[?25l[24;33H[K[52;93H3[24;33H[?25h[?25l[24;32H[K[52;93H2[24;32H[?25h[?25l[24;31H[K[52;93H1[24;31H[?25h[?25l[24;30H[K[52;93H0[24;30H[?25h[?25l[24;29H[K[52;92H29[24;29H[?25h[?25l[24;28H[K[52;93H8[24;28H[?25h[?25l[24;27H[K[52;93H7[24;27H[?25h[?25l[24;26H[K[52;93H6[24;26H[?25h[?25l[24;25H[K[52;93H5[24;25H[?25h[?25l[31mf[m[52;93H6[24;26H[?25h[?25l[31mr[m[52;93H7[24;27H[?25h[?25l[31mo[m[52;93H8[24;28H[?25h[?25l[31mm[m[52;93H9[24;29H[?25h[?25l[31m [m[52;92H30[24;30H[?25h[?25l[31mi[m[52;93H1[24;31H[?25h[?25l[31mp[m[52;93H2[24;32H[?25h[?25l[31my[m[52;93H3[24;33H[?25h[?25l[31mw[m[52;93H4[24;34H[?25h[?25l[31mi[m[52;93H5[24;35H[?25h[?25l[31md[m[52;93H6[24;36H[?25h[?25l[31mg[m[52;93H7[24;37H[?25h[?25l[31me[m[52;93H8[24;38H[?25h[?25l[31mt[m[52;93H9[24;39H[?25h[?25l[31ms[m[52;92H40[24;40H[?25h[?25l[31m [m[52;93H1[24;41H[?25h[?25l[31mi[m[52;93H2[24;42H[?25h[?25l[31mm[m[52;93H3[24;43H[?25h[?25l[31mp[m[52;93H4[24;44H[?25h[?25l[31mo[m[52;93H5[24;45H[?25h[?25l[31mr[m[52;93H6[24;46H[?25h[?25l[31mt[m[52;93H7[24;47H[?25h[?25l[31m [m[52;93H8[24;48H[?25h[?25l[31mi[m[52;93H9[24;49H[?25h[?25l[31mn[m[52;92H50[24;50H[?25h[?25l[31mt[m[52;93H1[24;51H[?25h[?25l[31me[m[52;93H2[24;52H[?25h[?25l[31mr[m[52;93H3[24;53H[?25h[?25l[31ma[m[52;93H4[24;54H[?25h[?25l[31mc[m[52;93H5[24;55H[?25h[?25l[31mt[m[52;93H6[24;56H[?25h[?25l[31m.[m[52;93H7[24;57H[?25h[?25l[31m [m[52;93H8[24;58H[?25h[?25l[31mT[m[52;93H9[24;59H[?25h[?25l[31mh[m[52;92H60[24;60H[?25h[?25l[31me[m[52;93H1[24;61H[?25h[?25l[31mn[m[52;93H2[24;62H[?25h[?25l[31m [m[52;93H3[24;63H[?25h[?25l[31mf[m[52;93H4[24;64H[?25h[?25l[31mr[m[52;93H5[24;65H[?25h[?25l[31mo[m[52;93H6[24;66H[?25h[?25l[31mm[m[52;93H7[24;67H[?25h[?25l[31m [m[52;93H8[24;68H[?25h[?25l[31mp[m[52;93H9[24;69H[?25h[?25l[31ma[m[52;92H70[24;70H[?25h[?25l[31mr[m[52;93H1[24;71H[?25h[?25l[31mt[m[52;93H2[24;72H[?25h[?25l[31mi[m[52;93H3[24;73H[?25h[?25l[31ma[m[52;93H4[24;74H[?25h[?25l[31ml[m[52;93H5[24;75H[?25h[?25l[31m [m[52;93H6[24;76H[?25h[?25l[31mi[m[52;93H7[24;77H[?25h[?25l[31mm[m[52;93H8[24;78H[?25h[?25l[31mp[m[52;93H9[24;79H[?25h[?25l[31mo[m[52;92H80[24;80H[?25h[?25l[31mr[m[52;93H1[24;81H[?25h[?25l[31mt[m[52;93H2[24;82H[?25h[?25l[31m [m[52;93H3[24;83H[?25h[?25l[31mf[m[52;93H4[24;84H[?25h[?25l[31mu[m[52;93H5[24;85H[?25h[?25l[24;84H[K[52;93H4[24;84H[?25h[?25l[24;83H[K[52;93H3[24;83H[?25h[?25l[24;82H[K[52;93H2[24;82H[?25h[?25l[24;81H[K[52;93H1[24;81H[?25h[?25l[24;80H[K[52;93H0[24;80H[?25h[?25l[24;79H[K[52;92H79[24;79H[?25h[?25l[24;78H[K[52;93H8[24;78H[?25h[?25l[24;77H[K[52;93H7[24;77H[?25h[?25l[24;76H[K[52;93H6[24;76H[?25h[?25l[24;75H[K[52;93H5[24;75H[?25h[?25l[24;74H[K[52;93H4[24;74H[?25h[?25l[24;73H[K[52;93H3[24;73H[?25h[?25l[24;72H[K[52;93H2[24;72H[?25h[?25l[24;71H[K[52;93H1[24;71H[?25h[?25l[24;70H[K[52;93H0[24;70H[?25h[?25l[24;69H[K[52;92H69[24;69H[?25h[?25l[24;68H[K[52;93H8[24;68H[?25h[?25l[31mf[m[52;93H9[24;69H[?25h[?25l[31mu[m[52;92H70[24;70H[?25h[?25l[31mn[m[52;93H1[24;71H[?25h[?25l[31mc[m[52;93H2[24;72H[?25h[?25l[31mt[m[52;93H3[24;73H[?25h[?25l[31mo[m[52;93H4[24;74H[?25h[?25l[31mo[m[52;93H5[24;75H[?25h[?25l[31ml[m[52;93H6[24;76H[?25h[?25l[31ms[m[52;93H7[24;77H[?25h[?25l[31m [m[52;93H8[24;78H[?25h[?25l[31mi[m[52;93H9[24;79H[?25h[?25l[31mm[m[52;92H80[24;80H[?25h[?25l[31mp[m[52;93H1[24;81H[?25h[?25l[31mo[m[52;93H2[24;82H[?25h[?25l[31mr[m[52;93H3[24;83H[?25h[?25l[31mt[m[52;93H4[24;84H[?25h[?25l[31m [m[52;93H5[24;85H[?25h[?25l[31mp[m[52;93H6[24;86H[?25h[?25l[31ma[m[52;93H7[24;87H[?25h[?25l[31mr[m[52;93H8[24;88H[?25h[?25l[31mt[m[52;93H9[24;89H[?25h[?25l[31mi[m[52;92H90[24;90H[?25h[?25l[31ma[m[52;93H1[24;91H[?25h[?25l[31ml[m[52;93H2[24;92H[?25h[?25l[31m.[m[52;93H3[24;93H[?25h[?25l[25;51r[25;1H[L[1;52r[25;1H[31m    [m[52;88H[K[52;88H260,5[9C79%[25;5H[?25h[?25l[31mY[m[52;92H6[25;6H[?25h[?25l[31mo[m[52;92H7[25;7H[?25h[?25l[31mu[m[52;92H8[25;8H[?25h[?25l[31m [m[52;92H9[25;9H[?25h[?25l[31mc[m[52;92H10[25;10H[?25h[?25l[31ma[m[52;93H1[25;11H[?25h[?25l[31mn[m[52;93H2[25;12H[?25h[?25l[31m [m[52;93H3[25;13H[?25h[?25l[31mu[m[52;93H4[25;14H[?25h[?25l[31ms[m[52;93H5[25;15H[?25h[?25l[31me[m[52;93H6[25;16H[?25h[?25l[31m [m[52;93H7[25;17H[?25h[?25l[31mp[m[52;93H8[25;18H[?25h[?25l[31ma[m[52;93H9[25;19H[?25h[?25l[31mr[m[52;92H20[25;20H[?25h[?25l[31mt[m[52;93H1[25;21H[?25h[?25l[31mi[m[52;93H2[25;22H[?25h[?25l[31ma[m[52;93H3[25;23H[?25h[?25l[31ml[m[52;93H4[25;24H[?25h[?25l[31m [m[52;93H5[25;25H[?25h[?25l[31mm[m[52;93H6[25;26H[?25h[?25l[31me[m[52;93H7[25;27H[?25h[?25l[31mt[m[52;93H8[25;28H[?25h[?25l[31mh[m[52;93H9[25;29H[?25h[?25l[31mo[m[52;92H30[25;30H[?25h[?25l[31md[m[52;93H1[25;31H[?25h[?25l[31m [m[52;93H2[25;32H[?25h[?25l[31mt[m[52;93H3[25;33H[?25h[?25l[31mo[m[52;93H4[25;34H[?25h[?25l[31m [m[52;93H5[25;35H[?25h[?25l[31mc[m[52;93H6[25;36H[?25h[?25l[31mo[m[52;93H7[25;37H[?25h[?25l[31mm[m[52;93H8[25;38H[?25h[?25l[31mb[m[52;93H9[25;39H[?25h[?25l[31mi[m[52;92H40[25;40H[?25h[?25l[31mn[m[52;93H1[25;41H[?25h[?25l[31me[m[52;93H2[25;42H[?25h[?25l[31m [m[52;93H3[25;43H[?25h[?25l[31mi[m[52;93H4[25;44H[?25h[?25l[31mn[m[52;93H5[25;45H[?25h[?25l[31mt[m[52;93H6[25;46H[?25h[?25l[31me[m[52;93H7[25;47H[?25h[?25l[31mr[m[52;93H8[25;48H[?25h[?25l[31ma[m[52;93H9[25;49H[?25h[?25l[31mc[m[52;92H50[25;50H[?25h[?25l[25;49H[K[52;92H49[25;49H[?25h[?25l[25;48H[K[52;93H8[25;48H[?25h[?25l[25;47H[K[52;93H7[25;47H[?25h[?25l[25;46H[K[52;93H6[25;46H[?25h[?25l[25;45H[K[52;93H5[25;45H[?25h[?25l[25;44H[K[52;93H4[25;44H[?25h[?25l[25;43H[K[52;93H3[25;43H[?25h[?25l[25;42H[K[52;93H2[25;42H[?25h[?25l[25;41H[K[52;93H1[25;41H[?25h[?25l[25;40H[K[52;93H0[25;40H[?25h[?25l[25;39H[K[52;92H39[25;39H[?25h[?25l[25;38H[K[52;93H8[25;38H[?25h[?25l[25;37H[K[52;93H7[25;37H[?25h[?25l[25;36H[K[52;93H6[25;36H[?25h[?25l[25;35H[K[52;93H5[25;35H[?25h[?25l[25;34H[K[52;93H4[25;34H[?25h[?25l[25;33H[K[52;93H3[25;33H[?25h[?25l[25;32H[K[52;93H2[25;32H[?25h[?25l[31mt[m[52;93H3[25;33H[?25h[?25l[31mo[m[52;93H4[25;34H[?25h[?25l[31m [m[52;93H5[25;35H[?25h[?25l[31mc[m[52;93H6[25;36H[?25h[?25l[31mr[m[52;93H7[25;37H[?25h[?25l[31me[m[52;93H8[25;38H[?25h[?25l[31ma[m[52;93H9[25;39H[?25h[?25l[31mt[m[52;92H40[25;40H[?25h[?25l[31me[m[52;93H1[25;41H[?25h[?25l[31m [m[52;93H2[25;42H[?25h[?25l[31ma[m[52;93H3[25;43H[?25h[?25l[31mn[m[52;93H4[25;44H[?25h[?25l[31m [m[52;93H5[25;45H[?25h[?25l[31ma[m[52;93H6[25;46H[?25h[?25l[31mr[m[52;93H7[25;47H[?25h[?25l[31mg[m[52;93H8[25;48H[?25h[?25l[31mu[m[52;93H9[25;49H[?25h[?25l[31mm[m[52;92H50[25;50H[?25h[?25l[31me[m[52;93H1[25;51H[?25h[?25l[31mn[m[52;93H2[25;52H[?25h[?25l[31mt[m[52;93H3[25;53H[?25h[?25l[31m [m[52;93H4[25;54H[?25h[?25l[31mf[m[52;93H5[25;55H[?25h[?25l[31mo[m[52;93H6[25;56H[?25h[?25l[31mr[m[52;93H7[25;57H[?25h[?25l[31m [m[52;93H8[25;58H[?25h[?25l[31mi[m[52;93H9[25;59H[?25h[?25l[31mn[m[52;92H60[25;60H[?25h[?25l[31mt[m[52;93H1[25;61H[?25h[?25l[31me[m[52;93H2[25;62H[?25h[?25l[31mr[m[52;93H3[25;63H[?25h[?25l[31ma[m[52;93H4[25;64H[?25h[?25l[31mc[m[52;93H5[25;65H[?25h[?25l[31mt[m[52;93H6[25;66H[?25h[?25l[31m:[m[52;93H7[25;67H[?25h[?25l[31m [m[52;93H8[25;68H[?25h[?25l[31mi[m[52;93H9[25;69H[?25h[?25l[31mn[m[52;92H70[25;70H[?25h[?25l[31mp[m[52;93H1[25;71H[?25h[?25l[31mu[m[52;93H2[25;72H[?25h[?25l[31mt[m[52;93H3[25;73H[?25h[?25l[31m_[m[52;93H4[25;74H[?25h[?25l[31mf[m[52;93H5[25;75H[?25h[?25l[31mu[m[52;93H6[25;76H[?25h[?25l[31mn[m[52;93H7[25;77H[?25h[?25l[31mc[m[52;93H8[25;78H[?25h[?25l[31mt[m[52;93H9[25;79H[?25h[?25l[25;78H[K[52;93H8[25;78H[?25h[?25l[25;77H[K[52;93H7[25;77H[?25h[?25l[31mc[m[52;93H8[25;78H[?25h[?25l[31m [m[52;93H9[25;79H[?25h[?25l[31m=[m[52;92H80[25;80H[?25h[?25l[31m [m[52;93H1[25;81H[?25h[?25l[25;80H[K[52;93H0[25;80H[?25h[?25l[25;79H[K[52;92H79[25;79H[?25h[?25l[25;78H[K[52;93H8[25;78H[?25h[?25l[25;77H[K[52;93H7[25;77H[?25h[?25l[25;76H[K[52;93H6[25;76H[?25h[?25l[25;75H[K[52;93H5[25;75H[?25h[?25l[25;74H[K[52;93H4[25;74H[?25h[?25l[31mf[m[52;93H5[25;75H[?25h[?25l[31mn[m[52;93H6[25;76H[?25h[?25l[31m [m[52;93H7[25;77H[?25h[?25l[31m=[m[52;93H8[25;78H[?25h[?25l[31m [m[52;93H9[25;79H[?25h[?25l[25;78H[K[52;93H8[25;78H[?25h[?25l[25;77H[K[52;93H7[25;77H[?25h[?25l[25;76H[K[52;93H6[25;76H[?25h[?25l[25;75H[K[52;93H5[25;75H[?25h[?25l[25;74H[K[52;93H4[25;74H[?25h[?25l[25;73H[K[52;93H3[25;73H[?25h[?25l[25;72H[K[52;93H2[25;72H[?25h[?25l[25;71H[K[52;93H1[25;71H[?25h[?25l[25;70H[K[52;93H0[25;70H[?25h[?25l[25;69H[K[52;92H69[25;69H[?25h[?25l[25;68H[K[52;93H8[25;68H[?25h[?25l[26;51r[26;1H[L[1;52r[26;1H[31m    [m[52;88H[K[52;88H261,5[9C78%[26;5H[?25h[?25l[31m    [m[52;92H9[26;9H[?25h[?25l[31mi[m[52;92H10[26;10H[?25h[?25l[31mn[m[52;93H1[26;11H[?25h[?25l[31mt[m[52;93H2[26;12H[?25h[?25l[31me[m[52;93H3[26;13H[?25h[?25l[31mr[m[52;93H4[26;14H[?25h[?25l[31ma[m[52;93H5[26;15H[?25h[?25l[31mc[m[52;93H6[26;16H[?25h[?25l[31mt[m[52;93H7[26;17H[?25h[?25l[31m_[m[52;93H8[26;18H[?25h[?25l[31mf[m[52;93H9[26;19H[?25h[?25l[31mn[m[52;92H20[26;20H[?25h[?25l[26;19H[K[52;92H19[26;19H[?25h[?25l[31mn[m[52;92H20[26;20H[?25h[?25l[31m [m[52;93H1[26;21H[?25h[?25l[31m=[m[52;93H2[26;22H[?25h[?25l[31m [m[52;93H3[26;23H[?25h[?25l[31mp[m[52;93H4[26;24H[?25h[?25l[31ma[m[52;93H5[26;25H[?25h[?25l[31mr[m[52;93H6[26;26H[?25h[?25l[31mt[m[52;93H7[26;27H[?25h[?25l[31mi[m[52;93H8[26;28H[?25h[?25l[31ma[m[52;93H9[26;29H[?25h[?25l[31ml[m[52;92H30[26;30H[?25h[?25l[31m([m[52;93H1[26;31H[?25h[?25l[31mf[m[52;93H2[26;32H[?25h[?25l[31mu[m[52;93H3[26;33H[?25h[?25l[31mn[m[52;93H4[26;34H[?25h[?25l[31mc[m[52;93H5[26;35H[?25h[?25l[31mt[m[52;93H6[26;36H[?25h[?25l[31mi[m[52;93H7[26;37H[?25h[?25l[26;36H[K[52;93H6[26;36H[?25h[?25l[26;35H[K[52;93H5[26;35H[?25h[?25l[26;34H[K[52;93H4[26;34H[?25h[?25l[26;33H[K[52;93H3[26;33H[?25h[?25l[26;32H[K[52;93H2[26;32H[?25h[?25l[26;31H[K[52;93H1[26;31H[?25h[?25l[31mi[m[52;93H2[26;32H[?25h[?25l[31mn[m[52;93H3[26;33H[?25h[?25l[31mp[m[52;93H4[26;34H[?25h[?25l[31mu[m[52;93H5[26;35H[?25h[?25l[31mt[m[52;93H6[26;36H[?25h[?25l[31m+[m[52;93H7[26;37H[?25h[?25l[31mf[m[52;93H8[26;38H[?25h[?25l[31mu[m[52;93H9[26;39H[?25h[?25l[26;38H[K[52;93H8[26;38H[?25h[?25l[26;37H[K[52;93H7[26;37H[?25h[?25l[26;36H[K[52;93H6[26;36H[?25h[?25l[31m_[m[52;93H7[26;37H[?25h[?25l[31mf[m[52;93H8[26;38H[?25h[?25l[31mn[m[52;93H9[26;39H[?25h[?25l[31m,[m[52;92H40[26;40H[?25h[?25l[31m [m[52;93H1[26;41H[?25h[?25l[26;40H[K[52;93H0[26;40H[?25h[?25l[26;39H[K[52;92H39[26;39H[?25h[?25l[26;38H[K[52;93H8[26;38H[?25h[?25l[26;37H[K[52;93H7[26;37H[?25h[?25l[26;36H[K[52;93H6[26;36H[?25h[?25l[26;35H[K[52;93H5[26;35H[?25h[?25l[26;34H[K[52;93H4[26;34H[?25h[?25l[26;33H[K[52;93H3[26;33H[?25h[?25l[26;32H[K[52;93H2[26;32H[?25h[?25l[26;31H[K[52;93H1[26;31H[?25h[?25l[31mi[m[52;93H2[26;32H[?25h[?25l[31mn[m[52;93H3[26;33H[?25h[?25l[31mt[m[52;93H4[26;34H[?25h[?25l[31me[m[52;93H5[26;35H[?25h[?25l[31mr[m[52;93H6[26;36H[?25h[?25l[31ma[m[52;93H7[26;37H[?25h[?25l[31mc[m[52;93H8[26;38H[?25h[?25l[31mt[m[52;93H9[26;39H[?25h[?25l[31m_[m[52;92H40[26;40H[?25h[?25l[31mp[m[52;93H1[26;41H[?25h[?25l[31ml[m[52;93H2[26;42H[?25h[?25l[31mo[m[52;93H3[26;43H[?25h[?25l[31mt[m[52;93H4[26;44H[?25h[?25l[31m,[m[52;93H5[26;45H[?25h[?25l[31m [m[52;93H6[26;46H[?25h[?25l[31mx[m[52;93H7[26;47H[?25h[?25l[31m,[m[52;93H8[26;48H[?25h[?25l[31m [m[52;93H9[26;49H[?25h[?25l[31mY[m[52;92H50[26;50H[?25h[?25l[31m)[m[26;30H[31m[106m([19C)[m[52;93H1[26;51H[?25h[?25l[27;51r[27;1H[L[1;52r[27;1H[31m        [m[52;88H[K[52;88H262,9[9C78%[26;30H[31m([19C)[27;9H[?25h[?25l[m[27;5H[K[52;92H5[27;5H[?25h[?25l[31mw[m[52;92H6[27;6H[?25h[?25l[31mh[m[52;92H7[27;7H[?25h[?25l[31me[m[52;92H8[27;8H[?25h[?25l[31mr[m[52;92H9[27;9H[?25h[?25l[31me[m[52;92H10[27;10H[?25h[?25l[31m [m[52;93H1[27;11H[?25h[?25l[31mY[m[52;93H2[27;12H[?25h[?25l[31m [m[52;93H3[27;13H[?25h[?25l[31mi[m[52;93H4[27;14H[?25h[?25l[31ms[m[52;93H5[27;15H[?25h[?25l[31m [m[52;93H6[27;16H[?25h[?25l[31ma[m[52;93H7[27;17H[?25h[?25l[31m [m[52;93H8[27;18H[?25h[?25l[31ml[m[52;93H9[27;19H[?25h[?25l[31mi[m[52;92H20[27;20H[?25h[?25l[31ms[m[52;93H1[27;21H[?25h[?25l[31mt[m[52;93H2[27;22H[?25h[?25l[31m [m[52;93H3[27;23H[?25h[?25l[31mc[m[52;93H4[27;24H[?25h[?25l[31mo[m[52;93H5[27;25H[?25h[?25l[31mn[m[52;93H6[27;26H[?25h[?25l[31mt[m[52;93H7[27;27H[?25h[?25l[31ma[m[52;93H8[27;28H[?25h[?25l[31mi[m[52;93H9[27;29H[?25h[?25l[31mn[m[52;92H30[27;30H[?25h[?25l[31mi[m[52;93H1[27;31H[?25h[?25l[31mn[m[52;93H2[27;32H[?25h[?25l[31mg[m[52;93H3[27;33H[?25h[?25l[31m [m[52;93H4[27;34H[?25h[?25l[31my[m[52;93H5[27;35H[?25h[?25l[31m [m[52;93H6[27;36H[?25h[?25l[31mr[m[52;93H7[27;37H[?25h[?25l[31ma[m[52;93H8[27;38H[?25h[?25l[31mn[m[52;93H9[27;39H[?25h[?25l[31mg[m[52;92H40[27;40H[?25h[?25l[31me[m[52;93H1[27;41H[?25h[?25l[31ms[m[52;93H2[27;42H[?25h[52;1H[K[27;41H[?25l[52;78H^[[27;41H[52;78H  [27;42H[52;88H262,41[8C78%[27;41H[?25h[?25l[52;78Hh[27;41H[52;78H [27;40H[52;93H0[27;40H[?25h[?25l[52;78Hh[27;40H[52;78H [27;39H[52;92H39[27;39H[?25h[?25l[52;78Hh[27;39H[52;78H [27;38H[52;93H8[27;38H[?25h[?25l[52;78Hh[27;38H[52;78H [27;37H[52;93H7[27;37H[?25h[?25l[52;78Hh[27;37H[52;78H [27;36H[52;93H6[27;36H[?25h[?25l[52;78Hh[27;36H[52;78H [27;35H[52;93H5[27;35H[?25h[?25l[52;78Hh[27;35H[52;78H [27;34H[52;93H4[27;34H[?25h[?25l[52;78Hh[27;34H[52;78H [27;33H[52;93H3[27;33H[?25h[?25l[52;78Hi[27;33H[52;78H [27;33H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H262,33[8C78%[27;33H[?25h[?25l[1C[31m y ranges[m[52;93H4[27;34H[?25h[?25l[31mm y ranges[m[52;93H5[27;35H[?25h[?25l[31mu y ranges[m[52;93H6[27;36H[?25h[?25l[31ml y ranges[m[52;93H7[27;37H[?25h[?25l[31mt y ranges[m[52;93H8[27;38H[?25h[?25l[31mi y ranges[m[52;93H9[27;39H[?25h[?25l[31mp y ranges[m[52;92H40[27;40H[?25h[?25l[31ml y ranges[m[52;93H1[27;41H[?25h[?25l[31me y ranges[m[52;93H2[27;42H[?25h[52;1H[K[27;41H[?25l[52;78H^[[27;41H[52;78H  [27;42H[52;88H262,41[8C78%[27;41H[?25h[?25l[52;78Hl[27;41H[52;78H [27;42H[52;93H2[27;42H[?25h[?25l[52;78Hl[27;42H[52;78H [27;43H[52;93H3[27;43H[?25h[?25l[52;78Hl[27;43H[52;78H [27;44H[52;93H4[27;44H[?25h[?25l[52;78Hl[27;44H[52;78H [27;45H[52;93H5[27;45H[?25h[?25l[52;78Hl[27;45H[52;78H [27;46H[52;93H6[27;46H[?25h[?25l[52;78Hl[27;46H[52;78H [27;47H[52;93H7[27;47H[?25h[?25l[52;78Hl[27;47H[52;78H [27;48H[52;93H8[27;48H[?25h[?25l[52;78Hl[27;48H[52;78H [27;49H[52;93H9[27;49H[?25h[?25l[52;78Hl[27;49H[52;78H [27;50H[52;92H50[27;50H[?25h[?25l[52;78Hl[27;50H[52;78H [27;50H[?25h[?25l[52;78Hl[27;50H[52;78H [27;50H[?25h[?25l[52;78Hl[27;50H[52;78H [27;50H[?25h[?25l[52;78Ha[27;50H[52;78H [27;51H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H262,51[8C78%[27;51H[?25h[?25l[31m [m[52;93H2[27;52H[?25h[?25l[31m([m[52;93H3[27;53H[?25h[?25l[31me[m[52;93H4[27;54H[?25h[?25l[31mg[m[52;93H5[27;55H[?25h[?25l[31m,[m[52;93H6[27;56H[?25h[?25l[31m [m[52;93H7[27;57H[?25h[?25l[27;56H[K[52;93H6[27;56H[?25h[?25l[27;55H[K[52;93H5[27;55H[?25h[?25l[27;54H[K[52;93H4[27;54H[?25h[?25l[31m;[m[52;93H5[27;55H[?25h[?25l[31mg[m[52;93H6[27;56H[?25h[?25l[31m,[m[52;93H7[27;57H[?25h[?25l[27;56H[K[52;93H6[27;56H[?25h[?25l[27;55H[K[52;93H5[27;55H[?25h[?25l[27;54H[K[52;93H4[27;54H[?25h[?25l[27;53H[K[52;93H3[27;53H[?25h[?25l[31m.[m[52;93H4[27;54H[?25h[?25l[27;53H[K[52;93H3[27;53H[?25h[?25l[31me[m[52;93H4[27;54H[?25h[?25l[31m.[m[52;93H5[27;55H[?25h[?25l[31mg[m[52;93H6[27;56H[?25h[?25l[31m,[m[52;93H7[27;57H[?25h[?25l[31m [m[52;93H8[27;58H[?25h[?25l[27;57H[K[52;93H7[27;57H[?25h[?25l[27;56H[K[52;93H6[27;56H[?25h[?25l[27;55H[K[52;93H5[27;55H[?25h[?25l[27;54H[K[52;93H4[27;54H[?25h[?25l[31mg[m[52;93H5[27;55H[?25h[?25l[31m,[m[52;93H6[27;56H[?25h[?25l[31m [m[52;93H7[27;57H[?25h[?25l[27;56H[K[52;93H6[27;56H[?25h[?25l[27;55H[K[52;93H5[27;55H[?25h[?25l[27;54H[K[52;93H4[27;54H[?25h[?25l[31m.[m[52;93H5[27;55H[?25h[?25l[31mg[m[52;93H6[27;56H[?25h[?25l[31m,[m[52;93H7[27;57H[?25h[?25l[31m [m[52;93H8[27;58H[?25h[?25l[27;57H[K[52;93H7[27;57H[?25h[?25l[27;56H[K[52;93H6[27;56H[?25h[?25l[31m.[m[52;93H7[27;57H[?25h[?25l[31m [m[52;93H8[27;58H[?25h[?25l[27;57H[K[52;93H7[27;57H[?25h[?25l[31m,[m[52;93H8[27;58H[?25h[?25l[31m [m[52;93H9[27;59H[?25h[?25l[31mY[m[52;92H60[27;60H[?25h[?25l[31m [m[52;93H1[27;61H[?25h[?25l[27;60H[K[52;93H0[27;60H[?25h[?25l[31m [m[52;93H1[27;61H[?25h[?25l[31m=[m[52;93H2[27;62H[?25h[?25l[31m [m[52;93H3[27;63H[?25h[?25l[31m[[m[52;93H4[27;64H[?25h[?25l[31mc[m[52;93H5[27;65H[?25h[?25l[27;64H[K[52;93H4[27;64H[?25h[?25l[31ms[m[52;93H5[27;65H[?25h[?25l[31mi[m[52;93H6[27;66H[?25h[?25l[31mn[m[52;93H7[27;67H[?25h[?25l[31m,[m[52;93H8[27;68H[?25h[?25l[27;67H[K[52;93H7[27;67H[?25h[?25l[27;66H[K[52;93H6[27;66H[?25h[?25l[27;65H[K[52;93H5[27;65H[?25h[?25l[27;64H[K[52;93H4[27;64H[?25h[?25l[31mn[m[52;93H5[27;65H[?25h[?25l[31mu[m[52;93H6[27;66H[?25h[?25l[31mm[m[52;93H7[27;67H[?25h[?25l[31mp[m[52;93H8[27;68H[?25h[?25l[31my[m[52;93H9[27;69H[?25h[?25l[31m_[m[52;92H70[27;70H[?25h[?25l[31ma[m[52;93H1[27;71H[?25h[?25l[31mr[m[52;93H2[27;72H[?25h[?25l[31mr[m[52;93H3[27;73H[?25h[?25l[31ma[m[52;93H4[27;74H[?25h[?25l[31my[m[52;93H5[27;75H[?25h[?25l[27;74H[K[52;93H4[27;74H[?25h[?25l[27;73H[K[52;93H3[27;73H[?25h[?25l[27;72H[K[52;93H2[27;72H[?25h[?25l[27;71H[K[52;93H1[27;71H[?25h[?25l[27;70H[K[52;93H0[27;70H[?25h[?25l[27;69H[K[52;92H69[27;69H[?25h[?25l[31m_[m[52;92H70[27;70H[?25h[?25l[31m)[m[27;52H[31m[106m([17C)[m[52;93H1[27;71H[?25h[?25l[27;70H[K[27;52H[31m([m[52;93H0[27;70H[?25h[?25l[27;69H[K[52;92H69[27;69H[?25h[?25l[31m_[m[52;92H70[27;70H[?25h[?25l[31ma[m[52;93H1[27;71H[?25h[?25l[31mr[m[52;93H2[27;72H[?25h[?25l[31mr[m[52;93H3[27;73H[?25h[?25l[31ma[m[52;93H4[27;74H[?25h[?25l[31my[m[52;93H5[27;75H[?25h[?25l[31m1[m[52;93H6[27;76H[?25h[?25l[31m,[m[52;93H7[27;77H[?25h[?25l[31m [m[52;93H8[27;78H[?25h[?25l[31mn[m[52;93H9[27;79H[?25h[?25l[31mu[m[52;92H80[27;80H[?25h[?25l[31mm[m[52;93H1[27;81H[?25h[?25l[31mp[m[52;93H2[27;82H[?25h[?25l[31my[m[52;93H3[27;83H[?25h[?25l[31m_[m[52;93H4[27;84H[?25h[?25l[31ma[m[52;93H5[27;85H[?25h[?25l[31mr[m[52;93H6[27;86H[?25h[?25l[31mr[m[52;93H7[27;87H[?25h[?25l[31ma[m[52;93H8[27;88H[?25h[?25l[31my[m[52;93H9[27;89H[?25h[?25l[31m2[m[52;92H90[27;90H[?25h[?25l[31m][m[27;63H[31m[106m[[26C][m[52;93H1[27;91H[?25h[?25l[31m_[27;63H[[26C][m[52;93H2[27;92H[?25h[?25l[27;91H[K[27;63H[31m[106m[[26C][m[52;93H1[27;91H[?25h[?25l[31m)[m[27;52H[31m[106m([m[10C[31m[[26C][m[31m[106m)[m[52;93H2[27;92H[?25h[?25l[28;51r[28;1H[L[1;52r[28;1H[31m    [m[52;88H[K[52;88H263,5[9C78%[27;52H[31m([38C)
    [?25h[?25lk[m[52;92H6[28;6H[?25h[?25l[31mk[m[52;92H7[28;7H[?25h[?25l[28;6H[K[52;92H6[28;6H[?25h[?25l[28;5H[K[52;92H5[28;5H[?25h[52;1H[K[28;4H[?25l[52;78H^[[28;4H[52;78H  [28;5H[52;88H263,4[9C78%[28;4H[?25h[?25l[52;78Hk[28;4H[52;78H [27;4H[52;90H2[27;4H[?25h[?25l[52;78Hk[27;4H[52;78H [26;4H[52;90H1[26;4H[?25h[?25l[52;78Hk[26;4H[52;78H [25;4H[52;90H0[25;4H[?25h[?25l[52;78Hl[25;4H[52;78H [25;5H[52;92H5[25;5H[?25h[?25l[52;78Hd[25;5H[?25h[?25l[52;79Hd[25;5H[52;78H  [25;9H[25;51r[51;1H
[1;52r[51;5Hx_max = x[-[31m1[m][52;88H[K[52;88H260,9[9C78%[25;9H[?25h[?25l[52;78Hk[25;9H[52;78H [24;9H[52;89H59[24;9H[?25h[?25l[52;78Ho[24;9H[52;78H [25;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H260,5[9C78%[25;51r[25;1H[L[1;52r[25;1H[31m    [m[52;88H[K[52;88H260,5[9C78%[25;5H[?25h[?25l[26;51r[26;1H[L[1;52r[25;1H[K[26;1H[31m    [m[52;88H[K[52;88H261,5[9C78%[26;5H[?25h[?25l[31mE[m[52;92H6[26;6H[?25h[?25l[31mx[m[52;92H7[26;7H[?25h[?25l[31ma[m[52;92H8[26;8H[?25h[?25l[31mm[m[52;92H9[26;9H[?25h[?25l[31mp[m[52;92H10[26;10H[?25h[?25l[31ml[m[52;93H1[26;11H[?25h[?25l[31me[m[52;93H2[26;12H[?25h[?25l[31ms[m[52;93H3[26;13H[?25h[?25l[27;51r[27;1H[L[1;52r[27;1H[31m    [m[52;88H[K[52;88H262,5[9C77%[27;5H[?25h[?25l[31m-[m[52;92H6[27;6H[?25h[?25l[31m-[m[52;92H7[27;7H[?25h[?25l[31m-[m[52;92H8[27;8H[?25h[?25l[31m-[m[52;92H9[27;9H[?25h[?25l[31m-[m[52;92H10[27;10H[?25h[?25l[31m-[m[52;93H1[27;11H[?25h[?25l[31m-[m[52;93H2[27;12H[?25h[?25l[31m-[m[52;93H3[27;13H[?25h[?25l[28;51r[28;1H[L[1;52r[28;1H[31m    [m[52;88H[K[52;88H263,5[9C77%[28;5H[?25h[?25l[29;51r[29;1H[2L[1;52r[28;5H[31mx = np.linspace(-5.0, 5.0, 101)
sin = np.sin(x)
cos[m[52;11H[1m(paste) --[m[52;88H[K[30;4H[?25h[?25l[31m = np.cos(x)[m[31m[106m([1C)[m[52;88H265,16[8C77%[30;16H[?25h[52;1H[K[30;15H[?25l[52;78H^[[30;15H[52;78H  [30;16H[52;88H265,15[8C77%[30;15H[?25h[?25l[52;78Hk[30;15H[52;78H [29;15H[31m[106m([1C)[m[30;13H[31m(x)[m[52;90H4[29;15H[?25h[?25l[52;78Hj[29;15H[52;78H [30;15H[29;13H[31m(x)[m[30;13H[31m[106m([1C)[m[52;90H5[30;15H[?25h[?25l[52;78Hk[30;15H[52;78H [29;15H[31m[106m([1C)[m[30;13H[31m(x)[m[52;90H4[29;15H[?25h[?25l[52;78Hj[29;15H[52;78H [30;15H[29;13H[31m(x)[m[30;13H[31m[106m([1C)[m[52;90H5[30;15H[?25h[?25l[52;78Hj[30;15H[52;78H [31;15H[30;13H[31m(x)[m[52;90H6[31;15H[?25h[?25l[52;78Hk[31;15H[52;78H [30;15H[31m[106m([1C)[m[52;90H5[30;15H[?25h[?25l[52;78Hh[30;15H[52;78H [30;14H[31m(x)[m[52;93H4[30;14H[?25h[?25l[52;78Hh[30;14H[52;78H [30;13H[31m[106m([1C)[m[52;93H3[30;13H[?25h[?25l[52;78Hh[30;13H[52;78H [30;12H[1C[31m(x)[m[52;93H2[30;12H[?25h[?25l[52;78Hh[30;12H[52;78H [30;11H[52;93H1[30;11H[?25h[?25l[52;78Hh[30;11H[52;78H [30;10H[52;93H0[30;10H[?25h[?25l[52;78Hh[30;10H[52;78H [30;9H[52;92H9 [30;9H[?25h[?25l[52;78Hh[30;9H[52;78H [30;8H[52;92H8[30;8H[?25h[?25l[52;78Hh[30;8H[52;78H [30;7H[52;92H7[30;7H[?25h[?25l[52;78Hh[30;7H[52;78H [30;6H[52;92H6[30;6H[?25h[?25l[52;78Hh[30;6H[52;78H [30;5H[52;92H5[30;5H[?25h[?25l[52;78Hh[30;5H[52;78H [30;4H[52;92H4[30;4H[?25h[?25l[52;78Hk[30;4H[52;78H [29;4H[52;90H4[29;4H[?25h[?25l[52;78Hh[29;4H[52;78H [29;3H[52;92H3[29;3H[?25h[?25l[52;78Hh[29;3H[52;78H [29;2H[52;92H2[29;2H[?25h[?25l[52;78Hh[29;2H[52;78H [29;1H[52;92H1[29;1H[?25h[?25l[52;78Hi[29;1H[52;78H [29;1H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H264,1[9C77%[29;1H[?25h[?25l[31m    sin = np.sin(x)[m[52;92H5[29;5H[?25h[52;1H[K[29;4H[?25l[52;78H^[[29;4H[52;78H  [29;5H[52;88H264,4[9C77%[29;4H[?25h[?25l[52;78Hj[29;4H[52;78H [30;4H[52;90H5[30;4H[?25h[?25l[52;78Hh[30;4H[52;78H [30;3H[52;92H3[30;3H[?25h[?25l[52;78Hh[30;3H[52;78H [30;2H[52;92H2[30;2H[?25h[?25l[52;78Hh[30;2H[52;78H [30;1H[52;92H1[30;1H[?25h[?25l[52;78Hh[30;1H[52;78H [30;1H[?25h[?25l[52;78Hi[30;1H[52;78H [30;1H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H265,1[9C77%[30;1H[?25h[?25l[31m    cos = np.cos(x)[m[52;92H5[30;5H[?25h[52;1H[K[30;4H[?25l[52;78H^[[30;4H[52;78H  [30;5H[52;88H265,4[9C77%[30;4H[?25h[?25l[52;78Hl[30;4H[52;78H [30;5H[52;92H5[30;5H[?25h[?25l[52;78Ho[30;5H[52;78H [31;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H266,5[9C76%[31;51r[31;1H[L[1;52r[31;1H[31m    [m[52;88H[K[52;88H266,5[9C76%[31;5H[?25h[?25l[32;51r[32;1H[L[1;52r[31;1H[K[32;1H[31m    [m[52;88H[K[52;88H267,5[9C76%[32;5H[?25h[?25l[33;51r[33;1H[L[1;52r[32;5H[31mtrigs = partial(interact_plot, x, [sin, cos])
# name the[m[52;11H[1m(paste) --[m[52;88H[K[33;11H[?25h[?25l[34;51r[34;1H[L[1;52r[33;11H[31m function to avoid AttributeError:
trigs.__name__ = 'interact[?25h[?25live function'[m[52;88H269,40[8C76%[34;40H[?25h[52;1H[K[34;39H[?25l[52;78H^[[34;39H[52;78H  [34;40H[52;88H269,39[8C76%[34;39H[?25h[?25l[52;78HV[34;39H[52;78H1[34;39H[31m[47mtrigs.__name__ = 'interactive function[m[1C[47m [m[52;1H[1m-- VISUAL LINE --[m[52;78H[K[52;78H1[34;39H[52;88H269,39[8C76%[34;39H[?25h[?25l[52;78Hk[34;39H[52;78H2[33;39H[31m[47m# name the function to avoid Attribute[1Crror:[m[47m [m[34;39H[31m[47m'[m[52;90H8[33;39H[?25h[?25l[52;78H>[33;39H[52;78H [33;5H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;1H[K[52;88H268,5[9C76%[33;5H[?25h[?25l[52;78Hj[33;5H[52;78H [34;5H[52;90H9[34;5H[?25h[?25l[52;78Ho[34;5H[52;78H [35;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H270,5[9C75%[35;51r[35;1H[L[1;52r[35;1H[31m    [m[52;88H[K[52;88H270,5[9C75%[35;5H[?25h[52;1H[K[35;1H[?25l[52;78H^[[35;1H[52;78H  [35;5H[35;1H[K[52;88H270,0-1[7C75%[35;1H[?25h[?25l[52;78Hi[35;1H[52;78H [35;1H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H270,1[9C75%[35;1H[?25h[?25l[36;51r[36;1H[L[1;52r[52;88H[K[52;88H271,1[9C75%[36;1H[?25h[?25l[31m    [m[52;92H5[36;5H[?25h[?25l[37;51r[37;1H[2L[1;52r[36;5H[31minteract(
    trigs,
    x_scale=(0.01, 1, 0.01[m[52;11H[1m(paste) --[m[52;88H[K[38;27H[?25h[?25l[39;51r[39;1H[2L[1;52r[38;27H[31m), 
    y_scale=(0.01, 1, 0.01), 
    x_position=(-1, 1,[?25h[?25l[41;51r[m[41;1H[2L[1;52r[40;23H[31m 0.02),
    y_position=(-1, 1, 0.02)
)[m[52;11H[1m--a[m[52;13H[K[52;88H277,2[9C74%[36;13H[31m[106m([42;1H)[?25h[m[52;1H[K[42;1H[?25l[52;78H^[[42;1H[52;78H  [42;2H[52;88H277,1[9C74%[42;1H[?25h[?25l[52;78Hk[42;1H[52;78H [41;1H[36;13H[31m([42;1H)[m[52;90H6[41;1H[?25h[?25l[52;78Hk[41;1H[52;78H [40;1H[52;90H5[40;1H[?25h[?25l[52;78Hk[40;1H[52;78H [39;1H[52;90H4[39;1H[?25h[?25l[52;78Hl[39;1H[52;78H [39;2H[52;92H2[39;2H[?25h[?25l[52;78Hl[39;2H[52;78H [39;3H[52;92H3[39;3H[?25h[?25l[52;78Hk[39;3H[52;78H [38;3H[52;90H3[38;3H[?25h[?25l[52;78Hk[38;3H[52;78H [37;3H[52;90H2[37;3H[?25h[?25l[52;78HV[37;3H[52;78H1[37;3H[31m[47m  [1C trigs,[m[47m [m[52;1H[1m-- VISUAL LINE --[m[52;78H[K[52;78H1[37;3H[52;88H272,3[9C74%[37;3H[?25h[?25l[52;78Hj[37;3H[52;78H2[38;3H[37;3H[31m[47m 
  [1C x_scale=(0.01, 1, 0.01), [m[47m [m[52;90H3[38;3H[?25h[?25l[52;78Hj[38;3H[52;78H3[39;3H[38;3H[31m[47m 
  [1C y_scale=(0.01, 1, 0.01), [m[47m [m[52;90H4[39;3H[?25h[?25l[52;78Hj[39;3H[52;78H4[40;3H[39;3H[31m[47m 
  [1C x_position=(-1, 1, 0.02),[m[47m [m[52;90H5[40;3H[?25h[?25l[52;78Hj[40;3H[52;78H5[41;3H[40;3H[31m[47m 
  [1C y_position=(-1, 1, 0.02)[m[47m [m[52;90H6[41;3H[?25h[?25l[52;78Hj[41;3H[52;78H6[42;2H[41;3H[31m[47m 
)[m[52;90H7,2[42;2H[?25h[?25l[52;78H>[42;2H[52;1H6 lines >ed 1 time[52;78H[K[37;9H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;1H[K[52;88H272,9[9C74%6 lines >ed 1 time[52;88H[K[52;88H272,9[9C74%[37;9H[?25h[?25l[52;78Hj[37;9H[52;78H [38;9H[52;90H3[38;9H[?25h[?25l[52;78Hj[38;9H[52;78H [39;9H[52;90H4[39;9H[?25h[?25l[52;78Hj[39;9H[52;78H [40;9H[52;90H5[40;9H[?25h[?25l[52;78Hj[40;9H[52;78H [41;9H[52;90H6[41;9H[?25h[?25l[52;78Hj[41;9H[52;78H [42;5H[36;13H[31m[106m([42;5H)[m[52;90H7,5[42;5H[?25h[?25l[52;78Hj[42;5H[52;78H [43;9H[36;13H[31m([42;5H)[m[52;90H8,9[43;9H[?25h[?25l[52;78Hj[43;9H[52;78H [44;9H[52;90H9[44;9H[?25h[?25l[52;78Hk[44;9H[52;78H [43;9H[52;90H8[43;9H[?25h[?25l[52;78HV[43;9H[52;78H1[43;9H[31m[47m        [1Cnteract_fn = partial(interact_plot, x, Y)[m[47m [m[52;1H[1m-- VISUAL LINE --[m[52;18H[K[52;78H1[43;9H[52;88H278,9[9C74%[43;9H[?25h[?25l[52;78Hj[43;9H[52;78H2[44;9H[43;9H[31m[47mi
    wher[1C Y is a list containing multiple y ranges (e.g., Y = [numpy_array1, numpy_array2])[m[47m [m[52;90H9[44;9H[?25h[?25l[52;78Hd[44;9H[52;78H [43;4H[43;51r[43;1H[2M[1;52r[50;1H[31m        Range of the graph
    x_scale: float[m[52;1H[K[52;88H278,4[9C74%[43;4H[?25h[?25l[52;78H^[[43;4H[52;78H  [43;4H[52;78H^[[43;4H[52;78H  [43;4H[?25h[?25l[52;78H:[43;4H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 366L, 11614B written[43;4H[52;88H278,4[9C74%[52;88H[K[52;88H278,4[9C74%[43;4H[?25h[?25l[52;78Hk[43;4H[52;78H [42;4H[52;90H7[42;4H[?25h[?25l[52;78Hk[42;4H[52;78H [41;4H[52;90H6[41;4H[?25h[?25l[52;78Hk[41;4H[52;78H [40;4H[52;90H5[40;4H[?25h[?25l[52;78Hk[40;4H[52;78H [39;4H[52;90H4[39;4H[?25h[?25l[52;78Hk[39;4H[52;78H [38;4H[52;90H3[38;4H[?25h[?25l[52;78Hk[38;4H[52;78H [37;4H[52;90H2[37;4H[?25h[?25l[52;78Hk[37;4H[52;78H [36;4H[52;90H1[36;4H[?25h[?25l[52;78Hk[36;4H[52;78H [35;1H[52;90H0,0-1[35;1H[?25h[?25l[52;89H69,4  [34;4H[?25h[?25l[52;78Hk[34;4H[52;78H [33;4H[52;90H8[33;4H[?25h[?25l[52;78Hk[33;4H[52;78H [32;4H[52;90H7[32;4H[?25h[?25l[52;78Hk[32;4H[52;78H [31;1H[52;90H6,0-1[31;1H[?25h[?25l[52;78Hk[31;1H[52;78H [30;4H[52;90H5,4  [30;4H[?25h[?25l[52;78Hk[30;4H[52;78H [29;4H[52;90H4[29;4H[?25h[?25l[52;78Hj[29;4H[52;78H [30;4H[52;90H5[30;4H[?25h[?25l[52;78Hj[30;4H[52;78H [31;1H[52;90H6,0-1[31;1H[?25h[?25l[52;78Hj[31;1H[52;78H [32;4H[52;90H7,4  [32;4H[?25h[?25l[52;78Hl[32;4H[52;78H [32;5H[52;92H5[32;5H[?25h[?25l[52;78Hl[32;5H[52;78H [32;6H[52;92H6[32;6H[?25h[?25l[52;78Hl[32;6H[52;78H [32;7H[52;92H7[32;7H[?25h[?25l[52;78Hl[32;7H[52;78H [32;8H[52;92H8[32;8H[?25h[?25l[52;78Hl[32;8H[52;78H [32;9H[52;92H9[32;9H[?25h[?25l[52;78Hl[32;9H[52;78H [32;10H[52;92H10[32;10H[?25h[?25l[52;78Hl[32;10H[52;78H [32;11H[52;93H1[32;11H[?25h[?25l[52;78Hl[32;11H[52;78H [32;12H[52;93H2[32;12H[?25h[?25l[52;78Hl[32;12H[52;78H [32;13H[52;93H3[32;13H[?25h[?25l[52;78Hl[32;13H[52;78H [32;14H[52;93H4[32;14H[?25h[?25l[52;78Hk[32;14H[52;78H [31;1H[52;90H6,0-1[31;1H[?25h[?25l[52;78Ho[31;1H[52;78H [32;1H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H267,1[9C74%[32;51r[32;1H[L[1;52r[52;88H[K[52;88H267,1[9C74%[32;1H[?25h[?25l[31m    [m[52;92H5[32;5H[?25h[?25l[31m#[m[52;92H6[32;6H[?25h[?25l[31m [m[52;92H7[32;7H[?25h[?25l[31mi[m[52;92H8[32;8H[?25h[?25l[31mm[m[52;92H9[32;9H[?25h[?25l[31mp[m[52;92H10[32;10H[?25h[?25l[31mr[m[52;93H1[32;11H[?25h[?25l[32;10H[K[52;93H0[32;10H[?25h[?25l[31mo[m[52;93H1[32;11H[?25h[?25l[31mr[m[52;93H2[32;12H[?25h[?25l[31mt[m[52;93H3[32;13H[?25h[?25l[31m [m[52;93H4[32;14H[?25h[?25l[31mp[m[52;93H5[32;15H[?25h[?25l[31ma[m[52;93H6[32;16H[?25h[?25l[31mr[m[52;93H7[32;17H[?25h[?25l[31mt[m[52;93H8[32;18H[?25h[?25l[31mi[m[52;93H9[32;19H[?25h[?25l[31ma[m[52;92H20[32;20H[?25h[?25l[31ml[m[52;93H1[32;21H[?25h[?25l[31m [m[52;93H2[32;22H[?25h[?25l[31mf[m[52;93H3[32;23H[?25h[?25l[31mu[m[52;93H4[32;24H[?25h[?25l[31mn[m[52;93H5[32;25H[?25h[?25l[31mc[m[52;93H6[32;26H[?25h[?25l[31mt[m[52;93H7[32;27H[?25h[?25l[31mi[m[52;93H8[32;28H[?25h[?25l[31mon[m[52;92H30[32;30H[?25h[?25l[32;29H[K[52;92H29[32;29H[?25h[?25l[32;28H[K[52;93H8[32;28H[?25h[?25l[32;27H[K[52;93H7[32;27H[?25h[?25l[32;26H[K[52;93H6[32;26H[?25h[?25l[32;25H[K[52;93H5[32;25H[?25h[?25l[32;24H[K[52;93H4[32;24H[?25h[?25l[32;23H[K[52;93H3[32;23H[?25h[?25l[32;22H[K[52;93H2[32;22H[?25h[?25l[32;21H[K[52;93H1[32;21H[?25h[?25l[32;20H[K[52;93H0[32;20H[?25h[?25l[32;19H[K[52;92H19[32;19H[?25h[?25l[32;18H[K[52;93H8[32;18H[?25h[?25l[32;17H[K[52;93H7[32;17H[?25h[?25l[32;16H[K[52;93H6[32;16H[?25h[?25l[32;15H[K[52;93H5[32;15H[?25h[?25l[32;14H[K[52;93H4[32;14H[?25h[?25l[32;13H[K[52;93H3[32;13H[?25h[?25l[32;12H[K[52;93H2[32;12H[?25h[?25l[32;11H[K[52;93H1[32;11H[?25h[?25l[32;10H[K[52;93H0[32;10H[?25h[?25l[32;9H[K[52;92H9 [32;9H[?25h[?25l[32;8H[K[52;92H8[32;8H[?25h[?25l[32;7H[K[52;92H7[32;7H[?25h[?25l[31mf[m[52;92H8[32;8H[?25h[?25l[31mr[m[52;92H9[32;9H[?25h[?25l[31mo[m[52;92H10[32;10H[?25h[?25l[31mm[m[52;93H1[32;11H[?25h[?25l[31m [m[52;93H2[32;12H[?25h[?25l[31mf[m[52;93H3[32;13H[?25h[?25l[31mu[m[52;93H4[32;14H[?25h[?25l[31mn[m[52;93H5[32;15H[?25h[?25l[31mc[m[52;93H6[32;16H[?25h[?25l[31mt[m[52;93H7[32;17H[?25h[?25l[31mo[m[52;93H8[32;18H[?25h[?25l[31mo[m[52;93H9[32;19H[?25h[?25l[31ml[m[52;92H20[32;20H[?25h[?25l[31ms[m[52;93H1[32;21H[?25h[?25l[31m [m[52;93H2[32;22H[?25h[?25l[31mi[m[52;93H3[32;23H[?25h[?25l[31mm[m[52;93H4[32;24H[?25h[?25l[31mp[m[52;93H5[32;25H[?25h[?25l[31mo[m[52;93H6[32;26H[?25h[?25l[31mr[m[52;93H7[32;27H[?25h[?25l[31mt[m[52;93H8[32;28H[?25h[?25l[31m [m[52;93H9[32;29H[?25h[?25l[31mp[m[52;92H30[32;30H[?25h[?25l[31ma[m[52;93H1[32;31H[?25h[?25l[31mr[m[52;93H2[32;32H[?25h[?25l[31mt[m[52;93H3[32;33H[?25h[?25l[31mi[m[52;93H4[32;34H[?25h[?25l[31ma[m[52;93H5[32;35H[?25h[?25l[31ml[m[52;93H6[32;36H[?25h[?25l[31m [m[52;93H7[32;37H[?25h[?25l[31mf[m[52;93H8[32;38H[?25h[?25l[31mi[m[52;93H9[32;39H[?25h[?25l[31mr[m[52;92H40[32;40H[?25h[?25l[31ms[m[52;93H1[32;41H[?25h[?25l[31mt[m[52;93H2[32;42H[?25h[?25l[52;90H9,45[34;45H[?25h[52;1H[K[34;44H[?25l[52;78H^[[34;44H[52;78H  [34;45H[52;88H269,44[8C74%[34;44H[?25h[?25l[52;78Hk[34;44H[52;78H [33;44H[52;90H8[33;44H[?25h[?25l[52;78Ho[33;44H[52;78H [34;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H269,5[9C74%[34;51r[34;1H[L[1;52r[34;1H[31m    [m[52;88H[K[52;88H269,5[9C74%[34;5H[?25h[52;1H[K[34;1H[?25l[52;78H^[[34;1H[52;78H  [34;5H[34;1H[K[52;88H269,0-1[7C74%[34;1H[?25h[?25l[52;78Hj[34;1H[52;78H [35;5H[52;89H70,5  [35;5H[?25h[?25l[52;78Hj[35;5H[52;78H [36;5H[52;90H1[36;5H[?25h[?25l[52;78Hj[36;5H[52;78H [37;1H[52;90H2,0-1[37;1H[?25h[?25l[52;78Hi[37;1H[52;78H [37;1H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H272,1[9C74%[37;1H[?25h[?25l[38;51r[38;1H[L[1;52r[52;88H[K[52;88H273,1[9C73%[38;1H[?25h[?25l[31m    [m[52;92H5[38;5H[?25h[?25l[31m#[m[52;92H6[38;6H[?25h[?25l[31m [m[52;92H7[38;7H[?25h[?25l[31mf[m[52;92H8[38;8H[?25h[?25l[31mr[m[52;92H9[38;9H[?25h[?25l[31mo[m[52;92H10[38;10H[?25h[?25l[31mm[m[52;93H1[38;11H[?25h[?25l[31m [m[52;93H2[38;12H[?25h[?25l[31mi[m[52;93H3[38;13H[?25h[?25l[31mp[m[52;93H4[38;14H[?25h[?25l[31my[m[52;93H5[38;15H[?25h[?25l[31mw[m[52;93H6[38;16H[?25h[?25l[31mi[m[52;93H7[38;17H[?25h[?25l[31md[m[52;93H8[38;18H[?25h[?25l[31mg[m[52;93H9[38;19H[?25h[?25l[31me[m[52;92H20[38;20H[?25h[?25l[31mt[m[52;93H1[38;21H[?25h[?25l[31ms[m[52;93H2[38;22H[?25h[?25l[31m [m[52;93H3[38;23H[?25h[?25l[31mi[m[52;93H4[38;24H[?25h[?25l[31mm[m[52;93H5[38;25H[?25h[?25l[31mp[m[52;93H6[38;26H[?25h[?25l[31mo[m[52;93H7[38;27H[?25h[?25l[31mr[m[52;93H8[38;28H[?25h[?25l[31mt[m[52;93H9[38;29H[?25h[?25l[31m [m[52;92H30[38;30H[?25h[?25l[31mi[m[52;93H1[38;31H[?25h[?25l[31mn[m[52;93H2[38;32H[?25h[?25l[31mt[m[52;93H3[38;33H[?25h[?25l[31mer[m[52;93H5[38;35H[?25h[?25l[31ma[m[52;93H6[38;36H[?25h[?25l[31mc[m[52;93H7[38;37H[?25h[?25l[31mt[m[52;93H8[38;38H[?25h[?25l[31m [m[52;93H9[38;39H[?25h[?25l[31mf[m[52;92H40[38;40H[?25h[?25l[31mi[m[52;93H1[38;41H[?25h[?25l[31mr[m[52;93H2[38;42H[?25h[?25l[31ms[m[52;93H3[38;43H[?25h[?25l[31mt[m[52;93H4[38;44H[?25h[52;1H[K[38;43H[?25l[52;78H^[[38;43H[52;78H  [38;44H[52;88H273,43[8C73%[38;43H[?25h[?25l[52;78H:[38;43H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11701B written[38;43H[52;88H273,43[8C73%[52;88H[K[52;88H273,43[8C73%[38;43H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;1H[K[52;88H273,43[8C74%[35;43H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H273,43[8C75%[32;43H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H273,43[8C76%[29;43H[?25h[?25l[52;89H81,4 [37;4H[?25h[?25l[52;90H2[38;4H[?25h[?25l[52;78Hd[38;4H[?25h[?25l[52;79Hd[38;4H[52;78H  [38;5H[38;51r[51;1H
[1;52r[51;1H[31m    y_position: float[m[52;88H[K[52;88H282,5[9C76%[38;5H[?25h[?25l[52;78Hk[38;5H[52;78H [37;4H[52;90H1,4[37;4H[?25h[?25l[52;78H:[37;4H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11696B written[37;4H[52;88H281,4[9C76%[52;88H[K[52;88H281,4[9C76%[37;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;1H[K[52;88H281,4[9C77%[34;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H281,4[9C78%[31;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H281,4[9C77%[34;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H281,4[9C76%[37;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H281,4[9C76%[40;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H281,4[9C75%[43;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H281,4[9C76%[40;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H281,4[9C76%[37;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H281,4[9C76%[40;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H281,4[9C75%[43;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[52;88H[K[52;88H281,4[9C74%[46;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H281,4[9C75%[43;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H281,4[9C76%[40;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H281,4[9C76%[37;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H281,4[9C77%[34;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H281,4[9C78%[31;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H281,4[9C79%[28;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H281,4[9C78%[31;4H[?25h[?25l[52;78H:[31;4H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11696B written[31;4H[52;88H281,4[9C78%[52;88H[K[52;88H281,4[9C78%[31;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;1H[K[52;88H281,4[9C77%[34;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H281,4[9C76%[37;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H281,4[9C76%[40;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H281,4[9C75%[43;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[52;88H[K[52;88H281,4[9C74%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[3;5H[34m# tick locations with labels[m[52;88H[K[52;88H278,5[9C73%[46;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H278,5[9C74%[43;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H278,5[9C75%[40;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H278,5[9C76%[37;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H278,5[9C76%[34;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H278,5[9C77%[31;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H278,5[9C78%[28;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H278,5[9C79%[25;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H278,5[9C80%[22;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[38;5;130mfor[m y [38;5;130min[m Y:[51;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H278,5[9C81%[19;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y)[52;88H[K[52;88H278,5[9C82%[16;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H278,5[9C83%[13;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H278,5[9C84%[10;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H278,5[9C85%[7;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H280,5[9C86%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H283,5[9C87%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H286,5[9C88%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H289,5[9C89%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H292,5[9C90%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter[m[52;88H[K[52;88H295,5[9C91%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    ---------
    args: tuple
        Tuple of multiple input objects[m[52;88H[K[52;88H298,5[9C92%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    num: int
        Line number of strings to truncate after (default 10)
    """[m[52;88H[K[52;88H301,5[9C93%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# get each object to print[m
    [38;5;130mfor[m arg [38;5;130min[m args:[51;9H[34m# initialize first index, end string, and object string[m[52;88H[K[52;88H304,5[9C94%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hind = [31m0[m[50;9Hend_str = [31m' ............'[m[51;9Harg_str = arg.__str__()[52;88H[K[52;88H307,5[9C94%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;9H[34m# iterate num times to find num-th index of '\n' for arg_str[m[51;9H[38;5;130mfor[m count [38;5;130min[m [36mrange[m(num):[52;88H[K[52;88H310,5[9C95%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;13Hnew_ind = arg_str[ind:].find([31m'[m[35m\n[m[31m'[m)[51;13H[34m# stop iterating if there are fewer than num lines in the string[m[52;88H[K[52;88H313,4[9C96%[6;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;13H[38;5;130mif[m new_ind == -[31m1[m:[50;17Hind = new_ind[51;17Hend_str = [31m''[m[52;88H[K[52;88H316,5[9C97%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;17H[38;5;130mbreak[m[51;13H[34m# update the index until it reaches num-th line[m[52;88H[K[52;88H319,5[9C98%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;13Hind = new_ind + ind + [31m2[m[51;9H[34m# print the string until num-th line[m[52;88H[K[52;88H322,5[9C99%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9H[36mprint[m(arg_str[:ind-[31m2[m] + end_str + [31m'[m[35m\n\n[m[31m'[m)
[94m~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H325,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H328,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H331,0-1[7CBot[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H334,0-1[7CBot[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H337,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H340,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H343,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H346,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter[m[52;88H[K[52;88H346,5[9CBot[9;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H346,5[9CBot[12;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H346,5[9CBot[15;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H346,5[9CBot[18;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H346,5[9CBot[21;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H346,5[9CBot[24;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H346,5[9CBot[27;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_size_half = (y_max - y_min)/[31m2.0[m[3;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H346,5[9C99%[30;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H346,5[9C98%[33;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hy_max = np.max([y_max, np.max(y)])[2;9Hplt.plot(x, y)[52;88H[K[52;88H346,5[9C97%[36;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[38;5;130mfor[m y [38;5;130min[m Y:[3;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H346,5[9C96%[39;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H346,5[9C95%[42;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H346,5[9C94%[45;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H344,5[9C94%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H341,5[9C93%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H338,5[9C92%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H335,5[9C91%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H332,5[9C90%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H329,5[9C89%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H326,4[9C88%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H323,4[9C87%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H320,5[9C86%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H317,5[9C85%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H314,5[9C84%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H311,5[9C83%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)[m[52;88H[K[52;88H308,4[9C82%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    Examples
    --------[m[52;88H[K[52;88H305,5[9C81%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.[m[52;88H[K[52;88H302,5[9C80%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H299,5[9C79%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H296,5[9C78%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H293,5[9C77%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H290,5[9C76%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H287,5[9C76%[46;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H287,5[9C76%[43;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H287,5[9C77%[40;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H287,5[9C76%[43;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H287,5[9C76%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H284,5[9C75%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[52;88H[K[52;88H281,4[9C74%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[3;5H[34m# tick locations with labels[m[52;88H[K[52;88H278,5[9C73%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.spines[[31m'right'[m].set_visible([36mFalse[m)[3;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m[52;88H[K[52;88H275,5[9C72%[46;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H275,5[9C73%[43;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H275,5[9C74%[40;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H275,5[9C75%[37;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H275,5[9C76%[34;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H275,5[9C76%[31;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H275,5[9C77%[28;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H275,5[9C78%[25;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H275,5[9C79%[22;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H275,5[9C80%[19;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[38;5;130mfor[m y [38;5;130min[m Y:[51;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H275,5[9C81%[16;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y)[52;88H[K[52;88H275,5[9C82%[13;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H275,5[9C83%[10;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H275,5[9C84%[7;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H277,5[9C85%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H280,5[9C86%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H283,5[9C87%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H286,5[9C88%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H289,5[9C89%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H292,5[9C90%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter[m[52;88H[K[52;88H295,5[9C91%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    ---------
    args: tuple
        Tuple of multiple input objects[m[52;88H[K[52;88H298,5[9C92%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    num: int
        Line number of strings to truncate after (default 10)
    """[m[52;88H[K[52;88H301,5[9C93%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# get each object to print[m
    [38;5;130mfor[m arg [38;5;130min[m args:[51;9H[34m# initialize first index, end string, and object string[m[52;88H[K[52;88H304,5[9C94%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hind = [31m0[m[50;9Hend_str = [31m' ............'[m[51;9Harg_str = arg.__str__()[52;88H[K[52;88H307,5[9C94%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;9H[34m# iterate num times to find num-th index of '\n' for arg_str[m[51;9H[38;5;130mfor[m count [38;5;130min[m [36mrange[m(num):[52;88H[K[52;88H310,5[9C95%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;13Hnew_ind = arg_str[ind:].find([31m'[m[35m\n[m[31m'[m)[51;13H[34m# stop iterating if there are fewer than num lines in the string[m[52;88H[K[52;88H313,4[9C96%[6;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;13H[38;5;130mif[m new_ind == -[31m1[m:[50;17Hind = new_ind[51;17Hend_str = [31m''[m[52;88H[K[52;88H316,5[9C97%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;17H[38;5;130mbreak[m[51;13H[34m# update the index until it reaches num-th line[m[52;88H[K[52;88H319,5[9C98%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;13Hind = new_ind + ind + [31m2[m[51;9H[34m# print the string until num-th line[m[52;88H[K[52;88H322,5[9C99%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9H[36mprint[m(arg_str[:ind-[31m2[m] + end_str + [31m'[m[35m\n\n[m[31m'[m)
[94m~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H325,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H328,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H328,5[9CBot[9;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_size_half = (y_max - y_min)/[31m2.0[m[3;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H328,5[9C99%[12;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H328,5[9C98%[15;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hy_max = np.max([y_max, np.max(y)])[2;9Hplt.plot(x, y)[52;88H[K[52;88H328,5[9C97%[18;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[38;5;130mfor[m y [38;5;130min[m Y:[3;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H328,5[9C96%[21;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H328,5[9C95%[24;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;13Hnew_ind = arg_str[ind:].find([31m'[m[35m\n[m[31m'[m)[51;13H[34m# stop iterating if there are fewer than num lines in the string[m[52;88H[K[52;88H328,5[9C96%[21;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;13H[38;5;130mif[m new_ind == -[31m1[m:[50;17Hind = new_ind[51;17Hend_str = [31m''[m[52;88H[K[52;88H328,5[9C97%[18;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;17H[38;5;130mbreak[m[51;13H[34m# update the index until it reaches num-th line[m[52;88H[K[52;88H328,5[9C98%[15;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;13Hind = new_ind + ind + [31m2[m[51;9H[34m# print the string until num-th line[m[52;88H[K[52;88H328,5[9C99%[12;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9H[36mprint[m(arg_str[:ind-[31m2[m] + end_str + [31m'[m[35m\n\n[m[31m'[m)
[94m~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H328,5[9CBot[9;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H328,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H331,0-1[7CBot[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H334,0-1[7CBot[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H337,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H337,5[9CBot[9;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H337,5[9CBot[12;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H337,5[9CBot[15;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H337,5[9CBot[12;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H337,5[9CBot[9;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H337,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H340,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[94m~                                                                                                        [50;1H~                                                                                                        [51;1H~                                                                                                        [m[52;88H[K[52;88H343,5[9CBot[6;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H343,5[9CBot[9;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H343,5[9CBot[12;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H343,5[9CBot[15;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H343,5[9CBot[18;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H343,5[9CBot[21;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H343,5[9CBot[24;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_size_half = (y_max - y_min)/[31m2.0[m[3;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H343,5[9C99%[27;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H343,5[9C98%[30;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hy_max = np.max([y_max, np.max(y)])[2;9Hplt.plot(x, y)[52;88H[K[52;88H343,5[9C97%[33;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[38;5;130mfor[m y [38;5;130min[m Y:[3;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H343,5[9C96%[36;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H343,5[9C95%[39;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H343,5[9C94%[42;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H343,5[9C94%[45;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H341,5[9C93%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H338,5[9C92%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H335,5[9C91%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H332,5[9C90%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H329,5[9C89%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H326,4[9C88%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H323,4[9C87%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H320,5[9C86%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H317,5[9C85%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H314,5[9C84%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H311,5[9C83%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)[m[52;88H[K[52;88H308,4[9C82%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    Examples
    --------[m[52;88H[K[52;88H305,5[9C81%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.[m[52;88H[K[52;88H302,5[9C80%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H299,5[9C79%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H296,5[9C78%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H293,5[9C77%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H290,5[9C76%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H287,5[9C76%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H284,5[9C75%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[52;88H[K[52;88H281,4[9C74%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[3;5H[34m# tick locations with labels[m[52;88H[K[52;88H278,5[9C73%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.spines[[31m'right'[m].set_visible([36mFalse[m)[3;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m[52;88H[K[52;88H275,5[9C72%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)[52;88H[K[52;88H272,0-1[7C71%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# change the spine linewidth[m
    plt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[52;88H[K[52;88H269,0-1[7C70%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    plt.plot(x, y, [31m'k-'[m, linewidth=[31m.5[m)
    plt.axis([xmin, xmax, [31m1.1[m*ymin, [31m1.1[m*ymax])[52;88H[K[52;88H266,0-1[7C69%[46;1H[?25h[?25l[52;89H51,17 [31;17H[?25h[?25l[52;89H49,15[29;15H[?25h[?25l[52;90H8,7 [28;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H248,7[9C70%[25;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H248,7[9C71%[22;7H[?25h[?25l[52;89H59,22[33;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H259,22[8C72%[30;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H259,22[8C73%[27;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H259,22[8C74%[24;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H259,22[8C75%[21;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H259,22[8C76%[18;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H259,22[8C76%[15;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H259,22[8C77%[12;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H259,22[8C78%[9;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H259,22[8C79%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H262,12[8C80%[6;12H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;17H[31m[106m([1C)[m[50;5H[38;5;130mfor[m y [38;5;130min[m Y:[51;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H265,19[8C81%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;17H[31m(x)[m[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y)[52;88H[K[52;88H268,22[8C82%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H271,22[8C83%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;13H[31m[106m([12;5H)[m[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H274,13[8C84%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;13H[31m([9;5H)[m[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H277,22[8C85%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H280,5[9C86%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H283,13[8C87%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H286,22[8C88%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H289,22[8C89%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H292,21[8C90%[6;21H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter[m[52;88H[K[52;88H295,21[8C91%[6;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H295,21[8C90%[9;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H295,21[8C89%[12;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H295,21[8C88%[15;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H295,21[8C87%[18;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H295,21[8C86%[21;21H[?25h[?25l[31;13H[106m([mgrid[106m)[m[52;88H305,18[31;18H[?25h[?25l[29;14H[106m[[1C][m[31;13H(grid)[52;90H3,16[29;16H[?25h[?25l[[1C][52;90H1,20[27;20H[?25h[?25l[52;90H0,7 [26;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H300,7[9C87%[23;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H300,7[9C88%[20;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H300,7[9C89%[17;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H300,7[9C90%[14;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H300,7[9C89%[17;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H300,7[9C88%[20;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H300,7[9C87%[23;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H300,7[9C88%[20;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H300,7[9C89%[17;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H300,7[9C90%[14;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H300,7[9C89%[17;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H300,7[9C88%[20;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H300,7[9C87%[23;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H300,7[9C86%[26;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H300,7[9C85%[29;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H300,7[9C84%[32;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H300,7[9C83%[35;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)[m[52;88H[K[52;88H300,7[9C82%[38;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    Examples
    --------[m[52;88H[K[52;88H300,7[9C81%[41;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y)[52;88H[K[52;88H300,7[9C82%[38;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H300,7[9C83%[35;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H300,7[9C84%[32;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H300,7[9C85%[29;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H300,7[9C86%[26;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H300,7[9C85%[29;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H300,7[9C84%[32;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H300,7[9C83%[35;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)[m[52;88H[K[52;88H300,7[9C82%[38;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    Examples
    --------[m[52;88H[K[52;88H300,7[9C81%[41;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.[m[52;88H[K[52;88H300,7[9C80%[44;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H299,22[8C79%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H296,22[8C78%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H293,22[8C77%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H290,18[8C76%[46;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H290,18[8C77%[43;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H290,18[8C78%[40;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H290,18[8C79%[37;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H290,18[8C80%[34;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[38;5;130mfor[m y [38;5;130min[m Y:[51;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H290,18[8C81%[31;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y)[52;88H[K[52;88H290,18[8C82%[28;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H290,18[8C83%[25;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H290,18[8C84%[22;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H290,18[8C85%[19;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H290,18[8C86%[16;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H290,18[8C87%[13;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H290,18[8C88%[10;18H[?25h[?25l[52;88H311[31;18H[?25h[?25l[32;17H[106m([mx, y[106m)[m[52;90H2,22[32;22H[?25h[?25l(x, y)[52;89H09,13[29;13H[?25h[?25l[52;78Hl[29;13H[52;78H [29;14H[52;93H4[29;14H[?25h[?25l[52;78Hi[29;14H[52;78H [29;14H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H309,14[8C88%[29;14H[?25h[?25leY:[52;93H5[29;15H[?25h[?25lnY:[52;93H6[29;16H[?25h[?25luY:[52;93H7[29;17H[?25h[?25lmY:[52;93H8[29;18H[?25h[?25leY:[52;93H9[29;19H[?25h[?25lrY:[52;92H20[29;20H[?25h[?25laY:[52;93H1[29;21H[?25h[?25lrY:[52;93H2[29;22H[?25h[?25leY:[52;93H3[29;23H[?25h[?25lY:[29;24H[K[52;93H2[29;22H[?25h[?25lY:[29;23H[K[52;93H1[29;21H[?25h[?25ltY:[52;93H2[29;22H[?25h[?25leY:[52;93H3[29;23H[?25h[?25l[29;14H[36menumerate[m(Y:[52;93H4[29;24H[?25h[?25l)Y:[106m()[m[52;93H5[29;25H[?25h[?25l[106mY[m:[29;26H[K[29;23H(Y[52;93H4[29;24H[?25h[?25l[52;93H5[29;25H[?25h[?25l):[106m([mY[106m)[m[52;93H6[29;26H[?25h[52;1H[K[29;25H[?25l[52;78H^[[29;25H[52;78H  [29;26H[52;88H309,25[8C88%[29;25H[?25h[?25l[52;78Hh[29;25H[52;78H [29;24H(Y)[52;93H4[29;24H[?25h[?25l[52;78Hh[29;24H[52;78H [29;23H[106m([mY[106m)[m[52;93H3[29;23H[?25h[?25l[52;78Hh[29;23H[52;78H [29;22H[1C(Y)[52;93H2[29;22H[?25h[?25l[52;78Hh[29;22H[52;78H [29;21H[52;93H1[29;21H[?25h[?25l[52;78Hh[29;21H[52;78H [29;20H[52;93H0[29;20H[?25h[?25l[52;78Hh[29;20H[52;78H [29;19H[52;92H19[29;19H[?25h[?25l[52;78Hh[29;19H[52;78H [29;18H[52;93H8[29;18H[?25h[?25l[52;78Hh[29;18H[52;78H [29;17H[52;93H7[29;17H[?25h[?25l[52;78Hh[29;17H[52;78H [29;16H[52;93H6[29;16H[?25h[?25l[52;78Hh[29;16H[52;78H [29;15H[52;93H5[29;15H[?25h[?25l[52;78Hh[29;15H[52;78H [29;14H[52;93H4[29;14H[?25h[?25l[52;78Hh[29;14H[52;78H [29;13H[52;93H3[29;13H[?25h[?25l[52;78Hh[29;13H[52;78H [29;12H[52;93H2[29;12H[?25h[?25l[52;78Hh[29;12H[52;78H [29;11H[52;93H1[29;11H[?25h[?25l[52;78Hh[29;11H[52;78H [29;10H[52;93H0[29;10H[?25h[?25l[52;78Hh[29;10H[52;78H [29;9H[52;92H9 [29;9H[?25h[?25l[52;78Hi[29;9H[52;78H [29;9H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H309,9[9C88%[29;9H[?25h[?25liy [38;5;130min[m [36menumerate[m(Y):[52;92H10[29;10H[?25h[?25l,y [38;5;130min[m [36menumerate[m(Y):[52;93H1[29;11H[?25h[?25l y [38;5;130min[m [36menumerate[m(Y):[52;93H2[29;12H[?25h[52;1H[K[29;11H[?25l[52;78H^[[29;11H[52;78H  [29;12H[52;88H309,11[8C88%[29;11H[?25h[?25l[52;78Hh[29;11H[52;78H [29;10H[52;93H0[29;10H[?25h[?25l[52;78Hi[29;10H[52;78H [29;10H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H309,10[8C88%[29;10H[?25h[?25l, y [38;5;130min[m [36menumerate[m(Y):[29;29H[K[52;92H9 [29;9H[?25h[?25ln, y [38;5;130min[m [36menumerate[m(Y):[52;92H10[29;10H[?25h[?25lu, y [38;5;130min[m [36menumerate[m(Y):[52;93H1[29;11H[?25h[?25lm, y [38;5;130min[m [36menumerate[m(Y):[52;93H2[29;12H[?25h[?25l, y [38;5;130min[m [36menumerate[m(Y):[29;31H[K[52;93H1[29;11H[?25h[?25l, y [38;5;130min[m [36menumerate[m(Y):[29;30H[K[52;93H0[29;10H[?25h[?25l, y [38;5;130min[m [36menumerate[m(Y):[29;29H[K[52;92H9 [29;9H[?25h[?25li, y [38;5;130min[m [36menumerate[m(Y):[52;92H10[29;10H[?25h[?25l[38;5;130min[m, y [38;5;130min[m [36menumerate[m(Y):[52;93H1[29;11H[?25h[?25lind, y [38;5;130min[m [36menumerate[m(Y):[52;93H2[29;12H[?25h[?25le, y [38;5;130min[m [36menumerate[m(Y):[52;93H3[29;13H[?25h[?25lx, y [38;5;130min[m [36menumerate[m(Y):[52;93H4[29;14H[?25h[52;1H[K[29;13H[?25l[52;78H^[[29;13H[52;78H  [29;14H[52;88H309,13[8C88%[29;13H[?25h[?25l[52;78H:[29;13H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11714B written[29;13H[52;88H309,13[8C88%[52;88H[K[52;88H309,13[8C88%[29;13H[?25h[?25l[52;78Hj[29;13H[52;78H [30;13H[52;89H10[30;13H[?25h[?25l[52;78Hj[30;13H[52;78H [31;13H[52;90H1[31;13H[?25h[?25l[52;78Hj[31;13H[52;78H [32;13H[52;90H2[32;13H[?25h[?25l[52;78Hl[32;13H[52;78H [32;14H[52;93H4[32;14H[?25h[?25l[52;78Hl[32;14H[52;78H [32;15H[52;93H5[32;15H[?25h[?25l[52;78Hl[32;15H[52;78H [32;16H[52;93H6[32;16H[?25h[?25l[52;78Hl[32;16H[52;78H [32;17H[106m([mx, y[106m)[m[52;93H7[32;17H[?25h[?25l[52;78Hl[32;17H[52;78H [32;18H(x, y)[52;93H8[32;18H[?25h[?25l[52;78Hl[32;18H[52;78H [32;19H[52;93H9[32;19H[?25h[?25l[52;78Hl[32;19H[52;78H [32;20H[52;92H20[32;20H[?25h[?25l[52;78Hl[32;20H[52;78H [32;21H[52;93H1[32;21H[?25h[?25l[52;78Ha[32;21H[52;78H [32;22H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H312,22[8C88%[32;17H[106m([mx, y[106m)[?25h[?25l,[m),[106m)[m[52;93H3[32;23H[?25h[?25l[106m [m) [106m)[m[52;93H4[32;24H[?25h[?25l[106ml[m)l[106m)[m[52;93H5[32;25H[?25h[?25l[106ma[m)a[106m)[m[52;93H6[32;26H[?25h[?25l[106mb[m)b[106m)[m[52;93H7[32;27H[?25h[?25l[106me[m)e[106m)[m[52;93H8[32;28H[?25h[?25l[106ml[m)l[106m)[m[52;93H9[32;29H[?25h[?25l[106m=[m)=[106m)[m[52;92H30[32;30H[?25h[?25l[106mf[m)f[106m)[m[52;93H1[32;31H[?25h[?25l[31m[106m'[m[31m)
    
    x_mid = (x_max + x_min)/
    y_mid = (y_max + y_min)/
    x_size_half = (x_max - x_min)/
    y_size_half = (y_max - y_min)/

    xi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale
    
    x_diff = x_max - xf
    y_diff = y_max - yf
    
    x_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[32;31H'[m[31m[106m)[m[52;93H2[32;32H[?25h[?25l[31m[106m'[m)
    
    x_mid = (x_max + x_min)/
    y_mid = (y_max + y_min)/
    x_size_half = (x_max - x_min)/
    y_size_half = (y_max - y_min)/

    xi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale
    
    x_diff = x_max - xf
    y_diff = y_max - yf
    
    x_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[32;32H[31m'[m[106m)[m[52;93H3[32;33H[?25h[?25l[32;17H([15C)[52;93H2[32;32H[?25h[?25l[31m{'[m)[52;93H3[32;33H[?25h[?25l[31mi'[m)[52;93H4[32;34H[?25h[?25l[31mn'[m)[52;93H5[32;35H[?25h[?25l[31md'[m)[52;93H6[32;36H[?25h[?25l[31me'[m)[52;93H7[32;37H[?25h[?25l[31mx'[m)[52;93H8[32;38H[?25h[?25l[31m}'[m)[32;32H[31m[106m{[5C}[m[52;93H9[32;39H[?25h[52;1H[K[32;38H[?25l[52;78H^[[32;38H[52;78H  [32;39H[52;88H312,38[8C88%[32;38H[?25h[?25l[52;78H~@k[32;38H[52;78H   [32;37H[31m{index}[m[52;93H7[32;37H[?25h[?25l[52;89H09,10[29;10H[?25h[?25l[52;78Hl[29;10H[52;78H [29;11H[52;93H1[29;11H[?25h[?25l[52;78Hl[29;11H[52;78H [29;12H[52;93H2[29;12H[?25h[?25l[52;78Hl[29;12H[52;78H [29;13H[52;93H3[29;13H[?25h[?25l[52;78Hl[29;13H[52;78H [29;14H[52;93H4[29;14H[?25h[?25l[52;78Hi[29;14H[52;78H [29;14H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H309,14[8C88%[29;14H[?25h[?25l, y [38;5;130min[m [36menumerate[m(Y):[29;33H[K[52;93H3[29;13H[?25h[?25l, y [38;5;130min[m [36menumerate[m(Y):[29;32H[K[52;93H2[29;12H[?25h[?25l[38;5;130min[m, y [38;5;130min[m [36menumerate[m(Y):[29;31H[K[52;93H1[29;11H[?25h[?25li, y [38;5;130min[m [36menumerate[m(Y):[29;30H[K[52;93H0[29;10H[?25h[52;1H[K[29;9H[?25l[52;78H^[[29;9H[52;78H  [29;10H[52;88H309,9[9C88%[29;9H[?25h[?25l[52;78Hj[29;9H[52;78H [30;9H[52;89H10[30;9H[?25h[?25l[52;78Hj[30;9H[52;78H [31;9H[52;90H1[31;9H[?25h[?25l[52;78Hj[31;9H[52;78H [32;9H[52;90H2[32;9H[?25h[?25l[52;78Hl[32;9H[52;78H [32;10H[52;92H10[32;10H[?25h[?25l[52;78Hw[32;10H[52;78H [32;12H[52;93H2[32;12H[?25h[?25l[52;78Hw[32;12H[52;78H [32;13H[52;93H3[32;13H[?25h[?25l[52;78Hw[32;13H[52;78H [32;17H[106m([22C)[m[52;93H7[32;17H[?25h[?25l[52;78Hw[32;17H[52;78H [32;18H([22C)[52;93H8[32;18H[?25h[?25l[52;78Hw[32;18H[52;78H [32;19H[52;93H9[32;19H[?25h[?25l[52;78Hw[32;19H[52;78H [32;21H[52;92H21[32;21H[?25h[?25l[52;78Hw[32;21H[52;78H [32;22H[52;93H2[32;22H[?25h[?25l[52;78Hw[32;22H[52;78H [32;24H[52;93H4[32;24H[?25h[?25l[52;78Hw[32;24H[52;78H [32;29H[52;93H9[32;29H[?25h[?25l[52;78Hw[32;29H[52;78H [32;30H[52;92H30[32;30H[?25h[?25l[52;78Hw[32;30H[52;78H [32;31H[52;93H1[32;31H[?25h[?25l[52;78Hw[32;31H[52;78H [32;33H[52;93H3[32;33H[?25h[?25l[52;78Hl[32;33H[52;78H [32;34H[52;93H4[32;34H[?25h[?25l[52;78Hl[32;34H[52;78H [32;35H[52;93H5[32;35H[?25h[?25l[52;78Hl[32;35H[52;78H [32;36H[52;93H6[32;36H[?25h[?25l[52;78Hl[32;36H[52;78H [32;37H[52;93H7[32;37H[?25h[?25l[52;78Hl[32;37H[52;78H [32;38H[31m[106m{[5C}[m[52;93H8[32;38H[?25h[?25l[52;78Hi[32;38H[52;78H [32;38H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H312,38[8C88%[32;38H[?25h[?25l[31m}[m[31m[106m'[m)[32;40H[K[32;37H[31m[106m}[m[31m'[m[52;93H7[32;37H[?25h[?25l[31m}[m[31m[106m'[m)[32;39H[K[32;36H[31m[106m}[m[31m'[m[52;93H6[32;36H[?25h[?25l[31m}[m[31m[106m'[m)[32;38H[K[32;35H[31m[106m}[m[31m'[m[52;93H5[32;35H[?25h[?25l[31m}[m[31m[106m'[m)[32;37H[K[32;34H[31m[106m}[m[31m'[m[52;93H4[32;34H[?25h[52;1H[K[32;33H[?25l[52;78H^[[32;33H[52;78H  [32;34H[31m{i}[m[52;88H312,33[8C88%[32;33H[?25h[?25l[52;78H:[32;33H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11724B written[32;33H[52;88H312,33[8C88%[52;88H[K[52;88H312,33[8C88%[32;33H[?25h[?25l[52;78Hl[32;33H[52;78H [32;34H[31m[106m{[1C}[m[52;93H4[32;34H[?25h[?25l[52;78Hl[32;34H[52;78H [32;35H[31m{i}[m[52;93H5[32;35H[?25h[?25l[52;78Hi[32;35H[52;78H [32;35H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H312,35[8C88%[32;35H[?25h[?25l[31m '[m)[52;93H6[32;36H[?25h[?25l[31mp'[m)[52;93H7[32;37H[?25h[?25l[31ml'[m)[52;93H8[32;38H[?25h[?25l[31mo'[m)[52;93H9[32;39H[?25h[?25l[31mt'[m)[52;92H40[32;40H[?25h[52;1H[K[32;39H[?25l[52;78H^[[32;39H[52;78H  [32;40H[52;88H312,39[8C88%[32;39H[?25h[?25l[52;78H:[32;39H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11729B written[32;39H[52;88H312,39[8C88%[52;88H[K[52;88H312,39[8C88%[32;39H[?25h[?25l[52;78Hh[32;39H[52;78H [32;38H[52;93H8[32;38H[?25h[?25l[52;78Hh[32;38H[52;78H [32;37H[52;93H7[32;37H[?25h[?25l[52;78Hh[32;37H[52;78H [32;36H[52;93H6[32;36H[?25h[?25l[52;78Hi[32;36H[52;78H [32;36H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H312,36[8C88%[32;36H[?25h[?25l[31mplot'[m)[32;41H[K[32;32H[31m[106m{[1C}[m[52;93H5[32;35H[?25h[?25l[31m[106mp[m[31mlot'[m)[32;40H[K[32;32H[31m{ip[m[52;93H4[32;34H[?25h[?25l[31mplot'[m)[32;39H[K[52;93H3[32;33H[?25h[?25l[31mplot'[m)[32;38H[K[52;93H2[32;32H[?25h[52;1H[K[32;31H[?25l[52;78H^[[32;31H[52;78H  [32;32H[52;88H312,31[8C88%[32;31H[?25h[?25l[52;78Hl[32;31H[52;78H [32;32H[52;93H2[32;32H[?25h[?25l[52;78Hl[32;32H[52;78H [32;33H[52;93H3[32;33H[?25h[?25l[52;78Hl[32;33H[52;78H [32;34H[52;93H4[32;34H[?25h[?25l[52;78Hl[32;34H[52;78H [32;35H[52;93H5[32;35H[?25h[?25l[52;78Ha[32;35H[52;78H [32;36H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H312,36[8C88%[32;36H[?25h[?25l[31m['[m)[52;93H7[32;37H[?25h[?25l[31m'[m)[32;38H[K[52;93H6[32;36H[?25h[?25l[31m '[m)[52;93H7[32;37H[?25h[?25l[31m{'[m)[52;93H8[32;38H[?25h[?25l[31mi'[m)[52;93H9[32;39H[?25h[?25l[31m}'[m)[31m[106m{[1C}[m[52;92H40[32;40H[?25h[52;1H[K[32;39H[?25l[52;78H^[[32;39H[52;78H  [32;40H[52;88H312,39[8C88%[32;39H[?25h[?25l[52;78H:[32;39H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11729B written[32;39H[52;88H312,39[8C88%[52;88H[K[52;88H312,39[8C88%[32;39H[?25h[?25l[52;78Hh[32;39H[52;78H [32;38H[31m{i}[m[52;93H8[32;38H[?25h[?25l[52;78Hh[32;38H[52;78H [32;37H[31m[106m{[1C}[m[52;93H7[32;37H[?25h[?25l[52;78Hh[32;37H[52;78H [32;36H[1C[31m{i}[m[52;93H6[32;36H[?25h[?25l[52;78Hh[32;36H[52;78H [32;35H[52;93H5[32;35H[?25h[?25l[52;78Hh[32;35H[52;78H [32;34H[52;93H4[32;34H[?25h[?25l[52;78Hh[32;34H[52;78H [32;33H[52;93H3[32;33H[?25h[?25l[52;78Hh[32;33H[52;78H [32;32H[52;93H2[32;32H[?25h[?25l[52;78Hh[32;32H[52;78H [32;31H[52;93H1[32;31H[?25h[?25l[52;78Hl[32;31H[52;78H [32;32H[52;93H2[32;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;1H[K[52;88H312,32[8C89%[29;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H312,32[8C90%[26;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter[m[52;88H[K[52;88H312,32[8C91%[23;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H312,32[8C90%[26;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H312,32[8C89%[29;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H312,32[8C90%[26;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H312,32[8C89%[29;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H312,32[8C88%[32;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H312,32[8C87%[35;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H312,32[8C86%[38;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H312,32[8C85%[41;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H312,32[8C84%[44;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H311,32[8C83%[46;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H311,32[8C84%[43;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H311,32[8C85%[40;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H311,32[8C86%[37;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H311,32[8C87%[34;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H311,32[8C88%[31;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H311,32[8C89%[28;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H311,32[8C90%[25;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H311,32[8C89%[28;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H311,32[8C90%[25;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter[m[52;88H[K[52;88H311,32[8C91%[22;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    ---------
    args: tuple
        Tuple of multiple input objects[m[52;88H[K[52;88H311,32[8C92%[19;32H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    num: int
        Line number of strings to truncate after (default 10)
    """[m[52;88H[K[52;88H311,32[8C93%[16;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H311,32[8C92%[19;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H311,32[8C91%[22;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H311,32[8C90%[25;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H311,32[8C89%[28;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H311,32[8C88%[31;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H311,32[8C87%[34;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H311,32[8C86%[37;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H311,32[8C85%[40;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H311,32[8C84%[43;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H311,32[8C83%[46;32H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)[m[52;88H[K[52;88H308,4[9C82%[46;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H308,4[9C83%[43;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H308,4[9C84%[40;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H308,4[9C85%[37;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H308,4[9C86%[34;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H308,4[9C87%[31;4H[?25h[?25l[52;78H:[31;4H[52;78H[K[52;1H:[?25h [?25l[31;4H[52;88H308,4[9C87%[31;4H[?25h[?25l[52;78H:[31;4H[52;78H[K[52;1H:[?25hpwd[?25l/home/sejinnam/gd/projects/mods/scripts[31;4H[52;88H308,4[9C87%[31;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;1H[K[52;88H308,4[9C88%[28;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H308,4[9C89%[25;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H308,4[9C90%[22;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter[m[52;88H[K[52;88H308,4[9C91%[19;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Range of the graph
    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H308,4[9C90%[22;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H308,4[9C89%[25;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H308,4[9C88%[28;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H308,4[9C89%[25;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H308,4[9C90%[22;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x: numpy array[float]
        Domain of the graph
    y: numpy array[float][m[52;88H[K[52;88H308,4[9C89%[25;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H308,4[9C88%[28;4H[?25h[?25l[52;90H7,18[27;18H[?25h[?25l[52;90H8,4 [28;4H[?25h[?25l[29;26H[106m([mY[106m)[m[52;90H9,28[29;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H309,28[8C87%[32;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H309,28[8C86%[35;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H309,28[8C85%[38;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H309,28[8C84%[41;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H309,28[8C83%[44;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)[m[47;26H(Y)[52;88H[K[52;88H308,4[9C82%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    Examples
    --------[m[46;13H[106m([mgrid[106m)[m[52;88H[K[52;88H305,18[8C81%[46;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.[m[49;13H(grid)[52;88H[K[52;88H302,28[8C80%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H299,28[8C79%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H296,28[8C78%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H293,28[8C77%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H290,18[8C76%[46;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H287,26[8C76%[46;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[46;19H[31m[106m[[5C][m[52;88H[K[52;88H284,25[8C75%[46;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H284,25[8C76%[43;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H284,25[8C76%[40;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H284,25[8C77%[37;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H284,25[8C78%[34;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H284,25[8C79%[31;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H284,25[8C80%[28;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(Y):[51;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H284,25[8C81%[25;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y, label=f[31m'plot {i}'[m)[52;88H[K[52;88H284,25[8C82%[22;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H284,25[8C83%[19;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H284,25[8C84%[16;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H284,25[8C85%[13;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H284,25[8C84%[16;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H284,25[8C83%[19;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)[m[52;88H[K[52;88H284,25[8C82%[22;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    Examples
    --------[m[52;88H[K[52;88H284,25[8C81%[25;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.[m[52;88H[K[52;88H284,25[8C80%[28;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H284,25[8C79%[31;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H284,25[8C78%[34;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H284,25[8C79%[31;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H284,25[8C78%[34;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H284,25[8C77%[37;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H284,25[8C76%[40;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H284,25[8C76%[43;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H284,25[8C75%[46;25H[?25h[?25l[8;18H[106m([15;15H)[m[46;19H[31m[float][m[52;89H53,1[15;15H[?25h[?25l[52;78Ha[15;15H[52;78H [15;16H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H253,16[8C75%[15;16H[?25h[?25l,:[8;18H([15;15H)[52;93H7[15;17H[?25h[?25l:[15;17H[K[8;18H[106m([15;15H)[m[52;93H6[15;16H[?25h[?25l[106m:[m[15;16H[K[8;18H([15;15H:[52;93H5[15;15H[?25h[?25l,:[52;93H6[15;16H[?25h[?25l[16;51r[16;1H[L[1;52r[15;16H[K[16;5H:[52;88H[K[52;88H254,5[9C74%[16;5H[?25h[?25l):[8;18H[106m([16;5H)[m[52;92H6[16;6H[?25h[?25la:[8;18H([16;5H)[52;92H7[16;7H[?25h[?25l[38;5;130mas[m:[52;92H8[16;8H[?25h[?25la:[16;8H[K[52;92H7[16;7H[?25h[?25l:[16;7H[K[8;18H[106m([16;5H)[m[52;92H6[16;6H[?25h[?25l[52;92H5[16;5H[?25h[?25l[106ma[m):a[106m)[m[52;92H6[16;6H[?25h[?25l[38;5;130ma[m[38;5;130m[106ms[m):[38;5;130ms[m[106m)[m[52;92H7[16;7H[?25h[?25las[106md[m):d[106m)[m[52;92H8[16;8H[?25h[?25l[103masd[m[106mf[m):[103mf[m[106m)[m[52;92H9[16;9H[?25h[?25l[106ms[m):s[106m)[m[52;92H10[16;10H[?25h[?25l[106md[m):d[106m)[m[52;93H1[16;11H[?25h[?25l[106mf[m):f[106m)[m[52;93H2[16;12H[?25h[?25l[106m [m): [106m)[m[52;93H3[16;13H[?25h[?25l[8;18H([16;13H)[52;93H2[16;12H[?25h[?25l ):[16;14H[K[52;93H1[16;11H[?25h[?25l ):[16;13H[K[52;93H0[16;10H[?25h[?25l ):[16;12H[K[52;92H9 [16;9H[?25h[?25lasd ):[16;11H[K[52;92H8[16;8H[?25h[?25l[38;5;130mas[m ):[16;10H[K[52;92H7[16;7H[?25h[?25la ):[16;9H[K[52;92H6[16;6H[?25h[?25l ):[16;8H[K[52;92H5[16;5H[?25h[?25lc ):[52;92H6[16;6H[?25h[?25lh ):[52;92H7[16;7H[?25h[?25le ):[52;92H8[16;8H[?25h[?25lc ):[52;92H9[16;9H[?25h[?25lk ):[52;92H10[16;10H[?25h[?25l= ):[52;93H1[16;11H[?25h[?25lF ):[52;93H2[16;12H[?25h[?25la ):[52;93H3[16;13H[?25h[?25ll ):[52;93H4[16;14H[?25h[?25ls ):[52;93H5[16;15H[?25h[?25l[36mFalse[m ):[52;93H6[16;16H[?25h[52;1H[K[16;15H[?25l[52;78H^[[16;15H[52;78H  [16;16H[52;88H254,15[8C74%[16;15H[?25h[?25l[52;78H:[16;15H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11747B written[16;15H[52;88H254,15[8C74%[52;88H[K[52;88H254,15[8C74%[16;15H[?25h[?25l[52;93H4[16;14H[?25h[?25l[52;78H;[16;14H[52;78H [16;14H[?25h[?25l[52;78Hl[16;14H[52;78H [16;15H[52;93H5[16;15H[?25h[?25l[52;78Hl[16;15H[52;78H [16;16H[52;93H6[16;16H[?25h[?25l[52;78Hl[16;16H[52;78H [16;17H[8;18H[106m([16;17H)[m[52;93H7[16;17H[?25h[?25l[52;78Hi[16;17H[52;78H [16;17H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H254,17[8C74%[16;17H[?25h[?25l)[106m:[m[16;18H[K[16;16H[106m)[m:[52;93H6[16;16H[?25h[?25lFals)[106m:[m[16;17H[K[16;15H[106m)[m:[52;93H5[16;15H[?25h[?25l)[106m:[m[16;16H[K[16;14H[106m)[m:[52;93H4[16;14H[?25h[?25l)[106m:[m[16;15H[K[16;13H[106m)[m:[52;93H3[16;13H[?25h[?25l)[106m:[m[16;14H[K[16;12H[106m)[m:[52;93H2[16;12H[?25h[?25l)[106m:[m[16;13H[K[16;11H[106m)[m:[52;93H1[16;11H[?25h[?25l)[106m:[m[16;12H[K[16;10H[106m)[m:[52;93H0[16;10H[?25h[?25l)[106m:[m[16;11H[K[16;9H[106m)[m:[52;92H9 [16;9H[?25h[?25l)[106m:[m[16;10H[K[16;8H[106m)[m:[52;92H8[16;8H[?25h[?25l)[106m:[m[16;9H[K[16;7H[106m)[m:[52;92H7[16;7H[?25h[?25l)[106m:[m[16;8H[K[16;6H[106m)[m:[52;92H6[16;6H[?25h[?25l)[106m:[m[16;7H[K[16;5H[106m)[m:[52;92H5[16;5H[?25h[?25l):[16;5H[K[16;1H[106m)[m[52;92H1[16;1H[?25h[?25l[15;51r[51;1H
[1;52r[15;1H    grid=[36mFalse[m,):
[106m [m[51;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H253,16[8C75%[15;16H[106m)[m
 [15;16H[?25h[?25l)[106m:[m[15;17H[K[15;15H[106m)[m:[52;93H5[15;15H[?25h[52;1H[K[15;14H[?25l[52;78H^[[15;14H[52;78H  [15;15H[8;18H([15;15H)[52;88H253,14[8C75%[15;14H[?25h[?25l[52;78H:[15;14H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11729B written[15;14H[52;88H253,14[8C75%[52;88H[K[52;88H253,14[8C75%[15;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;1H[K[52;88H253,14[8C76%[12;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H253,14[8C76%[9;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H253,14[8C77%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H256,14[8C78%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H259,14[8C79%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H262,12[8C80%[6;12H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(Y):[51;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H265,14[8C81%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y, label=f[31m'plot {i}'[m)[52;88H[K[52;88H268,14[8C82%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H271,14[8C83%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;13H[31m[106m([12;5H)[m[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H274,13[8C84%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;13H[31m([9;5H)[m[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H277,14[8C85%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H280,5[9C86%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H283,13[8C87%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H286,14[8C88%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H289,14[8C89%[6;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    
    Parameter
    ---------[m[52;88H[K[52;88H289,14[8C88%[9;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H289,14[8C87%[12;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H289,14[8C86%[15;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H289,14[8C85%[18;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H289,14[8C84%[21;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H289,14[8C83%[24;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)[m[52;88H[K[52;88H289,14[8C82%[27;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    Examples
    --------[m[52;88H[K[52;88H289,14[8C81%[30;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.[m[52;88H[K[52;88H289,14[8C80%[33;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H289,14[8C79%[36;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H289,14[8C78%[39;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H289,14[8C77%[42;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H289,14[8C76%[45;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H287,14[8C76%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H284,14[8C75%[46;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H284,14[8C76%[43;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float[m[52;88H[K[52;88H284,14[8C76%[40;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool[m[52;88H[K[52;88H284,14[8C77%[37;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H284,14[8C78%[34;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m][52;88H[K[52;88H284,14[8C79%[31;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H284,14[8C80%[28;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(Y):[51;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H284,14[8C81%[25;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(y)])[50;9Hplt.plot(x, y, label=f[31m'plot {i}'[m)[52;88H[K[52;88H284,14[8C82%[22;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H284,14[8C83%[19;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H284,14[8C84%[16;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H284,14[8C85%[13;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H284,14[8C86%[10;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H284,14[8C87%[7;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H284,14[8C86%[10;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H284,14[8C85%[13;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H284,14[8C86%[10;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H284,14[8C87%[7;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H286,14[8C88%[6;14H[?25h[?25l[27;21H[106m[[1C][m[52;88H307,23[27;23H[?25h[?25l[[1C][52;89H12,31[32;31H[?25h[?25l[29;26H[106m([mY[106m)[m[52;89H09,28[29;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )[m[52;88H[K[52;88H309,28[8C87%[32;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H309,28[8C86%[35;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from ipywidgets import interact first
    interact([m[52;88H[K[52;88H309,28[8C85%[38;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H309,28[8C84%[41;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H309,28[8C83%[44;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)[m[47;26H(Y)[52;88H[K[52;88H308,4[9C82%[46;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[31m    Examples
    --------[m[46;13H[106m([mgrid[106m)[m[52;88H[K[52;88H305,18[8C81%[46;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.[m[49;13H(grid)[52;88H[K[52;88H302,28[8C80%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of [m[52;88H[K[52;88H299,28[8C79%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H296,28[8C78%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H293,28[8C77%[46;28H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H290,18[8C76%[46;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H287,26[8C76%[46;26H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[46;19H[31m[106m[[5C][m[52;88H[K[52;88H284,25[8C75%[46;25H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float[m[52;88H[K[52;88H284,25[8C76%[43;25H[?25h[?25l[31m[float][m[52;89H53,13[12;13H[?25h[?25l[52;78Hl[12;13H[52;78H [12;14H[52;93H4[12;14H[?25h[?25l[52;78Hl[12;14H[52;78H [12;15H[5;18H[106m([12;15H)[m[52;93H5[12;15H[?25h[?25l[52;78Hi[12;15H[52;78H [12;15H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H253,15[8C76%[12;15H[?25h[?25lFals)[106m:[m[12;16H[K[12;14H[106m)[m:[52;93H4[12;14H[?25h[?25l)[106m:[m[12;15H[K[12;13H[106m)[m:[52;93H3[12;13H[?25h[?25l)[106m:[m[12;14H[K[12;12H[106m)[m:[52;93H2[12;12H[?25h[?25l)[106m:[m[12;13H[K[12;11H[106m)[m:[52;93H1[12;11H[?25h[?25l)[106m:[m[12;12H[K[12;10H[106m)[m:[52;93H0[12;10H[?25h[?25l)[106m:[m[12;11H[K[12;9H[106m)[m:[52;92H9 [12;9H[?25h[?25l)[106m:[m[12;10H[K[12;8H[106m)[m:[52;92H8[12;8H[?25h[?25l)[106m:[m[12;9H[K[12;7H[106m)[m:[52;92H7[12;7H[?25h[?25l)[106m:[m[12;8H[K[12;6H[106m)[m:[52;92H6[12;6H[?25h[?25l)[106m:[m[12;7H[K[12;5H[106m)[m:[52;92H5[12;5H[?25h[?25l[106mg[m):g[106m)[m[52;92H6[12;6H[?25h[?25l[106mr[m):r[106m)[m[52;92H7[12;7H[?25h[?25l[106mi[m):i[106m)[m[52;92H8[12;8H[?25h[?25l[106md[m):d[106m)[m[52;92H9[12;9H[?25h[?25l[106m=[m):=[106m)[m[52;92H10[12;10H[?25h[?25l[106mF[m):F[106m)[m[52;93H1[12;11H[?25h[?25l[106ma[m):a[106m)[m[52;93H2[12;12H[?25h[?25l[106ml[m):l[106m)[m[52;93H3[12;13H[?25h[?25l[106ms[m):s[106m)[m[52;93H4[12;14H[?25h[?25l[36mFals[m[36m[106me[m):[36me[m[106m)[m[52;93H5[12;15H[?25h[?25l[106m,[m):,[106m)[m[52;93H6[12;16H[?25h[?25l[13;51r[13;1H[L[1;52r[12;16H[K[13;5H):[52;88H[K[52;88H254,5[9C75%[13;5H[106m)[?25h[?25la[m):a[106m)[m[52;92H6[13;6H[?25h[?25l[106mr[m):r[106m)[m[52;92H7[13;7H[?25h[?25l[106mg[m):g[106m)[m[52;92H8[13;8H[?25h[?25l[106ms[m):s[106m)[m[52;92H9[13;9H[?25h[?25l)[106m:[m[13;10H[K[13;8H[106m)[m:[52;92H8[13;8H[?25h[?25l)[106m:[m[13;9H[K[13;7H[106m)[m:[52;92H7[13;7H[?25h[?25l)[106m:[m[13;8H[K[13;6H[106m)[m:[52;92H6[13;6H[?25h[?25l)[106m:[m[13;7H[K[13;5H[106m)[m:[52;92H5[13;5H[?25h[?25l[106m*[m):*[106m)[m[52;92H6[13;6H[?25h[?25l[106ma[m):a[106m)[m[52;92H7[13;7H[?25h[?25l[106mr[m):r[106m)[m[52;92H8[13;8H[?25h[?25l[106mg[m):g[106m)[m[52;92H9[13;9H[?25h[?25l[106ms[m):s[106m)[m[52;92H10[13;10H[?25h[?25l[106m=[m):=[106m)[m[52;93H1[13;11H[?25h[?25l)[106m:[m[13;12H[K[13;10H[106m)[m:[52;93H0[13;10H[?25h[52;1H[K[13;9H[?25l[52;78H^[[13;9H[52;78H  [13;10H[5;18H([13;10H)[52;88H254,9[9C75%[13;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,9[9C76%[10;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,9[9C77%[7;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H256,7[9C78%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H259,9[9C79%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H262,9[9C80%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(Y):[52;88H[K[52;88H265,9[9C81%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_min = np.min([y_min, np.min(y)])[50;9Hy_max = np.max([y_max, np.max(y)])[51;9Hplt.plot(x, y, label=f[31m'plot {i}'[m)[52;88H[K[52;88H268,9[9C82%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m[52;88H[K[52;88H271,9[9C83%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H274,9[9C84%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale[52;88H[K[52;88H277,9[9C85%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyf = y_mid + y_size_half*y_scale[51;5Hx_diff = x_max - xf[52;88H[K[52;88H280,9[9C86%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_diff = y_max - yf[51;5Hx_min = xi + x_diff*x_position[52;88H[K[52;88H283,9[9C87%[6;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H283,9[9C86%[9;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H283,9[9C85%[12;9H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H283,9[9C84%[15;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale[52;88H[K[52;88H283,9[9C85%[12;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyf = y_mid + y_size_half*y_scale[51;5Hx_diff = x_max - xf[52;88H[K[52;88H283,9[9C86%[9;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_diff = y_max - yf[51;5Hx_min = xi + x_diff*x_position[52;88H[K[52;88H283,9[9C87%[6;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H286,9[9C88%[6;9H[?25h[?25l[52;88H309,4[29;4H[?25h[?25l[30;26H[106m([mY[106m)[m[52;89H10,26[30;26H[?25h[?25l(Y)[52;93H7[30;27H[?25h[?25l[52;78Hl[30;27H[52;78H [30;28H[106m([mY[106m)[m[52;93H8[30;28H[?25h[?25l[52;78Hi[30;28H[52;78H [30;28H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H310,28[8C88%[30;28H[?25h[?25l)[106m:[m[30;29H[K[30;27H[106m)[m:[52;93H7[30;27H[?25h[?25l[106ma[m):a[106m)[m[52;93H8[30;28H[?25h[?25l[106mr[m):r[106m)[m[52;93H9[30;29H[?25h[?25l[106mg[m):g[106m)[m[52;92H30[30;30H[?25h[?25l[106ms[m):s[106m)[m[52;93H1[30;31H[?25h[52;1H[K[30;30H[?25l[52;78H^[[30;30H[52;78H  [30;31H(args)[52;88H310,30[8C88%[30;30H[?25h[?25l[52;78Hk[30;30H[52;78H [29;4H[52;89H09,4 [29;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H309,4[9C87%[32;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H309,4[9C86%[35;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H309,4[9C85%[38;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H309,4[9C84%[41;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H309,4[9C83%[44;4H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[46;19H[106m([4C)[m[52;88H[K[52;88H308,24[8C82%[46;24H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[46;14H[106m[[2C][m[49;19H([4C)[52;88H[K[52;88H305,17[8C81%[46;17H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[49;14H[[2C][52;88H[K[52;88H302,30[8C80%[46;30H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H*args):[3;5H[31m"""[m[52;88H[K[52;88H299,14[8C79%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m,[52;88H[K[52;88H296,21[8C78%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H293,21[8C77%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H290,30[8C76%[46;30H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[46;19H[31m[106m[[5C][m[52;88H[K[52;88H287,25[8C75%[46;25H[?25h[?25l[31m[float][m[52;89H54,5 [13;5H[?25h[?25l[52;78Hi[13;5H[52;78H [13;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H254,5[9C75%[13;5H[?25h[?25l**args):[52;92H6[13;6H[?25h[?25l[52;92H7[13;7H[?25h[?25lkargs):[52;92H8[13;8H[?25h[?25lwargs):[52;92H9[13;9H[?25h[52;1H[K[13;8H[?25l[52;78H^[[13;8H[52;78H  [13;9H[52;88H254,8[9C75%[13;8H[?25h[?25l[52;78H:[13;8H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11746B written[13;8H[52;88H254,8[9C75%[52;88H[K[52;88H254,8[9C75%[13;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;1H[K[52;88H254,8[9C76%[10;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,8[9C77%[7;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H256,7[9C78%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H259,8[9C79%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H262,8[9C80%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(args):[52;88H[K[52;88H265,8[9C81%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_min = np.min([y_min, np.min(y)])[50;9Hy_max = np.max([y_max, np.max(y)])[51;9Hplt.plot(x, y, label=f[31m'plot {i}'[m)[52;88H[K[52;88H268,8[9C82%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m[52;88H[K[52;88H271,8[9C83%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H274,8[9C84%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale[52;88H[K[52;88H277,8[9C85%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyf = y_mid + y_size_half*y_scale[51;5Hx_diff = x_max - xf[52;88H[K[52;88H280,8[9C86%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_diff = y_max - yf[51;5Hx_min = xi + x_diff*x_position[52;88H[K[52;88H283,8[9C87%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H286,8[9C88%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H289,8[9C88%[6;8H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""[m[52;88H[K[52;88H292,8[9C89%[6;8H[?25h[?25l[52;88H311,20[25;20H[?25h[?25l[52;89H09,4 [23;4H[?25h[?25l[52;78Hi[23;4H[52;78H [23;4H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H309,4[9C89%[23;4H[?25h[?25l[52;92H1[23;1H[?25h[?25l[22;51r[51;1H
[1;52r[22;5Hy_max = np.max(Y[[31m0[m])[51;1H[31m    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H308,25[8C90%[22;19H[106m([4C)[?25h[?25l[23;51r[m[23;1H[L[1;52r[52;88H[K[52;88H309,5[9C89%[22;19H([4C)
    [?25h[?25l[24;51r[24;1H[L[1;52r[52;88H[K[52;88H310,5[9C89%[24;5H[?25h[?25l[25;51r[25;1H[L[1;52r[24;5H[34m# Create Checkbox widgets for each y-axis data[m
checkboxes[52;11H[1m(paste) --[m[52;88H[K[25;12H[?25h[?25l= [Checkbox(value=[36mTrue[m, description=f[31m'plot {i}'[m) [38;5;130mfor[m i, _ [38;5;130min[m enu[?25h[?25l[26;51r[26;1H[3L[1;52r[25;73H[36menumerate[m(Y)]

[34m# Use HBox to display checkboxes horizontally[m
checkb[?25h[?25loxes_box = HBox(checkboxes)[28;22H[106m([10C)[m[52;88H314,34[8C88%[28;34H[?25h[?25l[29;51r[29;1H[L[1;52r[52;11H[1m--a[m[52;13H[K[52;88H315,1[9C88%[28;22H([10C)
[?25h[52;1H[K[29;1H[?25l[52;78H^[[29;1H[52;78H  [29;1H[52;88H315,0-1[7C88%[29;1H[?25h[?25l[52;78Hk[29;1H[52;78H [28;1H[52;90H4,1  [28;1H[?25h[?25l[52;78HV[28;1H[52;78H1[28;1Hc[47mheckboxes_box = HBox(checkboxes) [m[52;1H[1m-- VISUAL LINE --[m[52;78H[K[52;78H1[28;1H[52;88H314,1[9C88%[28;1H[?25h[?25l[52;78Hk[28;1H[52;78H2[27;1H[1C[34m[47m Use HBox to display checkboxes horizontally[m[47m 
c[m[52;90H3[27;1H[?25h[?25l[52;78Hk[27;1H[52;78H3[26;1H
[34m[47m#[m[52;90H2,0-1[26;1H[?25h[?25l[52;78Hk[26;1H[52;78H4[25;1Hc[47mheckboxes = [Checkbox(value=[m[36m[47mTrue[m[47m, description=f[m[31m[47m'plot {i}'[m[47m) [m[38;5;130m[47mfor[m[47m i, _ [m[38;5;130m[47min[m[47m [m[36m[47menumerate[m[47m(Y)] 
 [m[52;90H1,1  [25;1H[?25h[?25l[52;78H>[25;1H[52;1H4 lines >ed 1 time[52;78H[K[25;5H    checkboxes = [Checkbox(value=[36mTrue[m, description=f[31m'plot {i}'[m) [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(Y)][26;1H[K[27;1H    [34m# Use HBox to display checkboxes horizontally[m
    checkboxes_box = HBox(checkboxes)[52;1H[K[52;88H311,5[9C88%4 lines >ed 1 time[52;88H[K[52;88H311,5[9C88%[25;5H[?25h[?25l[52;78Hj[25;5H[52;78H [26;1H[52;90H2,0-1[26;1H[?25h[?25l[52;78Hj[26;1H[52;78H [27;5H[52;90H3,5  [27;5H[?25h[?25l[52;78Hj[27;5H[52;78H [28;5H[52;90H4[28;5H[?25h[?25l[52;78Hj[28;5H[52;78H [29;1H[52;90H5,0-1[29;1H[?25h[?25l[52;78Hj[29;1H[52;78H [30;5H[52;90H6,5  [30;5H[?25h[?25l[52;78Hl[30;5H[52;78H [30;6H[52;92H6[30;6H[?25h[?25l[52;78Hl[30;6H[52;78H [30;7H[52;92H7[30;7H[?25h[?25l[52;78Hl[30;7H[52;78H [30;8H[52;92H8[30;8H[?25h[?25l[52;78Hl[30;8H[52;78H [30;9H[52;92H9[30;9H[?25h[?25l[52;78Hl[30;9H[52;78H [30;10H[52;92H10[30;10H[?25h[?25l[52;78Hl[30;10H[52;78H [30;11H[52;93H1[30;11H[?25h[?25l[52;78Hl[30;11H[52;78H [30;12H[52;93H2[30;12H[?25h[?25l[52;78Hl[30;12H[52;78H [30;13H[52;93H3[30;13H[?25h[?25l[52;78Hl[30;13H[52;78H [30;14H[52;93H4[30;14H[?25h[?25l[52;78Hl[30;14H[52;78H [30;15H[52;93H5[30;15H[?25h[?25l[52;78Hl[30;15H[52;78H [30;16H[52;93H6[30;16H[?25h[?25l[52;78Hl[30;16H[52;78H [30;17H[52;93H7[30;17H[?25h[?25l[52;78Hl[30;17H[52;78H [30;18H[52;93H8[30;18H[?25h[?25l[52;78Hl[30;18H[52;78H [30;19H[52;93H9[30;19H[?25h[?25l[52;78Hl[30;19H[52;78H [30;20H[52;92H20[30;20H[?25h[?25l[52;78Hl[30;20H[52;78H [30;21H[52;93H1[30;21H[?25h[?25l[52;78Hl[30;21H[52;78H [30;22H[52;93H2[30;22H[?25h[?25l[52;78Hl[30;22H[52;78H [30;23H[52;93H3[30;23H[?25h[?25l[52;78Hl[30;23H[52;78H [30;24H[52;93H4[30;24H[?25h[?25l[52;78Hl[30;24H[52;78H [30;25H[52;93H5[30;25H[?25h[?25l[52;78Hl[30;25H[52;78H [30;26H[106m([margs[106m)[m[52;93H6[30;26H[?25h[?25l[52;78Hl[30;26H[52;78H [30;27H(args)[52;93H7[30;27H[?25h[?25l[52;78Hl[30;27H[52;78H [30;28H[52;93H8[30;28H[?25h[?25l[52;78Hl[30;28H[52;78H [30;29H[52;93H9[30;29H[?25h[?25l[52;78Hl[30;29H[52;78H [30;30H[52;92H30[30;30H[?25h[?25l[52;78Hl[30;30H[52;78H [30;31H[106m([margs[106m)[m[52;93H1[30;31H[?25h[?25l[52;78Hi[30;31H[52;78H [30;31H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H316,31[8C88%[30;31H[?25h[?25l)[106m:[m[30;32H[K[30;30H[106m)[m:[52;93H0[30;30H[?25h[?25l)[106m:[m[30;31H[K[30;29H[106m)[m:[52;92H29[30;29H[?25h[?25l)[106m:[m[30;30H[K[30;28H[106m)[m:[52;93H8[30;28H[?25h[?25l)[106m:[m[30;29H[K[30;27H[106m)[m:[52;93H7[30;27H[?25h[?25l[106mc[m):c[106m)[m[52;93H8[30;28H[?25h[?25l[106mh[m):h[106m)[m[52;93H9[30;29H[?25h[?25l[106me[m):e[106m)[m[52;92H30[30;30H[?25h[?25l[106mc[m):c[106m)[m[52;93H1[30;31H[?25h[?25l[106mk[m):k[106m)[m[52;93H2[30;32H[?25h[?25l[106mb[m):b[106m)[m[52;93H3[30;33H[?25h[?25l[106mo[m):o[106m)[m[52;93H4[30;34H[?25h[?25l[106mx[m):x[106m)[m[52;93H5[30;35H[?25h[?25l[106me[m):e[106m)[m[52;93H6[30;36H[?25h[?25l[106ms[m):s[106m)[m[52;93H7[30;37H[?25h[52;1H[K[30;36H[?25l[52;78H^[[30;36H[52;78H  [30;37H[30;26H([10C)[52;88H316,36[8C88%[30;36H[?25h[?25l[52;78Hj[30;36H[52;78H [31;36H[52;90H7[31;36H[?25h[?25l[52;78Hj[31;36H[52;78H [32;36H[52;90H8[32;36H[?25h[?25l[52;78Hk[32;36H[52;78H [31;36H[52;90H7[31;36H[?25h[?25l[52;78Hk[31;36H[52;78H [30;36H[52;90H6[30;36H[?25h[?25l[52;78Hj[30;36H[52;78H [31;36H[52;90H7[31;36H[?25h[?25l[52;78Hk[31;36H[52;78H [30;36H[52;90H6[30;36H[?25h[?25l[52;78Hh[30;36H[52;78H [30;35H[52;93H5[30;35H[?25h[?25l[52;78Hh[30;35H[52;78H [30;34H[52;93H4[30;34H[?25h[?25l[52;78Hh[30;34H[52;78H [30;33H[52;93H3[30;33H[?25h[?25l[52;78Hh[30;33H[52;78H [30;32H[52;93H2[30;32H[?25h[?25l[52;78Hh[30;32H[52;78H [30;31H[52;93H1[30;31H[?25h[?25l[52;78Hh[30;31H[52;78H [30;30H[52;93H0[30;30H[?25h[?25l[52;78Hh[30;30H[52;78H [30;29H[52;92H29[30;29H[?25h[?25l[52;78Hh[30;29H[52;78H [30;28H[52;93H8[30;28H[?25h[?25l[52;78Hh[30;28H[52;78H [30;27H[52;93H7[30;27H[?25h[?25l[52;78Hh[30;27H[52;78H [30;26H[106m([10C)[m[52;93H6[30;26H[?25h[?25l[52;78Hh[30;26H[52;78H [30;25H[1C([10C)[52;93H5[30;25H[?25h[?25l[52;78Hk[30;25H[52;78H [29;1H[52;90H5,0-1[29;1H[?25h[?25l[52;78Hk[29;1H[52;78H [28;25H[52;90H4,25 [28;25H[?25h[?25l[52;78Hk[28;25H[52;78H [27;25H[52;90H3[27;25H[?25h[?25l[52;78Hk[27;25H[52;78H [26;1H[52;90H2,0-1[26;1H[?25h[?25l[52;78Hk[26;1H[52;78H [25;25H[52;90H1,25 [25;25H[?25h[?25l[52;78Hj[25;25H[52;78H [26;1H[52;90H2,0-1[26;1H[?25h[?25l[52;78Hj[26;1H[52;78H [27;25H[52;90H3,25 [27;25H[?25h[?25l[52;78Hj[27;25H[52;78H [28;25H[52;90H4[28;25H[?25h[?25l[52;78H:[28;25H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 375L, 11979B written[28;25H[52;88H314,25[8C88%[52;88H[K[52;88H314,25[8C88%[28;25H[?25h[?25l[52;78Hg[28;25H[?25h[?25l[52;78H [28;25H[52;78Hgg[28;25H[52;78H  [1;1H[27m[23m[29m[m[H[2J[1;1H[34m# personal python functions and classes[m

[35mimport[m numpy [38;5;130mas[m np
[35mimport[m matplotlib.pyplot [38;5;130mas[m plt

[38;5;130mclass[m [36mFUNCS[m:
    [31m"""
    class that returns funcs instance that returns list of custom-defined functions
    
    Attribute
    ---------
    num: int
        number variable used to keep track of total number of custom functions
        
    """[m
    [38;5;130mdef[m [36m__init__[m(self):[17;9Hself.num = [31m0[m[19;5H[38;5;130mdef[m [36m__repr__[m(self):[20;9H[31m"""
        prints custom-defined functions
        """[m[23;9Hself.num = [31m0[m[24;9Hitems = [36mglobals[m().items()[25;9H[38;5;130mfor[m key, value [38;5;130min[m items:[26;13H[38;5;130mif[m [36mcallable[m(value) [38;5;130mand[m value.__module__ == __name__:[27;17Hself.num += [31m1[m[28;17H[36mprint[m(key)[29;9H[38;5;130mreturn[m [36mstr[m(f[31m"total number of custom objects is {self.num}"[m)

[38;5;130mdef[m [36mmatd[m(matrix):
    [31m"""
    displays numpy array as image of matrix (without brackets) for easy view
    
    parameter
    ---------
    matrix: numpy array[float or int]
        numpy array of float or int
    """[m
    [34m# set configurations[m
    zeros = np.zeros(matrix.shape)
    rescale_factor = [31m3[m/[31m5[m
    figsize = (rescale_factor*matrix.shape[[31m1[m], rescale_factor*matrix.shape[[31m0[m])
    matrix = np.flip(matrix, axis=[31m0[m)
    ext1 = matrix.shape[[31m1[m] - [31m0.9[m
    ext2 = matrix.shape[[31m0[m] - [31m0.9[m[48;5H[34m# Create a figure and axes[m
    fig, ax = plt.subplots(figsize=figsize)[51;5H[34m# Set the title and remove the axes ticks[m[52;88H1,1[11CTop[1;1H[?25h[?25l[52;78Hj[1;1H[52;78H [2;1H[52;88H2,0-1[2;1H[?25h[?25l[52;78Hj[2;1H[52;78H [3;1H[52;88H3,1  [3;1H[?25h[?25l[52;78Hl[3;1H[52;78H [3;2H[52;90H2[3;2H[?25h[?25l[52;78Hj[3;2H[52;78H [4;2H[52;88H4[4;2H[?25h[?25l[52;78Hh[4;2H[52;78H [4;1H[52;90H1[4;1H[?25h[?25l[52;78Ho[4;1H[52;78H [5;1H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H5,1[11CTop[5;51r[5;1H[L[1;52r[52;88H[K[52;88H5,1[11CTop[5;1H[?25h[?25lf[52;90H2[5;2H[?25h[?25lr[52;90H3[5;3H[?25h[?25lo[52;90H4[5;4H[?25h[?25l[35mfrom[m[52;90H5[5;5H[?25h[?25l[52;90H6[5;6H[?25h[?25li[52;90H7[5;7H[?25h[?25l[5;6H[K[52;90H6[5;6H[?25h[?25l[52;90H5[5;5H[?25h[?25lfro[5;4H[K[52;90H4[5;4H[?25h[?25l[5;3H[K[52;90H3[5;3H[?25h[?25l[5;2H[K[52;90H2[5;2H[?25h[?25l[5;1H[K[52;90H1[5;1H[?25h[?25l[6;51r[6;1H[L[1;52r[5;1H[35mfrom[m ipywidgets [35mimport[m interact, Checkbox, VBox[52;88H[K[52;88H6,1[11CTop[6;1H[?25h[52;1H[K[6;1H[?25l[52;78H^[[6;1H[52;78H  [6;1H[52;88H6,0-1[9CTop[6;1H[?25h[?25l[52;78Hd[6;1H[?25h[?25l[52;79Hd[6;1H[52;78H  [6;1H[6;51r[51;1H
[1;52r[52;88H[K[52;88H6,0-1[9CTop[6;1H[?25h[?25l[52;78Hk[6;1H[52;78H [5;1H[52;88H5,1  [5;1H[?25h[?25l[52;78Hw[5;1H[52;78H [5;6H[52;90H6[5;6H[?25h[?25l[52;78Hw[5;6H[52;78H [5;17H[52;90H17[5;17H[?25h[?25l[52;78Hw[5;17H[52;78H [5;24H[52;90H24[5;24H[?25h[?25l[52;78Hw[5;24H[52;78H [5;32H[52;90H32[5;32H[?25h[?25l[52;78Hw[5;32H[52;78H [5;34H[52;91H4[5;34H[?25h[?25l[52;78Hw[5;34H[52;78H [5;42H[52;90H42[5;42H[?25h[?25l[52;78Hw[5;42H[52;78H [5;44H[52;91H4[5;44H[?25h[?25l[52;78Hh[5;44H[52;78H [5;43H[52;91H3[5;43H[?25h[?25l[52;78Hh[5;43H[52;78H [5;42H[52;91H2[5;42H[?25h[?25l[52;78Hb[5;42H[52;78H [5;34H[52;90H34[5;34H[?25h[?25l[52;78Hb[5;34H[52;78H [5;32H[52;91H2[5;32H[?25h[?25l[52;78Hd[5;32H[?25h[?25l[52;79Ha[5;32H[?25h[?25l[52;80Hw[5;32H[52;78H   [5;32HCheckbox, VBox[5;46H[K[5;32H[?25h[?25l[52;78Hu[5;32H[52;1H1 change; before #44  1 second ago[52;78H[K[5;32H, Checkbox, VBox[52;88H5,32[10CTop[52;88H[K[52;88H5,32[10CTop[5;32H[?25h[?25l[52;78H~@k[5;32H[52;78H   [5;31H[52;91H1[5;31H[?25h[?25l[52;78Hd[5;31H[?25h[?25l[52;79Ha[5;31H[?25h[?25l[52;80Hw[5;31H[52;78H   [5;23H, Checkbox, VBox[5;39H[K[52;90H23[5;23H[?25h[?25l[52;78Hx[5;23H[52;78H [5;23H[52;78Hdl[5;23H[52;78H  [5;23H Checkbox, VBox[5;38H[K[5;23H[?25h[?25l[52;78Hl[5;23H[52;78H [5;24H[52;91H4[5;24H[?25h[?25l[52;78Hl[5;24H[52;78H [5;25H[52;91H5[5;25H[?25h[?25l[52;78Hl[5;25H[52;78H [5;26H[52;91H6[5;26H[?25h[?25l[52;78Hl[5;26H[52;78H [5;27H[52;91H7[5;27H[?25h[?25l[52;78Hl[5;27H[52;78H [5;28H[52;91H8[5;28H[?25h[?25l[52;78Hl[5;28H[52;78H [5;29H[52;91H9[5;29H[?25h[?25l[52;78Hl[5;29H[52;78H [5;30H[52;90H30[5;30H[?25h[?25l[52;78Hl[5;30H[52;78H [5;31H[52;91H1[5;31H[?25h[?25l[52;78Hl[5;31H[52;78H [5;32H[52;91H2[5;32H[?25h[?25l[52;78Hl[5;32H[52;78H [5;33H[52;91H3[5;33H[?25h[?25l[52;78Hl[5;33H[52;78H [5;34H[52;91H4[5;34H[?25h[?25l[52;78Hv[5;34H[52;78H1[5;34H[52;1H[1m-- VISUAL --[m[52;13H[K[52;78H1[5;34H[52;88H5,34[10CTop[5;34H[?25h[?25l[52;78HH[5;34H[52;78H5[1;1H[1C[34m[47m personal python functions and classes[m[47m 
 [m
[35m[47mimport[m[47m numpy [m[38;5;130m[47mas[m[47m np [m
[35m[47mimport[m[47m matplotlib.pyplot [m[38;5;130m[47mas[m[47m plt [m
[35m[47mfrom[m[47m ipywidgets [m[35m[47mimport[m[47m Checkbox, V[m[52;88H1,1 [1;1H[?25h[?25l[52;78H^[[1;1H[52;78H5 [1;1H[52;79H^[[1;1H[52;78H   [1;1H[1C[34m personal python functions and classes[m[1;40H[K[2;1H[K[3;1H[35mimport[m numpy [38;5;130mas[m np[3;19H[K[4;1H[35mimport[m matplotlib.pyplot [38;5;130mas[m plt[4;32H[K[5;1H[35mfrom[m ipywidgets [35mimport[m Checkbox, V[52;1H[K[52;88H1,1[11CTop[1;1H[?25h[?25l[52;78Hj[1;1H[52;78H [2;1H[52;88H2,0-1[2;1H[?25h[?25l[52;78Hj[2;1H[52;78H [3;1H[52;88H3,1  [3;1H[?25h[?25l[52;78Hj[3;1H[52;78H [4;1H[52;88H4[4;1H[?25h[?25l[52;78Hj[4;1H[52;78H [5;1H[52;88H5[5;1H[?25h[?25l[52;78Hw[5;1H[52;78H [5;6H[52;90H6[5;6H[?25h[?25l[52;78Hw[5;6H[52;78H [5;17H[52;90H17[5;17H[?25h[?25l[52;78Hw[5;17H[52;78H [5;24H[52;90H24[5;24H[?25h[?25l[52;78Hw[5;24H[52;78H [5;32H[52;90H32[5;32H[?25h[?25l[52;78Hw[5;32H[52;78H [5;34H[52;91H4[5;34H[?25h[?25l[52;78Hr[5;34H[?25h[?25l[52;79HH[5;34H[52;78H  [5;34HH[?25h[?25l[52;78H:[5;34H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 376L, 12017B written[5;34H[52;88H5,34[10CTop[52;88H[K[52;88H5,34[10CTop[5;34H[?25h[?25l[52;78Hj[5;34H[52;78H [6;1H[52;88H6,0-1[6;1H[?25h[?25l[52;78Hj[6;1H[52;78H [7;12H[52;88H7,12 [7;12H[?25h[?25l[52;78HG[7;12H[52;78H [51;9H[27m[23m[29m[m[H[2J[2;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[7;5Hx_diff = x_max - xf
    y_diff = y_max - yf[10;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[15;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print
    in order to see multiple prints all at once on Jupyter lab.
    
    Parameter
    ---------
    args: tuple
        Tuple of multiple input objects
    num: int
        Line number of strings to truncate after (default 10)
    """[m
    [34m# get each object to print[m
    [38;5;130mfor[m arg [38;5;130min[m args:[32;9H[34m# initialize first index, end string, and object string[m[33;9Hind = [31m0[m[34;9Hend_str = [31m' ............'[m[35;9Harg_str = arg.__str__()[37;9H[34m# iterate num times to find num-th index of '\n' for arg_str[m[38;9H[38;5;130mfor[m count [38;5;130min[m [36mrange[m(num):[39;13Hnew_ind = arg_str[ind:].find([31m'[m[35m\n[m[31m'[m)[41;13H[34m# stop iterating if there are fewer than num lines in the string[m[42;13H[38;5;130mif[m new_ind == -[31m1[m:[43;17Hind = new_ind[44;17Hend_str = [31m''[m[45;17H[38;5;130mbreak[m[47;13H[34m# update the index until it reaches num-th line[m[48;13Hind = new_ind + ind + [31m2[m[50;9H[34m# print the string until num-th line[m[51;9H[36mprint[m(arg_str[:ind-[31m2[m] + end_str + [31m'[m[35m\n\n[m[31m'[m)[52;88H376,9[9CBot[51;9H[?25h[?25l[52;78Hk[51;9H[52;78H [50;9H[52;90H5[50;9H[?25h[?25l[52;78Hk[50;9H[52;78H [49;9H[52;90H4[49;9H[?25h[?25l[52;78Hk[49;9H[52;78H [48;9H[52;90H3[48;9H[?25h[?25l[52;78Hk[48;9H[52;78H [47;9H[52;90H2[47;9H[?25h[?25l[52;78Hk[47;9H[52;78H [46;1H[52;90H1,0-1[46;1H[?25h[?25l[52;78H4[46;1H[?25h[?25l[52;79H4[46;1H[?25h[?25l[52;80Hk[46;1H[52;78H   [6;9H[1;51r[1;1H[4L[1;52r[1;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H327,9[9C98%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;1H[1;51r[1;1H[L[1;52r[52;88H[K[52;88H326,0-1[7C98%[6;1H[?25h[?25l[52;78Hk[6;1H[52;78H [6;9H[1;51r[1;1H[L[1;52r[1;9Hplt.plot(x, y, label=f[31m'plot {i}'[m)[52;88H[K[52;88H325,9[9C98%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;9H[1;51r[1;1H[L[1;52r[1;9Hy_max = np.max([y_max, np.max(y)])[52;88H[K[52;88H324,9[9C97%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;9H[1;51r[1;1H[L[1;52r[1;9Hy_min = np.min([y_min, np.min(y)])[52;88H[K[52;88H323,9[9C97%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;9H[1;51r[1;1H[L[1;52r[1;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(checkboxes):[52;88H[K[52;88H322,9[9C97%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;4H[1;51r[1;1H[L[1;52r[52;88H[K[52;88H321,4[9C96%[6;4H[?25h[?25l[52;78Hk[6;4H[52;78H [6;9H[1;51r[1;1H[L[1;52r[1;5Hcheckboxes_box = HBox(checkboxes)[52;88H[K[52;88H320,9[9C96%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;9H[1;51r[1;1H[L[1;52r[1;5H[34m# Use HBox to display checkboxes horizontally[m[52;88H[K[52;88H319,9[9C96%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;9H[1;51r[1;1H[L[1;52r[52;88H[K[52;88H318,9[9C96%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;9H[1;51r[1;1H[L[1;52r[1;5Hcheckboxes = [Checkbox(value=[36mTrue[m, description=f[31m'plot {i}'[m) [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(Y)][52;88H[K[52;88H317,9[9C95%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;1H[1;51r[1;1H[L[1;52r[1;5H[34m# Create Checkbox widgets for each y-axis data[m[52;88H[K[52;88H316,0-1[7C95%[6;1H[?25h[?25l[52;78Hk[6;1H[52;78H [6;9H[1;51r[1;1H[L[1;52r[52;88H[K[52;88H315,9[9C95%[6;9H[?25h[?25l[52;78Hk[6;9H[52;78H [6;9H[1;51r[1;1H[L[1;52r[1;5Hy_max = np.max(Y[[31m0[m])[52;88H[K[52;88H314,9[9C94%[6;9H[?25h[?25l[52;78Hj[6;9H[52;78H [7;9H[52;90H5[7;9H[?25h[?25l[52;78Hj[7;9H[52;78H [8;1H[52;90H6,0-1[8;1H[?25h[?25l[52;78H:[8;1H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 376L, 12017B written[8;1H[52;88H316,0-1[7C94%[52;88H[K[52;88H316,0-1[7C94%[8;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;1H[K[52;88H316,0-1[7C93%[11;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H316,0-1[7C92%[14;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H316,0-1[7C92%[17;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H316,0-1[7C91%[20;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H316,0-1[7C90%[23;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H316,0-1[7C89%[26;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""[m[52;88H[K[52;88H316,0-1[7C90%[23;1H[?25h[?25l[52;78Hj[23;1H[52;78H [24;9H[52;90H7,9  [24;9H[?25h[?25l[52;78Hj[24;9H[52;78H [25;9H[52;90H8[25;9H[?25h[?25l[52;78Hl[25;9H[52;78H [25;10H[52;92H10[25;10H[?25h[?25l[52;78Hl[25;10H[52;78H [25;11H[52;93H1[25;11H[?25h[?25l[52;78Hl[25;11H[52;78H [25;12H[52;93H2[25;12H[?25h[?25l[52;78Hl[25;12H[52;78H [25;13H[52;93H3[25;13H[?25h[?25l[52;78Hl[25;13H[52;78H [25;14H[52;93H4[25;14H[?25h[?25l[52;78Hl[25;14H[52;78H [25;15H[52;93H5[25;15H[?25h[?25l[52;78Hl[25;15H[52;78H [25;16H[52;93H6[25;16H[?25h[?25l[52;78Hl[25;16H[52;78H [25;17H[52;93H7[25;17H[?25h[?25l[52;78Hl[25;17H[52;78H [25;18H[52;93H8[25;18H[?25h[?25l[52;78Hl[25;18H[52;78H [25;19H[52;93H9[25;19H[?25h[?25l[52;78Hl[25;19H[52;78H [25;20H[52;92H20[25;20H[?25h[?25l[52;78Hl[25;20H[52;78H [25;21H[52;93H1[25;21H[?25h[?25l[52;78Hl[25;21H[52;78H [25;22H[52;93H2[25;22H[?25h[?25l[52;78Hl[25;22H[52;78H [25;23H[106m([18C)[m[52;93H3[25;23H[?25h[?25l[52;78Hl[25;23H[52;78H [25;24H([106m[[16C][m)[52;93H4[25;24H[?25h[?25l[52;78Hl[25;24H[52;78H [25;25H[[16C][52;93H5[25;25H[?25h[?25l[52;78Hk[25;25H[52;78H [24;25H[52;90H7[24;25H[?25h[?25l[52;78Hl[24;25H[52;78H [24;26H[106m([10C)[m[52;93H6[24;26H[?25h[?25l[52;78Hl[24;26H[52;78H [24;27H([10C)[52;93H7[24;27H[?25h[?25l[52;78Hl[24;27H[52;78H [24;28H[52;93H8[24;28H[?25h[?25l[52;78Hl[24;28H[52;78H [24;29H[52;93H9[24;29H[?25h[?25l[52;78Hl[24;29H[52;78H [24;30H[52;92H30[24;30H[?25h[?25l[52;78Hl[24;30H[52;78H [24;31H[52;93H1[24;31H[?25h[?25l[52;78Hl[24;31H[52;78H [24;32H[52;93H2[24;32H[?25h[?25l[52;78Hl[24;32H[52;78H [24;33H[52;93H3[24;33H[?25h[?25l[52;78Hj[24;33H[52;78H [25;33H[52;90H8[25;33H[?25h[?25l[52;78Hl[25;33H[52;78H [25;34H[52;93H4[25;34H[?25h[?25l[52;78Hl[25;34H[52;78H [25;35H[52;93H5[25;35H[?25h[?25l[52;78Hl[25;35H[52;78H [25;36H[52;93H6[25;36H[?25h[?25l[52;78Hl[25;36H[52;78H [25;37H[52;93H7[25;37H[?25h[?25l[52;78Hl[25;37H[52;78H [25;38H[106m([my[106m)[m[52;93H8[25;38H[?25h[?25l[52;78Hl[25;38H[52;78H [25;39H(y)[52;93H9[25;39H[?25h[?25l[52;78Hl[25;39H[52;78H [25;40H[106m([my[106m)[m[52;92H40[25;40H[?25h[?25l[52;78Hh[25;40H[52;78H [25;39H(y)[52;92H39[25;39H[?25h[?25l[52;78Hl[25;39H[52;78H [25;40H[106m([my[106m)[m[52;92H40[25;40H[?25h[?25l[52;78Hi[25;40H[52;78H [25;40H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H318,40[8C90%[25;40H[?25h[52;1H[K[25;39H[?25l[52;78H^[[25;39H[52;78H  [25;40H(y)[52;88H318,39[8C90%[25;39H[?25h[?25l[52;78Hh[25;39H[52;78H [25;38H[106m([my[106m)[m[52;93H8[25;38H[?25h[?25l[52;78Hl[25;38H[52;78H [25;39H(y)[52;93H9[25;39H[?25h[?25l[52;78Hl[25;39H[52;78H [25;40H[106m([my[106m)[m[52;92H40[25;40H[?25h[?25l[52;78Hi[25;40H[52;78H [25;40H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H318,40[8C90%[25;40H[?25h[?25l)[106m][m)[25;42H[K[25;39H[106m)[m][52;92H39[25;39H[?25h[?25l[106mY[m)])Y[106m)[m[52;92H40[25;40H[?25h[?25l[106m[[m)])[[106m)[m[52;93H1[25;41H[?25h[?25l[106mi[m)])i[106m)[m[52;93H2[25;42H[?25h[?25l[106m][m)])][106m)[m[52;93H3[25;43H[?25h[52;1H[K[25;42H[?25l[52;78H^[[25;42H[52;78H  [25;43H(Y[106m[[mi[106m][m)[52;88H318,42[8C90%[25;42H[?25h[?25l[52;78Hj[25;42H[52;78H [26;42H[25;40H[i][26;23H[106m([18C)[m[52;90H9[26;42H[?25h[?25l[52;78Hh[26;42H[52;78H [26;41H[26;23H([106m[[16C][m)[52;93H1[26;41H[?25h[?25l[52;78Hh[26;41H[52;78H [26;40H[26;24H[[13C[106m([my[106m)[m][52;93H0[26;40H[?25h[?25l[52;78Hi[26;40H[52;78H [26;40H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H319,40[8C90%[26;40H[?25h[?25l)[106m][m) [106m)[m][52;92H39[26;39H[?25h[?25l[106mY[m)])Y[106m)[m[52;92H40[26;40H[?25h[?25l[106m[[m)])[[106m)[m[52;93H1[26;41H[?25h[?25l[106mi[m)])i[106m)[m[52;93H2[26;42H[?25h[?25l[106m][m)])][106m)[m[52;93H3[26;43H[?25h[52;1H[K[26;42H[?25l[52;78H^[[26;42H[52;78H  [26;43H(Y[106m[[mi[106m][m)[52;88H319,42[8C90%[26;42H[?25h[?25l[52;78H:[26;42H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 376L, 12023B written[26;42H[52;88H319,42[8C90%[52;88H[K[52;88H319,42[8C90%[26;42H[?25h[?25l[52;78Hj[26;42H[52;78H [27;41H[26;40H[i][27;17H[106m([23C)[m[52;89H20,41[27;41H[?25h[?25l[52;78Hh[27;41H[52;78H [27;40H[27;17H([23C)[52;93H0[27;40H[?25h[?25l[52;78Hh[27;40H[52;78H [27;39H[31m[106m{[1C}[m[52;92H39[27;39H[?25h[?25l[52;78Hh[27;39H[52;78H [27;38H[31m{i}[m[52;93H8[27;38H[?25h[?25l[52;78Hh[27;38H[52;78H [27;37H[31m[106m{[1C}[m[52;93H7[27;37H[?25h[?25l[52;78Hh[27;37H[52;78H [27;36H[1C[31m{i}[m[52;93H6[27;36H[?25h[?25l[52;78Hh[27;36H[52;78H [27;35H[52;93H5[27;35H[?25h[?25l[52;78Hh[27;35H[52;78H [27;34H[52;93H4[27;34H[?25h[?25l[52;78Hh[27;34H[52;78H [27;33H[52;93H3[27;33H[?25h[?25l[52;78Hh[27;33H[52;78H [27;32H[52;93H2[27;32H[?25h[?25l[52;78Hh[27;32H[52;78H [27;31H[52;93H1[27;31H[?25h[?25l[52;78Hh[27;31H[52;78H [27;30H[52;93H0[27;30H[?25h[?25l[52;78Hh[27;30H[52;78H [27;29H[52;92H29[27;29H[?25h[?25l[52;78Hh[27;29H[52;78H [27;28H[52;93H8[27;28H[?25h[?25l[52;78Hh[27;28H[52;78H [27;27H[52;93H7[27;27H[?25h[?25l[52;78Hh[27;27H[52;78H [27;26H[52;93H6[27;26H[?25h[?25l[52;78Hh[27;26H[52;78H [27;25H[52;93H5[27;25H[?25h[?25l[52;78Hh[27;25H[52;78H [27;24H[52;93H4[27;24H[?25h[?25l[52;78Hh[27;24H[52;78H [27;23H[52;93H3[27;23H[?25h[?25l[52;78Hh[27;23H[52;78H [27;22H[52;93H2[27;22H[?25h[?25l[52;78Hh[27;22H[52;78H [27;21H[52;93H1[27;21H[?25h[?25l[52;78Hl[27;21H[52;78H [27;22H[52;93H2[27;22H[?25h[?25l[52;78Hi[27;22H[52;78H [27;22H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H320,22[8C90%[27;22H[?25h[?25l, label=f[31m'plot {i}'[m)[27;41H[K[52;93H1[27;21H[?25h[?25lY, label=f[31m'plot {i}'[m)[52;93H2[27;22H[?25h[?25l[, label=f[31m'plot {i}'[m)[52;93H3[27;23H[?25h[?25li, label=f[31m'plot {i}'[m)[52;93H4[27;24H[?25h[?25l], label=f[31m'plot {i}'[m)[27;22H[106m[[mi[106m][m[52;93H5[27;25H[?25h[52;1H[K[27;24H[?25l[52;78H^[[27;24H[52;78H  [27;25H[52;88H320,24[8C90%[27;24H[?25h[?25l[52;78H:[27;24H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 376L, 12026B written[27;24H[52;88H320,24[8C90%[52;88H[K[52;88H320,24[8C90%[27;24H[?25h[?25l[52;78Hk[27;24H[52;78H [26;24H[106m[[19C][m[27;22H[i][52;89H19[26;24H[?25h[?25l[52;78Hk[26;24H[52;78H [25;24H[106m[[19C][m[26;24H[[19C][52;90H8[25;24H[?25h[?25l[52;78Hk[25;24H[52;78H [24;24H[25;24H[[19C][52;90H7[24;24H[?25h[?25l[52;78Hk[24;24H[52;78H [23;1H[52;90H6,0-1[23;1H[?25h[?25l[52;78Hk[23;1H[52;78H [22;24H[52;90H5,24 [22;24H[?25h[?25l[52;78Ho[22;24H[52;78H [23;5H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H316,5[9C89%[23;51r[23;1H[L[1;52r[52;88H[K[52;88H316,5[9C89%[23;5H[?25h[?25lc[52;92H6[23;6H[?25h[?25lh[52;92H7[23;7H[?25h[?25le[52;92H8[23;8H[?25h[?25lc[52;92H9[23;9H[?25h[?25lk[52;92H10[23;10H[?25h[?25lb[52;93H1[23;11H[?25h[?25lo[52;93H2[23;12H[?25h[?25lx[52;93H3[23;13H[?25h[?25le[52;93H4[23;14H[?25h[?25lx[52;93H5[23;15H[?25h[?25l_[52;93H6[23;16H[?25h[?25lb[52;93H7[23;17H[?25h[?25lo[52;93H8[23;18H[?25h[?25lx[52;93H9[23;19H[?25h[52;1H[K[23;18H[?25l[52;78H^[[23;18H[52;78H  [23;19H[52;88H316,18[8C89%[23;18H[?25h[?25l[52;78H:[23;18H[52;78H[K[52;1H:[?25hwq[?25l[?1000l[?2004l[>4;m"mods.py" 377L, 12045B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                                         ]2;sejinnam@gn-08-15-00:~/gd/projects/mods/scripts]1;../mods/scripts[0m[27m[24m[J(TF) [1m[38;5;226mgn-08-15-00[0m  [38;5;046mscripts[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004hvvim mods.py[1m [0m[0m [?1l>[?2004l
]2;vim mods.py]1;vim[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H"mods.py" 377L, 12045B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float[m[2;19H[K[3;1H[31m        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[3;95H[K[4;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)
    grid: bool
        If true, grid is shown on the graph (default False)
    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m]
    x_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[21;5H[34m# Create Checkbox widgets for each y-axis data[m
    checkboxes = [Checkbox(value=[36mTrue[m, description=f[31m'plot {i}'[m) [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(Y)][24;5H[34m# Use HBox to display checkboxes horizontally[m
    checkboxes_box = HBox(checkboxes)
    checkboxex_box[28;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(checkboxes):[29;9Hy_min = np.min([y_min, np.min(Y[i])])[30;9Hy_max = np.max([y_max, np.max(Y[i])])[31;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[33;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[38;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[43;5Hx_diff = x_max - xf
    y_diff = y_max - yf[46;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[51;5Hplt.axis([x_min, x_max, y_min, y_max])[52;88H316,18[8C88%[26;18H[?25h[?12$p[?25l[52;78Hh[26;18H[52;78H [26;17H[52;93H7[26;17H[?25h[?25l[52;78Hh[26;17H[52;78H [26;16H[52;93H6[26;16H[?25h[?25l[52;78Hh[26;16H[52;78H [26;15H[52;93H5[26;15H[?25h[?25l[52;78Hi[26;15H[52;78H [26;15H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H316,15[8C88%[26;15H[?25h[?25l_box[26;18H[K[52;93H4[26;14H[?25h[?25lx_box[52;93H5[26;15H[?25h[?25l_box[26;18H[K[52;93H4[26;14H[?25h[?25ls_box[52;93H5[26;15H[?25h[52;1H[K[26;14H[?25l[52;78H^[[26;14H[52;78H  [26;15H[52;88H316,14[8C88%[26;14H[?25h[?25l[52;78H:[26;14H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 377L, 12045B written[26;14H[52;88H316,14[8C88%[52;88H[K[52;88H316,14[8C88%[26;14H[?25h[?25l[52;78H:[26;14H[52;1H[K[52;1H:[?25hset mouse=a[?25l[?1000h[26;14H[52;88H316,14[8C88%[26;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;1H[K[52;88H316,14[8C88%[29;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H316,14[8C87%[32;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    )
    
    Parameter[m[52;88H[K[52;88H316,14[8C86%[35;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H316,14[8C85%[38;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H316,14[8C84%[41;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H316,14[8C83%[44;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H315,14[8C82%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H312,14[8C81%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[52;88H[K[52;88H309,14[8C80%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[46;14H[106m[[2C][m[52;88H[K[52;88H306,14[8C79%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[49;14H[[2C][52;88H[K[52;88H303,14[8C78%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H**kwargs):[3;5H[31m"""[m[52;88H[K[52;88H300,14[8C77%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m,[52;88H[K[52;88H297,14[8C76%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H294,14[8C76%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H291,14[8C75%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H288,14[8C74%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H285,13[8C73%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[40;13H[31m[106m([46;5H)[m[52;88H[K[52;88H282,5[9C72%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[3;5H[34m# tick locations with labels[m[43;13H[31m([49;5H)[m[52;88H[K[52;88H279,14[8C71%[46;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H279,14[8C72%[43;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;88H[K[52;88H279,14[8C73%[40;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H279,14[8C74%[37;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H279,14[8C75%[34;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H279,14[8C76%[31;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H279,14[8C76%[28;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H279,14[8C77%[25;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H279,14[8C78%[22;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[34m# Create Checkbox widgets for each y-axis data[m[52;88H[K[52;88H279,14[8C79%[19;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hcheckboxes = [Checkbox(value=[36mTrue[m, description=f[31m'plot {i}'[m) [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(Y)][51;5H[34m# Use HBox to display checkboxes horizontally[m[52;88H[K[52;88H279,14[8C80%[16;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hcheckboxes_box = HBox(checkboxes)
    checkboxes_box[52;88H[K[52;88H279,14[8C81%[13;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(checkboxes):[50;9Hy_min = np.min([y_min, np.min(Y[i])])[51;9Hy_max = np.max([y_max, np.max(Y[i])])[52;88H[K[52;88H279,14[8C82%[10;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[51;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H279,14[8C83%[7;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H281,14[8C84%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale[52;88H[K[52;88H284,13[8C85%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H287,14[8C86%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H290,14[8C87%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position[52;88H[K[52;88H293,14[8C88%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = yf + y_diff*y_position[51;5Hplt.axis([x_min, x_max, y_min, y_max])[52;88H[K[52;88H296,14[8C88%[6;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;88H[K[52;88H296,14[8C88%[9;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H296,14[8C87%[12;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position[52;88H[K[52;88H296,14[8C88%[9;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = yf + y_diff*y_position[51;5Hplt.axis([x_min, x_max, y_min, y_max])[52;88H[K[52;88H296,14[8C88%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):[52;88H[K[52;88H299,14[8C89%[6;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H299,14[8C88%[9;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;88H[K[52;88H299,14[8C88%[12;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H299,14[8C87%[15;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    )
    
    Parameter[m[52;88H[K[52;88H299,14[8C86%[18;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H299,14[8C85%[21;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H299,14[8C84%[24;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H299,14[8C83%[27;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H299,14[8C82%[30;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H299,14[8C81%[33;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[52;88H[K[52;88H299,14[8C80%[36;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[52;88H[K[52;88H299,14[8C79%[39;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[52;88H[K[52;88H299,14[8C78%[42;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H**kwargs):[3;5H[31m"""[m[52;88H[K[52;88H299,14[8C77%[45;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m,[52;88H[K[52;88H297,14[8C76%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H294,14[8C76%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H291,14[8C75%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H288,14[8C74%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H285,13[8C73%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[40;13H[31m[106m([46;5H)[m[52;88H[K[52;88H282,5[9C72%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[3;5H[34m# tick locations with labels[m[43;13H[31m([49;5H)[m[52;88H[K[52;88H279,14[8C71%[46;14H[?25h[?25l[52;89H53,11[20;11H[?25h[?25l[52;90H6,4 [23;4H[?25h[?25l[14;18H[106m([22;13H)[m[52;90H5,13[22;13H[?25h[?25l[52;78Hi[22;13H[52;78H [22;13H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H255,13[8C71%[22;13H[?25h[?25l)[106m:[m[22;14H[K[22;12H[106m)[m:[52;93H2[22;12H[?25h[?25l)[106m:[m[22;13H[K[22;11H[106m)[m:[52;93H1[22;11H[?25h[?25l)[106m:[m[22;12H[K[22;10H[106m)[m:[52;93H0[22;10H[?25h[?25l)[106m:[m[22;11H[K[22;9H[106m)[m:[52;92H9 [22;9H[?25h[?25l)[106m:[m[22;10H[K[22;8H[106m)[m:[52;92H8[22;8H[?25h[?25l)[106m:[m[22;9H[K[22;7H[106m)[m:[52;92H7[22;7H[?25h[?25l)[106m:[m[22;8H[K[22;6H[106m)[m:[52;92H6[22;6H[?25h[?25l)[106m:[m[22;7H[K[22;5H[106m)[m:[52;92H5[22;5H[?25h[?25l[106mc[m):c[106m)[m[52;92H6[22;6H[?25h[?25l[106mh[m):h[106m)[m[52;92H7[22;7H[?25h[?25l[106me[m):e[106m)[m[52;92H8[22;8H[?25h[?25l[106mc[m):c[106m)[m[52;92H9[22;9H[?25h[?25l[106mk[m):k[106m)[m[52;92H10[22;10H[?25h[?25l[106mb[m):b[106m)[m[52;93H1[22;11H[?25h[?25l[106m0[m):0[106m)[m[52;93H2[22;12H[?25h[?25l[106mx[m):x[106m)[m[52;93H3[22;13H[?25h[?25l)[106m:[m[22;14H[K[22;12H[106m)[m:[52;93H2[22;12H[?25h[?25l)[106m:[m[22;13H[K[22;11H[106m)[m:[52;93H1[22;11H[?25h[?25l[106mx[m):x[106m)[m[52;93H2[22;12H[?25h[?25l[106mo[m):o[106m)[m[52;93H3[22;13H[?25h[?25l)[106m:[m[22;14H[K[22;12H[106m)[m:[52;93H2[22;12H[?25h[?25l)[106m:[m[22;13H[K[22;11H[106m)[m:[52;93H1[22;11H[?25h[?25l[106mo[m):o[106m)[m[52;93H2[22;12H[?25h[?25l[106mx[m):x[106m)[m[52;93H3[22;13H[?25h[?25l[106me[m):e[106m)[m[52;93H4[22;14H[?25h[?25l[106ms[m):s[106m)[m[52;93H5[22;15H[?25h[52;1H[K[22;14H[?25l[52;78H^[[22;14H[52;78H  [22;15H[14;18H([22;15H)[52;88H255,14[8C71%[22;14H[?25h[?25l[52;78Hl[22;14H[52;78H [22;15H[14;18H[106m([22;15H)[m[52;93H5[22;15H[?25h[?25l[52;78Hi[22;15H[52;78H [22;15H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H255,15[8C71%[22;15H[?25h[?25l)[106m:[m[22;16H[K[22;14H[106m)[m:[52;93H4[22;14H[?25h[?25l)[106m:[m[22;15H[K[22;13H[106m)[m:[52;93H3[22;13H[?25h[52;1H[K[22;12H[?25l[52;78H^[[22;12H[52;78H  [22;13H[14;18H([22;13H)[52;88H255,12[8C71%[22;12H[?25h[?25l[52;78Hk[22;12H[52;78H [21;12H[52;90H4[21;12H[?25h[?25l[52;78Hk[21;12H[52;78H [20;12H[52;90H3[20;12H[?25h[?25l[14;18H[106m([22;13H)[m[52;90H5,13[22;13H[?25h[?25l[52;78H9[14;18H[1C[47m 
    x, 
    Y,  
    x_scale=[m[31m[47m1[m[47m,  
    y_scale=[m[31m[47m1[m[47m,  
    x_position=[m[31m[47m0[m[47m, 
    y_position=[m[31m[47m0[m[47m, 
    grid=[m[36m[47mFalse[m[47m, 
    checkbox)[m[52;1H[1m-- VISUAL --[m[52;78H[K[52;78H9[14;18H[52;88H247,18[8C71%[14;18H[?25h[?25l[?25h[?25l[52;78H [23;4H[14;18H([14;19H[K[15;1H    x,[15;7H[K[16;1H    Y, [16;8H[K[17;1H    x_scale=[31m1[m, [17;16H[K[18;1H    y_scale=[31m1[m, [18;16H[K[19;1H    x_position=[31m0[m,[19;18H[K[20;1H    y_position=[31m0[m,[20;18H[K[21;1H    grid=[36mFalse[m,[21;16H[K[22;1H    checkbox)[52;1H[K[52;88H256,4[9C71%[23;4H[?25h[?25l[14;18H[106m([22;13H)[m[52;90H5,13[22;13H[?25h[?25l[52;78Hk[22;13H[52;78H [21;13H[14;18H([22;13H)[52;90H4[21;13H[?25h[?25l[52;78Hl[21;13H[52;78H [21;14H[52;93H4[21;14H[?25h[?25l[52;78Hl[21;14H[52;78H [21;15H[52;93H5[21;15H[?25h[?25l[52;78Hh[21;15H[52;78H [21;14H[52;93H4[21;14H[?25h[?25l[52;78Hh[21;14H[52;78H [21;13H[52;93H3[21;13H[?25h[?25l[52;78Hj[21;13H[52;78H [22;13H[14;18H[106m([22;13H)[m[52;90H5[22;13H[?25h[?25l[52;78Hh[22;13H[52;78H [22;12H[14;18H([22;13H)[52;93H2[22;12H[?25h[?25l[52;78Hh[22;12H[52;78H [22;11H[52;93H1[22;11H[?25h[?25l[52;78Hh[22;11H[52;78H [22;10H[52;93H0[22;10H[?25h[?25l[52;78Hh[22;10H[52;78H [22;9H[52;92H9 [22;9H[?25h[?25l[52;78Hh[22;9H[52;78H [22;8H[52;92H8[22;8H[?25h[?25l[52;78Hh[22;8H[52;78H [22;7H[52;92H7[22;7H[?25h[?25l[52;78Hh[22;7H[52;78H [22;6H[52;92H6[22;6H[?25h[?25l[52;78Hh[22;6H[52;78H [22;5H[52;92H5[22;5H[?25h[?25l[52;78Hl[22;5H[52;78H [22;6H[52;92H6[22;6H[?25h[?25l[52;78Hl[22;6H[52;78H [22;7H[52;92H7[22;7H[?25h[?25l[52;78Hl[22;7H[52;78H [22;8H[52;92H8[22;8H[?25h[?25l[52;78Hl[22;8H[52;78H [22;9H[52;92H9[22;9H[?25h[?25l[52;78Hl[22;9H[52;78H [22;10H[52;92H10[22;10H[?25h[?25l[52;78Hl[22;10H[52;78H [22;11H[52;93H1[22;11H[?25h[?25l[52;78Hl[22;11H[52;78H [22;12H[52;93H2[22;12H[?25h[?25l[52;78Hl[22;12H[52;78H [22;13H[14;18H[106m([22;13H)[m[52;93H3[22;13H[?25h[?25l[52;78Hi[22;13H[52;78H [22;13H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H255,13[8C71%[22;13H[?25h[?25l)[106m:[m[22;14H[K[22;12H[106m)[m:[52;93H2[22;12H[?25h[?25l)[106m:[m[22;13H[K[22;11H[106m)[m:[52;93H1[22;11H[?25h[?25l)[106m:[m[22;12H[K[22;10H[106m)[m:[52;93H0[22;10H[?25h[?25l)[106m:[m[22;11H[K[22;9H[106m)[m:[52;92H9 [22;9H[?25h[?25l)[106m:[m[22;10H[K[22;8H[106m)[m:[52;92H8[22;8H[?25h[?25l)[106m:[m[22;9H[K[22;7H[106m)[m:[52;92H7[22;7H[?25h[?25l)[106m:[m[22;8H[K[22;6H[106m)[m:[52;92H6[22;6H[?25h[?25l)[106m:[m[22;7H[K[22;5H[106m)[m:[52;92H5[22;5H[?25h[?25l[106mp[m):p[106m)[m[52;92H6[22;6H[?25h[?25l[106ml[m):l[106m)[m[52;92H7[22;7H[?25h[?25l[106mo[m):o[106m)[m[52;92H8[22;8H[?25h[?25l[106mt[m):t[106m)[m[52;92H9[22;9H[?25h[?25l[106m_[m):_[106m)[m[52;92H10[22;10H[?25h[?25l[106mc[m):c[106m)[m[52;93H1[22;11H[?25h[?25l[106mh[m):h[106m)[m[52;93H2[22;12H[?25h[?25l[106me[m):e[106m)[m[52;93H3[22;13H[?25h[?25l[106mc[m):c[106m)[m[52;93H4[22;14H[?25h[?25l[106mk[m):k[106m)[m[52;93H5[22;15H[?25h[?25l[106mb[m):b[106m)[m[52;93H6[22;16H[?25h[?25l[106mo[m):o[106m)[m[52;93H7[22;17H[?25h[?25l[106mx[m):x[106m)[m[52;93H8[22;18H[?25h[?25l[106m=[m):=[106m)[m[52;93H9[22;19H[?25h[?25l[106mN[m):N[106m)[m[52;92H20[22;20H[?25h[?25l[106mo[m):o[106m)[m[52;93H1[22;21H[?25h[?25l[106mn[m):n[106m)[m[52;93H2[22;22H[?25h[?25l[36mNon[m[36m[106me[m):[36me[m[106m)[m[52;93H3[22;23H[?25h[52;1H[K[22;22H[?25l[52;78H^[[22;22H[52;78H  [22;23H[14;18H([22;23H)[52;88H255,22[8C71%[22;22H[?25h[?25l[52;78H:[22;22H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 377L, 12055B written[22;22H[52;88H255,22[8C71%[52;88H[K[52;88H255,22[8C71%[22;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.spines[[31m'right'[m].set_visible([36mFalse[m)[3;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m[52;1H[K[52;88H255,22[8C70%[25;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)[52;88H[K[52;88H255,22[8C69%[28;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# change the spine linewidth[m
    plt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[52;88H[K[52;88H255,22[8C68%[31;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    plt.plot(x, y, [31m'k-'[m, linewidth=[31m.5[m)
    plt.axis([xmin, xmax, [31m1.1[m*ymin, [31m1.1[m*ymax])[52;88H[K[52;88H255,22[8C67%[34;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.xaxis.set_label_coords([31m1.02[m, y_pos_for_x_label)
    ax.plot([31m1[m, [31m0[m, [31m">k"[m, markersize=[31m3[m, transform=ax.get_yaxis_transform(), clip_on=[36mFalse[m)[52;88H[K[52;88H255,22[8C66%[37;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5Hax.spines[[31m'bottom'[m].set_position(([31m'data'[m, [31m0[m))
    ax.set_xlabel(xlabel)[52;88H[K[52;88H255,22[8C65%[40;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130melse[m:[2;9Hax.spines[[31m'left'[m].set_visible([36mFalse[m)[3;9Hax.set_ylabel(ylabel).set_visible([36mFalse[m)[52;88H[K[52;88H255,22[8C65%[43;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hax.set_ylabel(ylabel, rotation=[31m0[m)[2;9Hax.yaxis.set_label_coords(x_pos_for_y_label, [31m1.02[m)[3;9Hax.plot([31m0[m, [31m1[m, [31m"^k"[m, markersize=[31m3[m, transform=ax.get_xaxis_transform(), clip_on=[36mFalse[m)[52;88H[K[52;88H255,22[8C64%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# configures plot axes, labels and their positions with arrow axis tips[m
    [38;5;130mif[m (xmin <= [31m0[m) [38;5;130mand[m ([31m0[m < xmax):[3;9Hax.spines[[31m'left'[m].set_position(([31m'data'[m, [31m0[m))[52;88H[K[52;88H252,17[8C63%[46;17H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_pos_for_y_label = -xmin/(xmax - xmin)
    y_pos_for_x_label = -ymin/(ymax - ymin) + [31m0.02[m[52;88H[K[52;88H249,7[9C62%[46;7H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m ymax < [31m0[m: ymax = -[31m0.1[m*ymin[3;5H[34m# axis label coordinate adjustments[m[52;88H[K[52;88H246,0-1[7C61%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# reset minimum and maximum of y if y-range does not contain 0[m
    [38;5;130mif[m [31m0[m < ymin: ymin = -[31m0.1[m*ymax[52;88H[K[52;88H243,0-1[7C60%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# minimums and maximums of x and y[m
    xmin, xmax, ymin, ymax = [36mmin[m(x), [36mmax[m(x), [36mmin[m(y), [36mmax[m(y)
    [36mprint[m(xmin, xmax, ymin, ymax, sep=[31m'    '[m)[52;88H[K[52;88H240,22[8C59%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hfig = plt.figure(figsize=([31m6[m,[31m4[m), dpi=[31m500[m)
    ax = fig.add_subplot([31m111[m)[52;88H[K[52;88H237,22[8C58%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9H[31m"font.size"[m: [31m9[m})[3;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m[52;88H[K[52;88H234,22[8C57%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.rcParams.update({[2;9H[31m"text.usetex"[m: [36mTrue[m,[3;9H[31m"font.family"[m: [31m'serif'[m,[46;14H[106m[[7C][m[52;88H[K[52;88H231,22[8C56%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        more plot options after graph execution
    """[m
    [34m# LaTeX font with size 9[m[49;14H[[7C][52;88H[K[52;88H228,0-1[7C55%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        filename for eps
    show: bool
        show executes plt.show() inside graph function if True. Set it to false if you want to add[m[52;88H[K[52;88H225,0-1[7C54%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        If True, the plot will be saved as esp file. EPS is a file format used for vector graphics 
        that is based on the PostScript language.
    filename: str[m[52;88H[K[52;88H222,22[8C53%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    xtick_labels: list[str]
        labels for ytick locations. There should be exactly the same number of labels as locations
    save: bool[m[52;88H[K[52;88H219,22[8C53%[46;22H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        labels for xtick locations. There should be exactly the same number of labels as locations
    ytick_locations: list[float]
        vertical locations of ticks. Default is empty list.[m[52;88H[K[52;88H216,0-1[7C52%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    xtick_locations: list[float]
        horizontal locations of ticks. Default is empty list.
    xtick_labels: list[str][m[52;88H[K[52;88H213,9[9C51%[46;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.xaxis.set_label_coords([31m1.02[m, y_pos_for_x_label)
    ax.plot([31m1[m, [31m0[m, [31m">k"[m, markersize=[31m3[m, transform=ax.get_yaxis_transform(), clip_on=[36mFalse[m)[52;88H[K[52;88H213,9[9C52%[43;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# plots y vs. x in black line with linesize 2 with the given axes[m
    plt.plot(x, y, [31m'k-'[m, linewidth=[31m.5[m)
    plt.axis([xmin, xmax, [31m1.1[m*ymin, [31m1.1[m*ymax])[52;88H[K[52;88H213,9[9C53%[40;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# change the spine linewidth[m
    plt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[52;88H[K[52;88H213,9[9C53%[37;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)[52;88H[K[52;88H213,9[9C54%[34;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.spines[[31m'right'[m].set_visible([36mFalse[m)[51;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m[52;88H[K[52;88H213,9[9C55%[31;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[51;5H[34m# tick locations with labels[m[52;88H[K[52;88H213,9[9C56%[28;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[52;88H[K[52;88H213,9[9C57%[25;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[51;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H213,9[9C58%[22;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H213,9[9C59%[19;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H213,9[9C60%[16;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H213,9[9C61%[13;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m,[52;88H[K[52;88H213,9[9C62%[10;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplot_checkbox=[36mNone[m):[51;5H[31m"""[m[52;88H[K[52;88H213,9[9C63%[7;9H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;22H[106m([mylabel[106m)[m[49;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[52;88H[K[52;88H215,22[8C64%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;22H(ylabel)[49;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[52;88H[K[52;88H218,22[8C65%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[52;88H[K[52;88H221,0-1[7C65%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H224,22[8C66%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H227,22[8C67%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H230,22[8C68%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H233,22[8C69%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H236,22[8C70%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    )
    
    Parameter[m[52;88H[K[52;88H239,0-1[7C71%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H242,22[8C72%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;22H[106m()[m[49;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;88H[K[52;88H245,22[8C73%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;22H()[49;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H248,6[9C74%[6;6H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H251,15[8C75%[6;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,15[8C76%[6;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H257,7[9C76%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H260,22[8C77%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H263,12[8C78%[6;12H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;17H[31m[106m([1C)[m[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[34m# Create Checkbox widgets for each y-axis data[m[52;88H[K[52;88H266,19[8C79%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;17H[31m(x)[m[49;5Hcheckboxes = [Checkbox(value=[36mTrue[m, description=f[31m'plot {i}'[m) [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(Y)][51;5H[34m# Use HBox to display checkboxes horizontally[m[52;88H[K[52;88H269,22[8C80%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hcheckboxes_box = HBox(checkboxes)
    checkboxes_box[52;88H[K[52;88H272,22[8C81%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(checkboxes):[50;9Hy_min = np.min([y_min, np.min(Y[i])])[51;9Hy_max = np.max([y_max, np.max(Y[i])])[52;88H[K[52;88H275,22[8C82%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[51;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H278,22[8C83%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H281,22[8C84%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale[52;88H[K[52;88H284,13[8C85%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H287,22[8C86%[6;22H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H290,18[8C87%[6;18H[?25h[?25l[52;88H314,19[30;19H[?25h[?25l[52;78Hk[30;19H[52;78H [29;1H[52;90H3,0-1[29;1H[?25h[?25l[52;78Hk[29;1H[52;78H [28;19H[52;90H2,19 [28;19H[?25h[?25l[52;78Hk[28;19H[52;78H [27;19H[52;90H1[27;19H[?25h[?25l[52;78HV[27;19H[52;78H1[27;19H[47m    [m[34m[47m# Create Check[1Cox widgets for each y-axis data[m[47m [m[52;1H[1m-- VISUAL LINE --[m[52;78H[K[52;78H1[27;19H[52;88H311,19[8C87%[27;19H[?25h[?25l[52;78Hj[27;19H[52;78H2[28;19H[27;19H[34m[47mb[m
[47m    checkboxes = [[mC[47mheckbox(value=[m[36m[47mTrue[m[47m, description=f[m[31m[47m'plot {i}'[m[47m) [m[38;5;130m[47mfor[m[47m i, _ [m[38;5;130m[47min[m[47m [m[36m[47menumerate[m[47m(Y)] [m[52;90H2[28;19H[?25h[?25l[52;78Hj[28;19H[52;78H3[29;1H[28;19H[47mC[m[52;90H3,0-1[29;1H[?25h[?25l[52;78Hj[29;1H[52;78H4[30;19H[29;1H[47m 
    [m[34m[47m# Use HBox to [1Cisplay checkboxes horizontally[m[47m [m[52;90H4,19 [30;19H[?25h[?25l[52;78Hj[30;19H[52;78H5[31;19H[30;19H[34m[47md[m
[47m    checkboxes_box[m [47m= HBox(checkboxes) [m[52;90H5[31;19H[?25h[?25l[52;78Hj[31;19H[52;78H6[32;19H[31;19H[47m 
    checkboxes_box[m[52;90H6[32;19H[?25h[?25l[52;78Hd[32;19H[52;1H6 fewer lines[1mE[m[52;14H[K[27;1H[27;51r[27;1H[6M[1;52r[46;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[51;5Hplt.axis([x_min, x_max, y_min, y_max])[52;1H[K[52;88H311,0-1[7C88%6 fewer lines[52;88H[K[52;88H311,0-1[7C88%[27;1H[?25h[?25l[52;78Hk[27;1H[52;78H [26;1H[52;90H0[26;1H[?25h[?25l[52;78Hd[26;1H[?25h[?25l[52;79Hd[26;1H[52;78H  [26;1H[26;51r[51;1H
[1;52r[51;5Hplt.show()[52;1H[K[52;88H310,0-1[7C89%[26;1H[?25h[?25l[52;78H:[26;1H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 370L, 11805B written[26;1H[52;88H310,0-1[7C89%[52;88H[K[52;88H310,0-1[7C89%[26;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    )
    
    Parameter[m[52;1H[K[52;88H310,0-1[7C88%[29;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H310,0-1[7C87%[32;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H310,0-1[7C86%[35;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H310,0-1[7C85%[38;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H310,0-1[7C84%[41;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H310,0-1[7C83%[44;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[52;88H[K[52;88H309,1[9C82%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[52;88H[K[52;88H306,1[9C81%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[52;88H[K[52;88H303,1[9C80%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplot_checkbox=[36mNone[m):[3;5H[31m"""[m[52;88H[K[52;88H300,1[9C79%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m,[52;88H[K[52;88H297,1[9C78%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H294,1[9C77%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H291,1[9C76%[46;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H288,1[9C75%[46;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H288,1[9C76%[43;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H288,1[9C77%[40;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H288,1[9C76%[43;1H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H288,1[9C75%[46;1H[?25h[?25l[52;89H55,20[13;20H[?25h[?25l[52;92H17[13;17H[?25h[?25l[52;78Ha[13;17H[52;78H [13;18H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H255,18[8C75%[13;18H[?25h[?25le=[36mNone[m):[52;93H9[13;19H[?25h[?25ls=[36mNone[m):[52;92H20[13;20H[?25h[52;1H[K[13;19H[?25l[52;78H^[[13;19H[52;78H  [13;20H[52;88H255,19[8C75%[13;19H[?25h[?25l[52;78H:[13;19H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 370L, 11807B written[13;19H[52;88H255,19[8C75%[52;88H[K[52;88H255,19[8C75%[13;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;1H[K[52;88H255,19[8C76%[10;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H255,19[8C77%[7;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H257,7[9C78%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H260,19[8C79%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H263,12[8C80%[6;12H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;17H[31m[106m([1C)[m[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[38;5;130mfor[m i, y [38;5;130min[m [36menumerate[m(checkboxes):[52;88H[K[52;88H266,19[8C81%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;17H[31m(x)[m[49;9Hy_min = np.min([y_min, np.min(Y[i])])[50;9Hy_max = np.max([y_max, np.max(Y[i])])[51;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[52;88H[K[52;88H269,19[8C82%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m[52;88H[K[52;88H272,19[8C83%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H275,19[8C84%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale[52;88H[K[52;88H278,19[8C85%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyf = y_mid + y_size_half*y_scale[51;5Hx_diff = x_max - xf[52;88H[K[52;88H281,19[8C86%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_diff = y_max - yf[51;5Hx_min = xi + x_diff*x_position[52;88H[K[52;88H284,13[8C87%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H287,19[8C88%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H290,18[8C89%[6;18H[?25h[?25l[52;88H311,30[27;30H[?25h[?25l[52;78Hh[27;30H[52;78H [27;29H[52;92H29[27;29H[?25h[?25l[52;78Hh[27;29H[52;78H [27;28H[52;93H8[27;28H[?25h[?25l[52;78Hh[27;28H[52;78H [27;27H[52;93H7[27;27H[?25h[?25l[52;78Hi[27;27H[52;78H [27;27H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H311,27[8C89%[27;27H[?25h[?25lpcheckboxes):[52;93H8[27;28H[?25h[?25llcheckboxes):[52;93H9[27;29H[?25h[?25locheckboxes):[52;92H30[27;30H[?25h[?25ltcheckboxes):[52;93H1[27;31H[?25h[?25l_checkboxes):[52;93H2[27;32H[?25h[52;1H[K[27;31H[?25l[52;78H^[[27;31H[52;78H  [27;32H[52;88H311,31[8C89%[27;31H[?25h[?25l[52;78H:[27;31H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 370L, 11812B written[27;31H[52;88H311,31[8C89%[52;88H[K[52;88H311,31[8C89%[27;31H[?25h[?25l[52;78Hh[27;31H[52;78H [27;30H[52;93H0[27;30H[?25h[?25l[52;78Hh[27;30H[52;78H [27;29H[52;92H29[27;29H[?25h[?25l[52;78Hh[27;29H[52;78H [27;28H[52;93H8[27;28H[?25h[?25l[52;78Hh[27;28H[52;78H [27;27H[52;93H7[27;27H[?25h[?25l[52;78Hh[27;27H[52;78H [27;26H[106m([15C)[m[52;93H6[27;26H[?25h[?25l[52;78Hh[27;26H[52;78H [27;25H[1C([15C)[52;93H5[27;25H[?25h[?25l[52;78Hh[27;25H[52;78H [27;24H[52;93H4[27;24H[?25h[?25l[52;78Hh[27;24H[52;78H [27;23H[52;93H3[27;23H[?25h[?25l[52;78Hh[27;23H[52;78H [27;22H[52;93H2[27;22H[?25h[?25l[52;78Hh[27;22H[52;78H [27;21H[52;93H1[27;21H[?25h[?25l[52;78Hh[27;21H[52;78H [27;20H[52;93H0[27;20H[?25h[?25l[52;78Hh[27;20H[52;78H [27;19H[52;92H19[27;19H[?25h[?25l[52;78Hh[27;19H[52;78H [27;18H[52;93H8[27;18H[?25h[?25l[52;78Hh[27;18H[52;78H [27;17H[52;93H7[27;17H[?25h[?25l[52;78Hh[27;17H[52;78H [27;16H[52;93H6[27;16H[?25h[?25l[52;78Hh[27;16H[52;78H [27;15H[52;93H5[27;15H[?25h[?25l[52;78Hh[27;15H[52;78H [27;14H[52;93H4[27;14H[?25h[?25l[52;78Hh[27;14H[52;78H [27;13H[52;93H3[27;13H[?25h[?25l[52;78Hi[27;13H[52;78H [27;13H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H311,13[8C89%[27;13H[?25h[?25l [38;5;130min[m [36menumerate[m(plot_checkboxes):[27;43H[K[52;93H2[27;12H[?25h[?25l_ [38;5;130min[m [36menumerate[m(plot_checkboxes):[52;93H3[27;13H[?25h[52;1H[K[27;12H[?25l[52;78H^[[27;12H[52;78H  [27;13H[52;88H311,12[8C89%[27;12H[?25h[?25l[52;78H:[27;12H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 370L, 11812B written[27;12H[52;88H311,12[8C89%[52;88H[K[52;88H311,12[8C89%[27;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    )
    
    Parameter[m[52;1H[K[52;88H311,12[8C88%[30;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H311,12[8C87%[33;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H311,12[8C86%[36;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H311,12[8C85%[39;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H311,12[8C84%[42;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H311,12[8C83%[45;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[52;88H[K[52;88H309,12[8C82%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[52;88H[K[52;88H306,12[8C81%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[52;88H[K[52;88H303,12[8C80%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplot_checkboxes=[36mNone[m):[3;5H[31m"""[m[52;88H[K[52;88H300,12[8C79%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m,[52;88H[K[52;88H297,12[8C78%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H294,12[8C77%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H291,12[8C76%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H288,12[8C75%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H285,12[8C74%[46;12H[?25h[?25l[52;89H55,8 [16;8H[?25h[?25l[52;92H11[16;11H[?25h[?25l[52;78Hl[16;11H[52;78H [16;12H[52;93H2[16;12H[?25h[?25l[52;78Hl[16;12H[52;78H [16;13H[52;93H3[16;13H[?25h[?25l[52;78Hl[16;13H[52;78H [16;14H[52;93H4[16;14H[?25h[?25l[52;78Hl[16;14H[52;78H [16;15H[52;93H5[16;15H[?25h[?25l[52;78Hl[16;15H[52;78H [16;16H[52;93H6[16;16H[?25h[?25l[52;78Hl[16;16H[52;78H [16;17H[52;93H7[16;17H[?25h[?25l[52;78Hl[16;17H[52;78H [16;18H[52;93H8[16;18H[?25h[?25l[52;78Hl[16;18H[52;78H [16;19H[52;93H9[16;19H[?25h[?25l[52;78Hl[16;19H[52;78H [16;20H[52;92H20[16;20H[?25h[?25l[52;78Hl[16;20H[52;78H [16;21H[52;93H1[16;21H[?25h[?25l[52;78Hl[16;21H[52;78H [16;22H[52;93H2[16;22H[?25h[?25l[52;78Hl[16;22H[52;78H [16;23H[52;93H3[16;23H[?25h[?25l[52;78Hl[16;23H[52;78H [16;24H[52;93H4[16;24H[?25h[?25l[52;78Hl[16;24H[52;78H [16;25H[8;18H[106m([16;25H)[m[52;93H5[16;25H[?25h[?25l[52;78Hi[16;25H[52;78H [16;25H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H255,25[8C74%[16;25H[?25h[?25lNon)[106m:[m[16;26H[K[16;24H[106m)[m:[52;93H4[16;24H[?25h[?25l)[106m:[m[16;25H[K[16;23H[106m)[m:[52;93H3[16;23H[?25h[?25l)[106m:[m[16;24H[K[16;22H[106m)[m:[52;93H2[16;22H[?25h[?25l)[106m:[m[16;23H[K[16;21H[106m)[m:[52;93H1[16;21H[?25h[?25l)[106m:[m[16;22H[K[16;20H[106m)[m:[52;93H0[16;20H[?25h[52;1H[K[16;19H[?25l[52;78H^[[16;19H[52;78H  [16;20H[8;18H([16;20H)[52;88H255,19[8C74%[16;19H[?25h[?25l[52;78H:[16;19H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 370L, 11807B written[16;19H[52;88H255,19[8C74%[52;88H[K[52;88H255,19[8C74%[16;19H[?25h[?25l[52;90H7,7 [18;7H[?25h[?25l[52;90H6,4[17;4H[?25h[?25l[8;18H[106m([16;20H)[m[52;90H5,20[16;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;1H[K[52;88H255,20[8C75%[13;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H255,20[8C76%[10;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H255,20[8C77%[7;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[4;20H)[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H257,7[9C78%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H260,20[8C79%[6;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H263,12[8C80%[6;12H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;17H[31m[106m([1C)[m[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[52;88H[K[52;88H266,19[8C81%[6;19H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;17H[31m(x)[m[49;9Hy_min = np.min([y_min, np.min(Y[i])])[50;9Hy_max = np.max([y_max, np.max(Y[i])])[51;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[52;88H[K[52;88H269,20[8C82%[6;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m[52;88H[K[52;88H272,20[8C83%[6;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H275,20[8C84%[6;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale[52;88H[K[52;88H278,20[8C85%[6;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;20H[31m[106m([11C)[m[49;5Hyf = y_mid + y_size_half*y_scale[51;5Hx_diff = x_max - xf[52;88H[K[52;88H281,20[8C86%[6;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[3;20H[31m([11C)[m[49;5Hy_diff = y_max - yf[51;5Hx_min = xi + x_diff*x_position[52;88H[K[52;88H284,13[8C87%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H287,20[8C88%[6;20H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H290,18[8C89%[6;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    )
    
    Parameter[m[52;88H[K[52;88H290,18[8C88%[9;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H290,18[8C87%[12;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H290,18[8C86%[15;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_diff = y_max - yf[51;5Hx_min = xi + x_diff*x_position[52;88H[K[52;88H290,18[8C87%[12;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H290,18[8C88%[9;18H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H290,18[8C89%[6;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    )
    
    Parameter[m[52;88H[K[52;88H290,18[8C88%[9;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H290,18[8C87%[12;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H290,18[8C86%[15;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H290,18[8C85%[18;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H290,18[8C84%[21;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H290,18[8C83%[24;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[52;88H[K[52;88H290,18[8C82%[27;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[52;88H[K[52;88H290,18[8C81%[30;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[52;88H[K[52;88H290,18[8C80%[33;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplot_checkboxes):[3;5H[31m"""[m[52;88H[K[52;88H290,18[8C79%[36;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m,[52;88H[K[52;88H290,18[8C78%[39;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H290,18[8C77%[42;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H290,18[8C76%[45;18H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H288,20[8C75%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[3;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H285,13[8C74%[46;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H285,13[8C75%[43;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H285,13[8C76%[40;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H285,13[8C77%[37;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H285,13[8C78%[34;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H285,13[8C79%[31;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H285,13[8C80%[28;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplot_checkboxes):[3;5H[31m"""[m[52;88H[K[52;88H285,13[8C79%[31;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m,[52;88H[K[52;88H285,13[8C78%[34;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HY,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H285,13[8C77%[37;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;1H[38;5;130mdef[m [36minteract_plot[m(
    x,[52;88H[K[52;88H285,13[8C76%[40;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H285,13[8C75%[43;13H[?25h[?25l[52;89H64,12[22;12H[?25h[?25l[52;78Hg[22;12H[?25h[?25l[52;78H [22;12H[52;78Hgg[22;12H[52;78H  [1;1H[27m[23m[29m[m[H[2J[1;1H[34m# personal python functions and classes[m

[35mimport[m numpy [38;5;130mas[m np
[35mimport[m matplotlib.pyplot [38;5;130mas[m plt
[35mfrom[m ipywidgets [35mimport[m Checkbox, HBox

[38;5;130mclass[m [36mFUNCS[m:
    [31m"""
    class that returns funcs instance that returns list of custom-defined functions
    
    Attribute
    ---------
    num: int
        number variable used to keep track of total number of custom functions
        
    """[m
    [38;5;130mdef[m [36m__init__[m(self):[18;9Hself.num = [31m0[m[20;5H[38;5;130mdef[m [36m__repr__[m(self):[21;9H[31m"""
        prints custom-defined functions
        """[m[24;9Hself.num = [31m0[m[25;9Hitems = [36mglobals[m().items()[26;9H[38;5;130mfor[m key, value [38;5;130min[m items:[27;13H[38;5;130mif[m [36mcallable[m(value) [38;5;130mand[m value.__module__ == __name__:[28;17Hself.num += [31m1[m[29;17H[36mprint[m(key)[30;9H[38;5;130mreturn[m [36mstr[m(f[31m"total number of custom objects is {self.num}"[m)

[38;5;130mdef[m [36mmatd[m(matrix):
    [31m"""
    displays numpy array as image of matrix (without brackets) for easy view
    
    parameter
    ---------
    matrix: numpy array[float or int]
        numpy array of float or int
    """[m
    [34m# set configurations[m
    zeros = np.zeros(matrix.shape)
    rescale_factor = [31m3[m/[31m5[m
    figsize = (rescale_factor*matrix.shape[[31m1[m], rescale_factor*matrix.shape[[31m0[m])
    matrix = np.flip(matrix, axis=[31m0[m)
    ext1 = matrix.shape[[31m1[m] - [31m0.9[m
    ext2 = matrix.shape[[31m0[m] - [31m0.9[m[49;5H[34m# Create a figure and axes[m
    fig, ax = plt.subplots(figsize=figsize)[52;88H1,1[11CTop[1;1H[?25h[?25l[52;78Hj[1;1H[52;78H [2;1H[52;88H2,0-1[2;1H[?25h[?25l[52;78Hj[2;1H[52;78H [3;1H[52;88H3,1  [3;1H[?25h[?25l[52;78Hj[3;1H[52;78H [4;1H[52;88H4[4;1H[?25h[?25l[52;78Hj[4;1H[52;78H [5;1H[52;88H5[5;1H[?25h[?25l[52;78Hl[5;1H[52;78H [5;2H[52;90H2[5;2H[?25h[?25l[52;78Hl[5;2H[52;78H [5;3H[52;90H3[5;3H[?25h[?25l[52;78Hl[5;3H[52;78H [5;4H[52;90H4[5;4H[?25h[?25l[52;78Hl[5;4H[52;78H [5;5H[52;90H5[5;5H[?25h[?25l[52;78Hl[5;5H[52;78H [5;6H[52;90H6[5;6H[?25h[?25l[52;78Hl[5;6H[52;78H [5;7H[52;90H7[5;7H[?25h[?25l[52;78Hl[5;7H[52;78H [5;8H[52;90H8[5;8H[?25h[?25l[52;78Hl[5;8H[52;78H [5;9H[52;90H9[5;9H[?25h[?25l[52;78Hl[5;9H[52;78H [5;10H[52;90H10[5;10H[?25h[?25l[52;78Hl[5;10H[52;78H [5;11H[52;91H1[5;11H[?25h[?25l[52;91H2[5;12H[?25h[?25l[52;78Hl[5;12H[52;78H [5;13H[52;91H3[5;13H[?25h[?25l[52;78Hl[5;13H[52;78H [5;14H[52;91H4[5;14H[?25h[?25l[52;78Hl[5;14H[52;78H [5;15H[52;91H5[5;15H[?25h[?25l[52;78Hl[5;15H[52;78H [5;16H[52;91H6[5;16H[?25h[?25l[52;78Hl[5;16H[52;78H [5;17H[52;91H7[5;17H[?25h[?25l[52;78Hl[5;17H[52;78H [5;18H[52;91H8[5;18H[?25h[?25l[52;78Hl[5;18H[52;78H [5;19H[52;91H9[5;19H[?25h[?25l[52;78Hl[5;19H[52;78H [5;20H[52;90H20[5;20H[?25h[?25l[52;78Hl[5;20H[52;78H [5;21H[52;91H1[5;21H[?25h[?25l[52;78Hl[5;21H[52;78H [5;22H[52;91H2[5;22H[?25h[?25l[52;78Hl[5;22H[52;78H [5;23H[52;91H3[5;23H[?25h[?25l[52;78Hl[5;23H[52;78H [5;24H[52;91H4[5;24H[?25h[?25l[52;78Hl[5;24H[52;78H [5;25H[52;91H5[5;25H[?25h[?25l[52;78Hl[5;25H[52;78H [5;26H[52;91H6[5;26H[?25h[?25l[52;78Hl[5;26H[52;78H [5;27H[52;91H7[5;27H[?25h[?25l[52;78Hd[5;27H[?25h[?25l[52;79Hd[5;27H[52;78H  [5;1H[5;51r[51;1H
[1;52r[51;5H[34m# Set the title and remove the axes ticks[m[52;88H[K[52;88H5,0-1[9CTop[5;1H[?25h[?25l[52;78H:[5;1H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11769B written[5;1H[52;88H5,0-1[9CTop[52;88H[K[52;88H5,0-1[9CTop[5;1H[?25h[?25l[52;78Ho[5;1H[52;78H [6;1H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H6,1[11CTop[6;51r[6;1H[L[1;52r[52;88H[K[52;88H6,1[11CTop[6;1H[?25h[?25l[5;51r[51;1H
[1;52r[51;5H[34m# Set the title and remove the axes ticks[m[52;88H[K[52;88H5,1[11CTop[5;1H[?25h[?25l[52;4H[1m(insert)- --[m[52;88H[K[52;88H5,0-1[9CTop[5;1H[?25h[?25l[52;78H^O[5;1H[52;78H  [26;12H[52;4H[1mINSERTt --[m[52;13H[K[52;88H263,12[8C42%[27m[23m[29m[m[H[2J[2;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[4;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[6;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()

[38;5;130mdef[m [36minteract_plot[m(
    x,
    Y,
    x_scale=[31m1[m,
    y_scale=[31m1[m,
    x_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m,
    plot_checkboxes):[19;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples
    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)
    cos = np.cos(x)

    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first
    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)
    )
    
    Parameter
    ---------
    x: numpy array[float]
        Domain of the graph
    y: numpy array[float]
        Range of the graph[m
[1m-- INSERT --[m[75C263,12[8C74%[26;12H[?25h[?25l[31mk-[m[52;93H3[26;13H[?25h[?25l[31mk-[m[52;93H4[26;14H[?25h[?25l[31mk-[m[52;93H5[26;15H[?25h[?25l[31mk-[m[52;93H6[26;16H[?25h[?25l[31mk-[m[52;93H7[26;17H[?25h[?25l[31mk-[m[52;93H8[26;18H[?25h[?25l[31mk-[m[52;93H9[26;19H[?25h[?25l[31mk-[m[52;92H20[26;20H[?25h[?25l[31mk-[m[52;93H1[26;21H[?25h[?25l[31m-[m[26;21H[K[52;93H0[26;20H[?25h[?25l[31m-[m[26;20H[K[52;92H19[26;19H[?25h[?25l[31m-[m[26;19H[K[52;93H8[26;18H[?25h[?25l[31m-[m[26;18H[K[52;93H7[26;17H[?25h[?25l[31m-[m[26;17H[K[52;93H6[26;16H[?25h[?25l[31m-[m[26;16H[K[52;93H5[26;15H[?25h[?25l[31m-[m[26;15H[K[52;93H4[26;14H[?25h[?25l[31m-[m[26;14H[K[52;93H3[26;13H[?25h[?25l[31m-[m[26;13H[K[52;93H2[26;12H[?25h[52;1H[K[26;11H[?25l[52;78H^[[26;11H[52;78H  [26;12H[52;88H263,11[8C74%[26;11H[?25h[?25l[52;78Hk[26;11H[52;78H [25;11H[52;90H2[25;11H[?25h[?25l[52;78Hk[25;11H[52;78H [24;1H[52;90H1,0-1[24;1H[?25h[?25l[52;78Hk[24;1H[52;78H [23;11H[52;90H0,11 [23;11H[?25h[?25l[52;78Hk[23;11H[52;78H [22;11H[52;89H59[22;11H[?25h[?25l[52;78Hk[22;11H[52;78H [21;11H[52;90H8[21;11H[?25h[?25l[52;78Hk[21;11H[52;78H [20;11H[52;90H7[20;11H[?25h[?25l[52;78Hk[20;11H[52;78H [19;7H[52;90H6,7 [19;7H[?25h[?25l[52;78Hj[19;7H[52;78H [20;11H[52;90H7,11[20;11H[?25h[?25l[52;78Hk[20;11H[52;78H [19;7H[52;90H6,7 [19;7H[?25h[?25l[52;78Hk[19;7H[52;78H [18;4H[52;90H5,4[18;4H[?25h[?25l[52;78Hi[18;4H[52;78H [18;4H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H255,4[9C74%[18;4H[?25h[?25l[52;92H1[18;1H[?25h[?25l[17;51r[51;1H
[1;52r[17;5Hplot_checkboxes):[51;1H[31m    x_scale: float[m[52;88H[K[52;88H254,22[8C74%[17;22H[?25h[52;1H[K[17;21H[?25l[52;78H^[[17;21H[52;78H  [17;22H[52;88H254,21[8C74%[17;21H[?25h[?25l[52;78H:[17;21H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11765B written[17;21H[52;88H254,21[8C74%[52;88H[K[52;88H254,21[8C74%[17;21H[?25h[?25l[52;78Hk[17;21H[52;78H [16;15H[52;90H3,15[16;15H[?25h[?25l[52;78Hj[16;15H[52;78H [17;21H[52;90H4,21[17;21H[?25h[?25l[52;78Hk[17;21H[52;78H [16;15H[52;90H3,15[16;15H[?25h[?25l[52;78Hj[16;15H[52;78H [17;21H[52;90H4,21[17;21H[?25h[?25l[52;78Hh[17;21H[52;78H [17;20H[9;18H[106m([17;20H)[m[52;93H0[17;20H[?25h[?25l[52;78Hh[17;20H[52;78H [17;19H[9;18H([17;20H)[52;92H19[17;19H[?25h[?25l[52;78Hh[17;19H[52;78H [17;18H[52;93H8[17;18H[?25h[?25l[52;78Hh[17;18H[52;78H [17;17H[52;93H7[17;17H[?25h[?25l[52;78Hh[17;17H[52;78H [17;16H[52;93H6[17;16H[?25h[?25l[52;78Hh[17;16H[52;78H [17;15H[52;93H5[17;15H[?25h[?25l[52;78Hh[17;15H[52;78H [17;14H[52;93H4[17;14H[?25h[?25l[52;78Hh[17;14H[52;78H [17;13H[52;93H3[17;13H[?25h[?25l[52;78Hh[17;13H[52;78H [17;12H[52;93H2[17;12H[?25h[?25l[52;78Hh[17;12H[52;78H [17;11H[52;93H1[17;11H[?25h[?25l[52;78Hh[17;11H[52;78H [17;10H[52;93H0[17;10H[?25h[?25l[52;78Hh[17;10H[52;78H [17;9H[52;92H9 [17;9H[?25h[?25l[52;78Hh[17;9H[52;78H [17;8H[52;92H8[17;8H[?25h[?25l[52;78Hh[17;8H[52;78H [17;7H[52;92H7[17;7H[?25h[?25l[52;78Hh[17;7H[52;78H [17;6H[52;92H6[17;6H[?25h[?25l[52;78Hh[17;6H[52;78H [17;5H[52;92H5[17;5H[?25h[?25l[52;78Hv[17;5H[52;78H1[17;5H[52;1H[1m-- VISUAL --[m[52;13H[K[52;78H1[17;5H[52;88H254,5[9C74%[17;5H[?25h[?25l[52;78Hl[17;5H[52;78H2[17;6H[47mp[m[52;92H6[17;6H[?25h[?25l[52;78Hl[17;6H[52;78H3[17;7H[47ml[m[52;92H7[17;7H[?25h[?25l[52;78Hl[17;7H[52;78H4[17;8H[47mo[m[52;92H8[17;8H[?25h[?25l[52;78Hl[17;8H[52;78H5[17;9H[47mt[m[52;92H9[17;9H[?25h[?25l[52;78Hl[17;9H[52;78H6[17;10H[47m_[m[52;92H10[17;10H[?25h[?25l[52;78Hl[17;10H[52;78H7[17;11H[47mc[m[52;93H1[17;11H[?25h[?25l[52;78H [17;12H[47mh[m[52;93H2[17;12H[?25h[?25l[52;78Hl[17;12H[52;78H9[17;13H[47me[m[52;93H3[17;13H[?25h[?25l[52;78H [17;14H[47mc[m[52;93H4[17;14H[?25h[?25l[52;78Hl[17;14H[52;78H11[17;15H[47mk[m[52;93H5[17;15H[?25h[?25l[52;78Hl [17;15H[52;78H12[17;16H[47mb[m[52;93H6[17;16H[?25h[?25l[52;78Hl [17;16H[52;78H13[17;17H[47mo[m[52;93H7[17;17H[?25h[?25l[52;78Hl [17;17H[52;78H14[17;18H[47mx[m[52;93H8[17;18H[?25h[?25l[52;78Hl [17;18H[52;78H15[17;19H[47me[m[52;93H9[17;19H[?25h[?25l[52;78H^[[17;19H[52;78H15[17;19H[52;80H^[[17;19H[52;78H    [17;19H    plot_checkboxe[52;1H[K[52;88H254,19[8C74%[17;19H[?25h[?25l[52;78Hh[17;19H[52;78H [17;18H[52;93H8[17;18H[?25h[?25l[52;78Hk[17;18H[52;78H [16;15H[52;90H3,15[16;15H[?25h[?25l[52;78Hk[16;15H[52;78H [15;17H[52;90H2,17[15;17H[?25h[?25l[52;78Hk[15;17H[52;78H [14;17H[52;90H1[14;17H[?25h[?25l[52;78Hk[14;17H[52;78H [13;15H[52;90H0,15[13;15H[?25h[?25l[52;78Hk[13;15H[52;78H [12;15H[52;89H49[12;15H[?25h[?25l[52;78Hk[12;15H[52;78H [11;7H[52;90H8,7 [11;7H[?25h[?25l[52;78Hk[11;7H[52;78H [10;6H[52;90H7,6[10;6H[?25h[?25l[52;78Hj[10;6H[52;78H [11;7H[52;90H8,7[11;7H[?25h[?25l[52;78Ho[11;7H[52;78H [12;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H249,5[9C74%[12;51r[12;1H[L[1;52r[52;88H[K[52;88H249,5[9C74%[12;5H[?25h[?25lg[52;92H6[12;6H[?25h[?25lr[52;92H7[12;7H[?25h[?25li[52;92H8[12;8H[?25h[?25ld[52;92H9[12;9H[?25h[?25l,[52;92H10[12;10H[?25h[?25l[52;93H1[12;11H[?25h[?25l[52;93H0[12;10H[?25h[?25l[12;9H[K[52;92H9 [12;9H[?25h[?25l[12;8H[K[52;92H8[12;8H[?25h[?25l[12;7H[K[52;92H7[12;7H[?25h[?25l[12;6H[K[52;92H6[12;6H[?25h[?25l[12;5H[K[52;92H5[12;5H[?25h[?25l[52;92H4[12;4H[?25h[?25l[52;92H3[12;3H[?25h[?25l[52;92H2[12;2H[?25h[?25l[52;92H1[12;1H[?25h[?25l[11;51r[51;1H
[1;52r[11;5HY,[51;1H[31m    x_scale: float[m[52;88H[K[52;88H248,8[9C74%[11;8H[?25h[?25lo[52;92H9[11;9H[?25h[?25l[11;8H[K[52;92H8[11;8H[?25h[?25l[12;51r[12;1H[L[1;52r[52;88H[K[52;88H249,5[9C74%[12;5H[?25h[?25lp[52;92H6[12;6H[?25h[?25ll[52;92H7[12;7H[?25h[?25lo[52;92H8[12;8H[?25h[?25lt[52;92H9[12;9H[?25h[?25l_[52;92H10[12;10H[?25h[?25lc[52;93H1[12;11H[?25h[?25lh[52;93H2[12;12H[?25h[?25le[52;93H3[12;13H[?25h[?25lc[52;93H4[12;14H[?25h[?25lk[52;93H5[12;15H[?25h[?25lb[52;93H6[12;16H[?25h[?25lo[52;93H7[12;17H[?25h[?25lx[52;93H8[12;18H[?25h[?25le[52;93H9[12;19H[?25h[?25ls[52;92H20[12;20H[?25h[?25l,[52;93H1[12;21H[?25h[52;1H[K[12;20H[?25l[52;78H^[[12;20H[52;78H  [12;21H[52;88H249,20[8C74%[12;20H[?25h[?25l[52;78Hj[12;20H[52;78H [13;15H[52;89H50,15[13;15H[?25h[?25l[52;78Hj[13;15H[52;78H [14;15H[52;90H1[14;15H[?25h[?25l[52;78Hj[14;15H[52;78H [15;17H[52;90H2,17[15;17H[?25h[?25l[52;78Hj[15;17H[52;78H [16;17H[52;90H3[16;17H[?25h[?25l[52;78Hj[16;17H[52;78H [17;15H[52;90H4,15[17;15H[?25h[?25l[52;78Hj[17;15H[52;78H [18;20H[9;18H[106m([18;20H)[m[52;90H5,20[18;20H[?25h[?25l[52;78Hl[18;20H[52;78H [18;21H[9;18H([18;20H)[52;93H1[18;21H[?25h[?25l[52;78Hh[18;21H[52;78H [18;20H[9;18H[106m([18;20H)[m[52;93H0[18;20H[?25h[?25l[52;78Hi[18;20H[52;78H [18;20H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H255,20[8C74%[18;20H[?25h[?25l)[106m:[m [106m)[m:[52;92H19[18;19H[?25h[?25l)[106m:[m [106m)[m:[52;93H8[18;18H[?25h[?25l)[106m:[m [106m)[m:[52;93H7[18;17H[?25h[?25l)[106m:[m [106m)[m:[52;93H6[18;16H[?25h[?25l)[106m:[m [106m)[m:[52;93H5[18;15H[?25h[?25l)[106m:[m [106m)[m:[52;93H4[18;14H[?25h[?25l)[106m:[m [106m)[m:[52;93H3[18;13H[?25h[?25l)[106m:[m [106m)[m:[52;93H2[18;12H[?25h[?25l)[106m:[m [106m)[m:[52;93H1[18;11H[?25h[?25l)[106m:[m [106m)[m:[52;93H0[18;10H[?25h[?25l)[106m:[m [106m)[m:[52;92H9 [18;9H[?25h[?25l)[106m:[m [106m)[m:[52;92H8[18;8H[?25h[?25l)[106m:[m [106m)[m:[52;92H7[18;7H[?25h[?25l)[106m:[m [106m)[m:[52;92H6[18;6H[?25h[?25l)[106m:[m [106m)[m:[52;92H5[18;5H[?25h[?25l):[18;5H[K[18;1H[106m)[m[52;92H1[18;1H[?25h[?25l[17;51r[51;1H
[1;52r[17;1H    grid=[36mFalse[m,):
[106m [m[51;1H[31m    x_scale: float[m[52;88H[K[52;88H254,16[8C74%[17;16H[106m)[m
 [17;16H[?25h[?25l)[106m:[m [106m)[m:[52;93H5[17;15H[?25h[52;1H[K[17;14H[?25l[52;78H^[[17;14H[52;78H  [17;15H[9;18H([17;15H)[52;88H254,14[8C74%[17;14H[?25h[?25l[52;78H:[17;14H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11765B written[17;14H[52;88H254,14[8C74%[52;88H[K[52;88H254,14[8C74%[17;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;1H[K[52;88H254,14[8C75%[14;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,14[8C76%[11;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,14[8C77%[8;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H255,7[9C78%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H258,14[8C79%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H261,12[8C80%[6;12H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[52;88H[K[52;88H264,14[8C81%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_min = np.min([y_min, np.min(Y[i])])[50;9Hy_max = np.max([y_max, np.max(Y[i])])[51;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[52;88H[K[52;88H267,14[8C82%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m[52;88H[K[52;88H270,14[8C83%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H273,14[8C84%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale[52;88H[K[52;88H276,14[8C85%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyf = y_mid + y_size_half*y_scale[51;5Hx_diff = x_max - xf[52;88H[K[52;88H279,14[8C86%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_diff = y_max - yf[51;5Hx_min = xi + x_diff*x_position[52;88H[K[52;88H282,13[8C87%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H285,14[8C88%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H288,14[8C88%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""[m[52;88H[K[52;88H291,14[8C89%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    Prints the input objects up to the line num. It is useful to limit the output length of print
    in order to see multiple prints all at once on Jupyter lab.
    [m[52;88H[K[52;88H294,14[8C90%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    Parameter
    ---------
    args: tuple[m[52;88H[K[52;88H297,14[8C91%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Tuple of multiple input objects
    num: int
        Line number of strings to truncate after (default 10)[m[52;88H[K[52;88H300,7[9C92%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[6;14H[106m[[1C][m[49;1H[31m    """[m
    [34m# get each object to print[m
    [38;5;130mfor[m arg [38;5;130min[m args:[52;88H[K[52;88H303,14[8C93%[6;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H303,14[8C92%[9;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H303,14[8C91%[12;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H303,14[8C90%[15;14H[?25h[?25l[[1C][17;13H[106m([mgrid[106m)[m[52;90H5,18[17;18H[?25h[?25l(grid)[19;19H[106m([4C)[m[52;90H7,24[19;24H[?25h[?25l([4C)[52;90H8,0-1[20;1H[?25h[?25l[52;78H^M[20;1H[52;78H  [21;5H[52;90H9,5  [21;5H[?25h[?25l[52;78HO[21;5H[52;78H [21;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H309,5[9C90%[21;51r[21;1H[L[1;52r[52;88H[K[52;88H309,5[9C90%[21;5H[?25h[?25lp[52;92H6[21;6H[?25h[?25lr[52;92H7[21;7H[?25h[?25li[52;92H8[21;8H[?25h[?25ln[52;92H9[21;9H[?25h[?25l[36mprint[m[52;92H10[21;10H[?25h[?25l([52;93H1[21;11H[?25h[?25lt[52;93H2[21;12H[?25h[?25ly[52;93H3[21;13H[?25h[?25lp[52;93H4[21;14H[?25h[?25l[36mtype[m[52;93H5[21;15H[?25h[?25l([52;93H6[21;16H[?25h[?25lp[52;93H7[21;17H[?25h[?25ll[52;93H8[21;18H[?25h[?25lo[52;93H9[21;19H[?25h[?25lt[52;92H20[21;20H[?25h[?25l_[52;93H1[21;21H[?25h[?25lc[52;93H2[21;22H[?25h[?25lh[52;93H3[21;23H[?25h[?25le[52;93H4[21;24H[?25h[?25lc[52;93H5[21;25H[?25h[?25lk[52;93H6[21;26H[?25h[?25lb[52;93H7[21;27H[?25h[?25lo[52;93H8[21;28H[?25h[?25lx[52;93H9[21;29H[?25h[?25le[52;92H30[21;30H[?25h[?25ls[52;93H1[21;31H[?25h[?25l)[21;15H[106m([15C)[m[52;93H2[21;32H[?25h[?25l)[21;10H[106m([m[4C([15C)[106m)[m[52;93H3[21;33H[?25h[52;1H[K[21;32H[?25l[52;78H^[[21;32H[52;78H  [21;33H[52;88H309,32[8C90%[21;32H[?25h[?25l[52;78H:[21;32H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11798B written[21;32H[52;88H309,32[8C90%[52;88H[K[52;88H309,32[8C90%[21;32H[?25h[?25l[21;10H([21C)[52;89H18,30[30;30H[?25h[?25l[52;89H22,36[34;36H[?25h[?25l[30;19H[106m([13C)[m[52;89H18,33[30;33H[?25h[?25l[30;19H([13C)[52;89H22,35[34;35H[?25h[?25l[52;89H10,34[22;34H[?25h[?25l[52;78Hl[22;34H[52;78H [22;35H[52;93H5[22;35H[?25h[?25l[52;78Hl[22;35H[52;78H [22;36H[52;93H6[22;36H[?25h[?25l[52;78Hl[22;36H[52;78H [22;37H[52;93H7[22;37H[?25h[?25l[52;78Hl[22;37H[52;78H [22;38H[52;93H8[22;38H[?25h[?25l[52;78Hl[22;38H[52;78H [22;39H[52;93H9[22;39H[?25h[?25l[52;78Hl[22;39H[52;78H [22;40H[52;92H40[22;40H[?25h[?25l[52;78Hl[22;40H[52;78H [22;41H[52;93H1[22;41H[?25h[?25l[52;78Hl[22;41H[52;78H [22;42H[22;26H[106m([15C)[m[52;93H2[22;42H[?25h[?25l[52;78Hl[22;42H[52;78H [22;43H[22;26H([15C)[52;93H3[22;43H[?25h[?25l[52;78Hi[22;43H[52;78H [22;43H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H310,43[8C90%[22;43H[?25h[?25l:[22;43H[K[52;93H2[22;42H[?25h[?25l:[22;42H[K[52;93H1[22;41H[?25h[?25l:[22;41H[K[52;93H0[22;40H[?25h[?25l:[22;40H[K[52;92H39[22;39H[?25h[?25l:[22;39H[K[52;93H8[22;38H[?25h[?25l:[22;38H[K[52;93H7[22;37H[?25h[?25l:[22;37H[K[52;93H6[22;36H[?25h[?25l:[22;36H[K[52;93H5[22;35H[?25h[?25l:[22;35H[K[52;93H4[22;34H[?25h[?25l:[22;34H[K[52;93H3[22;33H[?25h[?25l:[22;33H[K[52;93H2[22;32H[?25h[?25l:[22;32H[K[52;93H1[22;31H[?25h[?25l:[22;31H[K[52;93H0[22;30H[?25h[?25l:[22;30H[K[52;92H29[22;29H[?25h[?25l:[22;29H[K[52;93H8[22;28H[?25h[?25l:[22;28H[K[52;93H7[22;27H[?25h[?25l:[22;27H[K[52;93H6[22;26H[?25h[?25l[22;17Henumerat:[22;26H[K[52;93H5[22;25H[?25h[?25l:[22;25H[K[52;93H4[22;24H[?25h[?25l:[22;24H[K[52;93H3[22;23H[?25h[?25l:[22;23H[K[52;93H2[22;22H[?25h[?25l:[22;22H[K[52;93H1[22;21H[?25h[?25l:[22;21H[K[52;93H0[22;20H[?25h[?25l:[22;20H[K[52;92H19[22;19H[?25h[?25l:[22;19H[K[52;93H8[22;18H[?25h[?25l:[22;18H[K[52;93H7[22;17H[?25h[?25ll:[52;93H8[22;18H[?25h[?25l:[22;18H[K[52;93H7[22;17H[?25h[?25lp:[52;93H8[22;18H[?25h[?25ll:[52;93H9[22;19H[?25h[?25lo:[52;92H20[22;20H[?25h[?25lt:[52;93H1[22;21H[?25h[?25l_:[52;93H2[22;22H[?25h[?25lc:[52;93H3[22;23H[?25h[?25lh:[52;93H4[22;24H[?25h[?25le:[52;93H5[22;25H[?25h[?25lc:[52;93H6[22;26H[?25h[?25lk:[52;93H7[22;27H[?25h[?25lb:[52;93H8[22;28H[?25h[?25lo:[52;93H9[22;29H[?25h[?25lx:[52;92H30[22;30H[?25h[?25le:[52;93H1[22;31H[?25h[?25ls:[52;93H2[22;32H[?25h[?25l.:[52;93H3[22;33H[?25h[?25li:[52;93H4[22;34H[?25h[?25lt:[52;93H5[22;35H[?25h[?25le:[52;93H6[22;36H[?25h[?25lm:[52;93H7[22;37H[?25h[?25ls:[52;93H8[22;38H[?25h[?25l(:[52;93H9[22;39H[?25h[?25l):[106m()[m[52;92H40[22;40H[?25h[52;1H[K[22;39H[?25l[52;78H^[[22;39H[52;78H  [22;40H[52;88H310,39[8C90%[22;39H[?25h[?25l[52;78Hh[22;39H[52;78H [22;38H[52;93H8[22;38H[?25h[?25l[52;78Hh[22;38H[52;78H [22;37Hs()[52;93H7[22;37H[?25h[?25l[52;78Hh[22;37H[52;78H [22;36H[52;93H6[22;36H[?25h[?25l[52;78Hh[22;36H[52;78H [22;35H[52;93H5[22;35H[?25h[?25l[52;78Hh[22;35H[52;78H [22;34H[52;93H4[22;34H[?25h[?25l[52;78Hh[22;34H[52;78H [22;33H[52;93H3[22;33H[?25h[?25l[52;78Hh[22;33H[52;78H [22;32H[52;93H2[22;32H[?25h[?25l[52;78Hh[22;32H[52;78H [22;31H[52;93H1[22;31H[?25h[?25l[52;78Hh[22;31H[52;78H [22;30H[52;93H0[22;30H[?25h[?25l[52;78Hh[22;30H[52;78H [22;29H[52;92H29[22;29H[?25h[?25l[52;78Hh[22;29H[52;78H [22;28H[52;93H8[22;28H[?25h[?25l[52;78Hh[22;28H[52;78H [22;27H[52;93H7[22;27H[?25h[?25l[52;78Hh[22;27H[52;78H [22;26H[52;93H6[22;26H[?25h[?25l[52;78Hh[22;26H[52;78H [22;25H[52;93H5[22;25H[?25h[?25l[52;78Hh[22;25H[52;78H [22;24H[52;93H4[22;24H[?25h[?25l[52;78Hh[22;24H[52;78H [22;23H[52;93H3[22;23H[?25h[?25l[52;78Hh[22;23H[52;78H [22;22H[52;93H2[22;22H[?25h[?25l[52;78Hh[22;22H[52;78H [22;21H[52;93H1[22;21H[?25h[?25l[52;78Hh[22;21H[52;78H [22;20H[52;93H0[22;20H[?25h[?25l[52;78Hh[22;20H[52;78H [22;19H[52;92H19[22;19H[?25h[?25l[52;78Hh[22;19H[52;78H [22;18H[52;93H8[22;18H[?25h[?25l[52;78Hh[22;18H[52;78H [22;17H[52;93H7[22;17H[?25h[?25l[52;78Hh[22;17H[52;78H [22;16H[52;93H6[22;16H[?25h[?25l[52;78Hh[22;16H[52;78H [22;15H[52;93H5[22;15H[?25h[?25l[52;78Hh[22;15H[52;78H [22;14H[52;93H4[22;14H[?25h[?25l[52;78Hh[22;14H[52;78H [22;13H[52;93H3[22;13H[?25h[?25l[52;78Hh[22;13H[52;78H [22;12H[52;93H2[22;12H[?25h[?25l[52;78Hh[22;12H[52;78H [22;11H[52;93H1[22;11H[?25h[?25l[52;78Hh[22;11H[52;78H [22;10H[52;93H0[22;10H[?25h[?25l[52;78Hi[22;10H[52;78H [22;10H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H310,10[8C90%[22;10H[?25h[?25l, _ [38;5;130min[m plot_checkboxes.items():[22;40H[K[52;92H9 [22;9H[?25h[?25lk, _ [38;5;130min[m plot_checkboxes.items():[52;92H10[22;10H[?25h[?25le, _ [38;5;130min[m plot_checkboxes.items():[52;93H1[22;11H[?25h[?25ly, _ [38;5;130min[m plot_checkboxes.items():[52;93H2[22;12H[?25h[52;1H[K[22;11H[?25l[52;78H^[[22;11H[52;78H  [22;12H[52;88H310,11[8C90%[22;11H[?25h[?25l[52;78Hl[22;11H[52;78H [22;12H[52;93H2[22;12H[?25h[?25l[52;78Hl[22;12H[52;78H [22;13H[52;93H3[22;13H[?25h[?25l[52;78Hl[22;13H[52;78H [22;14H[52;93H4[22;14H[?25h[?25l[52;78Hl[22;14H[52;78H [22;15H[52;93H5[22;15H[?25h[?25l[52;78Hi[22;15H[52;78H [22;15H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H310,15[8C90%[22;15H[?25h[?25l [38;5;130min[m plot_checkboxes.items():[22;42H[K[52;93H4[22;14H[?25h[?25li [38;5;130min[m plot_checkboxes.items():[52;93H5[22;15H[?25h[?25lt [38;5;130min[m plot_checkboxes.items():[52;93H6[22;16H[?25h[?25le [38;5;130min[m plot_checkboxes.items():[52;93H7[22;17H[?25h[?25lm [38;5;130min[m plot_checkboxes.items():[52;93H8[22;18H[?25h[52;1H[K[22;17H[?25l[52;78H^[[22;17H[52;78H  [22;18H[52;88H310,17[8C90%[22;17H[?25h[?25l[52;78Hj[22;17H[52;78H [23;17H[52;90H1[23;17H[?25h[?25l[52;78Hj[23;17H[52;78H [24;17H[52;90H2[24;17H[?25h[?25l[52;78Hl[24;17H[52;78H [24;18H[52;93H8[24;18H[?25h[?25l[52;78Hj[24;18H[52;78H [25;18H[52;90H3[25;18H[?25h[?25l[52;78Hl[25;18H[52;78H [25;19H[52;93H9[25;19H[?25h[?25l[52;78Hl[25;19H[52;78H [25;20H[52;92H20[25;20H[?25h[?25l[52;78Hl[25;20H[52;78H [25;21H[52;93H1[25;21H[?25h[?25l[52;78Hl[25;21H[52;78H [25;22H[106m[[mi[106m][m[52;93H2[25;22H[?25h[?25l[52;78Hl[25;22H[52;78H [25;23H[i][52;93H3[25;23H[?25h[?25l[52;78Hl[25;23H[52;78H [25;24H[106m[[mi[106m][m[52;93H4[25;24H[?25h[?25l[52;78Hl[25;24H[52;78H [25;25H[i][52;93H5[25;25H[?25h[?25l[52;78Hl[25;25H[52;78H [25;26H[52;93H6[25;26H[?25h[?25l[52;78Hl[25;26H[52;78H [25;27H[52;93H7[25;27H[?25h[?25l[52;78Hl[25;27H[52;78H [25;28H[52;93H8[25;28H[?25h[?25l[52;78Hl[25;28H[52;78H [25;29H[52;93H9[25;29H[?25h[?25l[52;78Hl[25;29H[52;78H [25;30H[52;92H30[25;30H[?25h[?25l[52;78Hl[25;30H[52;78H [25;31H[52;93H1[25;31H[?25h[?25l[52;78Hl[25;31H[52;78H [25;32H[52;93H2[25;32H[?25h[?25l[52;78Hl[25;32H[52;78H [25;33H[52;93H3[25;33H[?25h[?25l[52;78Hl[25;33H[52;78H [25;34H[52;93H4[25;34H[?25h[?25l[52;78Hl[25;34H[52;78H [25;35H[52;93H5[25;35H[?25h[?25l[52;78Hl[25;35H[52;78H [25;36H[52;93H6[25;36H[?25h[?25l[52;78Hl[25;36H[52;78H [25;37H[52;93H7[25;37H[?25h[?25l[52;78Hl[25;37H[52;78H [25;38H[52;93H8[25;38H[?25h[?25l[52;78Hl[25;38H[52;78H [25;39H[52;93H9[25;39H[?25h[?25l[52;78Hl[25;39H[52;78H [25;40H[31m[106m{[1C}[m[52;92H40[25;40H[?25h[?25l[52;78Hl[25;40H[52;78H [25;41H[31m{i}[m[52;93H1[25;41H[?25h[?25l[52;78Hl[25;41H[52;78H [25;42H[31m[106m{[1C}[m[52;93H2[25;42H[?25h[?25l[52;78Hh[25;42H[52;78H [25;41H[31m{i}[m[52;93H1[25;41H[?25h[?25l[52;78Hl[25;41H[52;78H [25;42H[31m[106m{[1C}[m[52;93H2[25;42H[?25h[?25l[52;78Hl[25;42H[52;78H [25;43H[31m{i}[m[52;93H3[25;43H[?25h[?25l[52;78Hl[25;43H[52;78H [25;44H[25;17H[106m([26C)[m[52;93H4[25;44H[?25h[?25l[52;78Hi[25;44H[52;78H [25;44H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H313,44[8C90%[25;44H[?25h[?25l[31m)[m[25;44H[K[26;1H[31m    
    x_mid = (x_max + x_min)/
    y_mid = (y_max + y_min)/
    x_size_half = (x_max - x_min)/
    y_size_half = (y_max - y_min)/

    xi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale
    
    x_diff = x_max - xf
    y_diff = y_max - yf
    
    x_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position

    plt.axis([x_min, x_max, y_min, y_max])    
    plt.show()

def print_fn(*args, num=10):
    [m[25;43H[31m[106m)[m[52;93H3[25;43H[?25h[?25l[31m)[m[25;43H[K[25;42H[31m[106m)[m[52;93H2[25;42H[?25h[?25l[31m)[m[25;42H[K[25;41H[31m[106m)[m[52;93H1[25;41H[?25h[?25l[31m)[m[25;41H[K[25;40H[31m[106m)[m[52;93H0[25;40H[?25h[?25l[31m)[m[25;40H[K[25;39H[31m[106m)[m[52;92H39[25;39H[?25h[?25l[31m)[m[25;39H[K[25;38H[31m[106m)[m[52;93H8[25;38H[?25h[?25l[31m)[m[25;38H[K[25;37H[31m[106m)[m[52;93H7[25;37H[?25h[?25l[31m)[m[25;37H[K[25;36H[31m[106m)[m[52;93H6[25;36H[?25h[?25l[31m)[m[25;36H[K[25;35H[31m[106m)[m[52;93H5[25;35H[?25h[?25l)[25;35H[K[26;1H    
    x_mid = (x_max + x_min)/
    y_mid = (y_max + y_min)/
    x_size_half = (x_max - x_min)/
    y_size_half = (y_max - y_min)/

    xi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale
    
    x_diff = x_max - xf
    y_diff = y_max - yf
    
    x_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position

    plt.axis([x_min, x_max, y_min, y_max])    
    plt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[2C):
    [25;34H[106m)[m[52;93H4[25;34H[?25h[?25l)[25;34H[K[25;33H[106m)[m[52;93H3[25;33H[?25h[?25l[106mk[m)k[106m)[m[52;93H4[25;34H[?25h[?25l[106me[m)e[106m)[m[52;93H5[25;35H[?25h[?25l[106my[m)y[106m)[m[52;93H6[25;36H[?25h[52;1H[K[25;35H[?25l[52;78H^[[25;35H[52;78H  [25;36H[25;17H([18C)[52;88H313,35[8C90%[25;35H[?25h[?25l[52;78Hk[25;35H[52;78H [24;35H[52;90H2[24;35H[?25h[?25l[52;78Hk[24;35H[52;78H [23;35H[52;90H1[23;35H[?25h[?25l[52;78Hk[23;35H[52;78H [22;35H[52;90H0[22;35H[?25h[?25l[52;78Hj[22;35H[52;78H [23;35H[52;90H1[23;35H[?25h[?25l[52;78Hk[23;35H[52;78H [22;35H[52;90H0[22;35H[?25h[?25l[52;78Hj[22;35H[52;78H [23;35H[52;90H1[23;35H[?25h[?25l[52;78Hk[23;35H[52;78H [22;35H[52;90H0[22;35H[?25h[?25l[52;78Hh[22;35H[52;78H [22;34H[52;93H4[22;34H[?25h[?25l[52;78Hh[22;34H[52;78H [22;33H[52;93H3[22;33H[?25h[?25l[52;78Hh[22;33H[52;78H [22;32H[52;93H2[22;32H[?25h[?25l[52;78Hh[22;32H[52;78H [22;31H[52;93H1[22;31H[?25h[?25l[52;78Hh[22;31H[52;78H [22;30H[52;93H0[22;30H[?25h[?25l[52;78Hh[22;30H[52;78H [22;29H[52;92H29[22;29H[?25h[?25l[52;78Hh[22;29H[52;78H [22;28H[52;93H8[22;28H[?25h[?25l[52;78Hh[22;28H[52;78H [22;27H[52;93H7[22;27H[?25h[?25l[52;78Hh[22;27H[52;78H [22;26H[52;93H6[22;26H[?25h[?25l[52;78Hh[22;26H[52;78H [22;25H[52;93H5[22;25H[?25h[?25l[52;78Hh[22;25H[52;78H [22;24H[52;93H4[22;24H[?25h[?25l[52;78Hh[22;24H[52;78H [22;23H[52;93H3[22;23H[?25h[?25l[52;78Hh[22;23H[52;78H [22;22H[52;93H2[22;22H[?25h[?25l[52;78Hh[22;22H[52;78H [22;21H[52;93H1[22;21H[?25h[?25l[52;78Hh[22;21H[52;78H [22;20H[52;93H0[22;20H[?25h[?25l[52;78Hh[22;20H[52;78H [22;19H[52;92H19[22;19H[?25h[?25l[52;78Hh[22;19H[52;78H [22;18H[52;93H8[22;18H[?25h[?25l[52;78Hi[22;18H[52;78H [22;18H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H310,18[8C90%[22;18H[?25h[?25l [38;5;130min[m plot_checkboxes.items():[22;45H[K[52;93H7[22;17H[?25h[?25l [38;5;130min[m plot_checkboxes.items():[22;44H[K[52;93H6[22;16H[?25h[?25l [38;5;130min[m plot_checkboxes.items():[22;43H[K[52;93H5[22;15H[?25h[?25l [38;5;130min[m plot_checkboxes.items():[22;42H[K[52;93H4[22;14H[?25h[?25l_ [38;5;130min[m plot_checkboxes.items():[52;93H5[22;15H[?25h[52;1H[K[22;14H[?25l[52;78H^[[22;14H[52;78H  [22;15H[52;88H310,14[8C90%[22;14H[?25h[?25l[52;78H:[22;14H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11789B written[22;14H[52;88H310,14[8C90%[52;88H[K[52;88H310,14[8C90%[22;14H[?25h[?25l[52;78Hk[22;14H[52;78H [21;14H[52;89H09[21;14H[?25h[?25l[52;78Hd[21;14H[?25h[?25l[52;79Hd[21;14H[52;78H  [21;5H[21;51r[51;1H
[1;52r[51;1H[31m    [m[52;1H[K[52;88H309,5[9C90%[21;5H[?25h[?25l[52;78Hl[21;5H[52;78H [21;6H[52;92H6[21;6H[?25h[?25l[52;78Hl[21;6H[52;78H [21;7H[52;92H7[21;7H[?25h[?25l[52;78Hl[21;7H[52;78H [21;8H[52;92H8[21;8H[?25h[?25l[52;78Hl[21;8H[52;78H [21;9H[52;92H9[21;9H[?25h[?25l[52;78Hl[21;9H[52;78H [21;10H[52;92H10[21;10H[?25h[?25l[52;78Hl[21;10H[52;78H [21;11H[52;93H1[21;11H[?25h[?25l[52;78Hl[21;11H[52;78H [21;12H[52;93H2[21;12H[?25h[?25l[52;78Hl[21;12H[52;78H [21;13H[52;93H3[21;13H[?25h[?25l[52;78Hl[21;13H[52;78H [21;14H[52;93H4[21;14H[?25h[?25l[52;78Hl[21;14H[52;78H [21;15H[52;93H5[21;15H[?25h[?25l[52;78Hl[21;15H[52;78H [21;16H[52;93H6[21;16H[?25h[?25l[52;78Hl[21;16H[52;78H [21;17H[52;93H7[21;17H[?25h[?25l[52;78Hl[21;17H[52;78H [21;18H[52;93H8[21;18H[?25h[?25l[52;78Hl[21;18H[52;78H [21;19H[52;93H9[21;19H[?25h[?25l[52;78Hl[21;19H[52;78H [21;20H[52;92H20[21;20H[?25h[?25l[52;78Hl[21;20H[52;78H [21;21H[52;93H1[21;21H[?25h[?25l[52;78Hl[21;21H[52;78H [21;22H[52;93H2[21;22H[?25h[?25l[52;78Hl[21;22H[52;78H [21;23H[52;93H3[21;23H[?25h[?25l[52;78Hl[21;23H[52;78H [21;24H[52;93H4[21;24H[?25h[?25l[52;78Hl[21;24H[52;78H [21;25H[52;93H5[21;25H[?25h[?25l[52;78Hl[21;25H[52;78H [21;26H[52;93H6[21;26H[?25h[?25l[52;78Hl[21;26H[52;78H [21;27H[52;93H7[21;27H[?25h[?25l[52;78Hl[21;27H[52;78H [21;28H[52;93H8[21;28H[?25h[?25l[52;78Hl[21;28H[52;78H [21;29H[52;93H9[21;29H[?25h[?25l[52;78Hl[21;29H[52;78H [21;30H[52;92H30[21;30H[?25h[?25l[52;78Hl[21;30H[52;78H [21;31H[52;93H1[21;31H[?25h[?25l[52;78Hl[21;31H[52;78H [21;32H[52;93H2[21;32H[?25h[?25l[52;78Hl[21;32H[52;78H [21;33H[52;93H3[21;33H[?25h[?25l[52;78Hl[21;33H[52;78H [21;34H[52;93H4[21;34H[?25h[?25l[52;78Hl[21;34H[52;78H [21;35H[52;93H5[21;35H[?25h[?25l[52;78Hl[21;35H[52;78H [21;36H[52;93H6[21;36H[?25h[?25l[52;78Hl[21;36H[52;78H [21;37H[52;93H7[21;37H[?25h[?25l[52;78Hl[21;37H[52;78H [21;38H[52;93H8[21;38H[?25h[?25l[52;78Hl[21;38H[52;78H [21;39H[52;93H9[21;39H[?25h[?25l[52;78Hl[21;39H[52;78H [21;40H[106m()[m[52;92H40[21;40H[?25h[?25l[52;78Hl[21;40H[52;78H [21;41H[52;93H1[21;41H[?25h[?25l[52;78Hl[21;41H[52;78H [21;42H()[52;93H2[21;42H[?25h[?25l[52;78Hi[21;42H[52;78H [21;42H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H309,42[8C90%[21;42H[?25h[?25l:[21;42H[K[52;93H1[21;41H[?25h[?25l:[21;41H[K[52;93H0[21;40H[?25h[?25l:[21;40H[K[52;92H39[21;39H[?25h[?25l:[21;39H[K[52;93H8[21;38H[?25h[?25l:[21;38H[K[52;93H7[21;37H[?25h[?25l:[21;37H[K[52;93H6[21;36H[?25h[?25l:[21;36H[K[52;93H5[21;35H[?25h[?25l:[21;35H[K[52;93H4[21;34H[?25h[?25l:[21;34H[K[52;93H3[21;33H[?25h[?25l:[21;33H[K[52;93H2[21;32H[?25h[?25l:[21;32H[K[52;93H1[21;31H[?25h[?25l:[21;31H[K[52;93H0[21;30H[?25h[?25l:[21;30H[K[52;92H29[21;29H[?25h[?25l:[21;29H[K[52;93H8[21;28H[?25h[?25l:[21;28H[K[52;93H7[21;27H[?25h[?25l:[21;27H[K[52;93H6[21;26H[?25h[?25l:[21;26H[K[52;93H5[21;25H[?25h[?25l:[21;25H[K[52;93H4[21;24H[?25h[?25l:[21;24H[K[52;93H3[21;23H[?25h[?25l:[21;23H[K[52;93H2[21;22H[?25h[?25l:[21;22H[K[52;93H1[21;21H[?25h[?25l:[21;21H[K[52;93H0[21;20H[?25h[?25l:[21;20H[K[52;92H19[21;19H[?25h[?25le:[52;92H20[21;20H[?25h[?25ln:[52;93H1[21;21H[?25h[?25lu:[52;93H2[21;22H[?25h[?25lm:[52;93H3[21;23H[?25h[?25le:[52;93H4[21;24H[?25h[?25lr:[52;93H5[21;25H[?25h[?25la:[52;93H6[21;26H[?25h[?25l:[21;26H[K[52;93H5[21;25H[?25h[?25l:[21;25H[K[52;93H4[21;24H[?25h[?25l:[21;24H[K[52;93H3[21;23H[?25h[?25l:[21;23H[K[52;93H2[21;22H[?25h[?25l:[21;22H[K[52;93H1[21;21H[?25h[?25l:[21;21H[K[52;93H0[21;20H[?25h[?25l:[21;20H[K[52;92H19[21;19H[?25h[?25le:[52;92H20[21;20H[?25h[?25ln:[52;93H1[21;21H[?25h[?25lu:[52;93H2[21;22H[?25h[?25lm:[52;93H3[21;23H[?25h[?25le:[52;93H4[21;24H[?25h[?25lr:[52;93H5[21;25H[?25h[?25la:[52;93H6[21;26H[?25h[?25lt:[52;93H7[21;27H[?25h[?25l[21;19H[36menumerate[m:[52;93H8[21;28H[?25h[?25l(:[52;93H9[21;29H[?25h[34m^[?25l[m[52;78H^V[21;29H[?25h[?25l[52;80H)[21;29H:[52;78H   [21;29H):[106m()[m[52;92H30[21;30H[?25h[52;1H[K[21;29H[?25l[52;78H^[[21;29H[52;78H  [21;30H[52;88H309,29[8C90%[21;29H[?25h[?25l[52;78Hh[21;29H[52;78H [21;28H[52;93H8[21;28H[?25h[?25l[52;78Ha[21;28H[52;78H [21;29H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H309,29[8C90%[21;29H[?25h[?25l[106mp[m):p[106m)[m[52;92H30[21;30H[?25h[?25l[106ml[m):l[106m)[m[52;93H1[21;31H[?25h[?25l[106mo[m):o[106m)[m[52;93H2[21;32H[?25h[?25l[106mt[m):t[106m)[m[52;93H3[21;33H[?25h[?25l[106m_[m):_[106m)[m[52;93H4[21;34H[?25h[?25l[106mc[m):c[106m)[m[52;93H5[21;35H[?25h[?25l[106mh[m):h[106m)[m[52;93H6[21;36H[?25h[?25l[106me[m):e[106m)[m[52;93H7[21;37H[?25h[?25l[106mc[m):c[106m)[m[52;93H8[21;38H[?25h[?25l[106mk[m):k[106m)[m[52;93H9[21;39H[?25h[?25l[106mb[m):b[106m)[m[52;92H40[21;40H[?25h[?25l[106mx[m):x[106m)[m[52;93H1[21;41H[?25h[?25l)[106m:[m[21;42H[K[21;40H[106m)[m:[52;93H0[21;40H[?25h[?25l[106mo[m):o[106m)[m[52;93H1[21;41H[?25h[?25l[106mx[m):x[106m)[m[52;93H2[21;42H[?25h[?25l[106me[ms):es[106m)[m[52;93H4[21;44H[?25h[52;1H[K[21;43H[?25l[52;78H^[[21;43H[52;78H  [21;44H[21;28H([15C)[52;88H309,43[8C90%[21;43H[?25h[?25l[52;78H:[21;43H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11759B written[21;43H[52;88H309,43[8C90%[52;88H[K[52;88H309,43[8C90%[21;43H[?25h[?25l[52;78Hj[21;43H[52;78H [22;43H[106m([mY[i][106m)[m[52;89H10[22;43H[?25h[?25l[52;78Hh[22;43H[52;78H [22;42H(Y[106m[[mi[106m][m)[52;93H2[22;42H[?25h[?25l[52;78Hh[22;42H[52;78H [22;41H[i][52;93H1[22;41H[?25h[?25l[52;78Hh[22;41H[52;78H [22;40H[106m[[mi[106m][m[52;93H0[22;40H[?25h[?25l[52;78Hh[22;40H[52;78H [22;39HY[i][52;92H39[22;39H[?25h[?25l[52;78Hh[22;39H[52;78H [22;38H[106m([mY[i][106m)[m[52;93H8[22;38H[?25h[?25l[52;78Hh[22;38H[52;78H [22;37Hn(Y[i])[52;93H7[22;37H[?25h[?25l[52;78Hh[22;37H[52;78H [22;36H[52;93H6[22;36H[?25h[?25l[52;78Hh[22;36H[52;78H [22;35H[52;93H5[22;35H[?25h[?25l[52;78Hh[22;35H[52;78H [22;34H[52;93H4[22;34H[?25h[?25l[52;78Hh[22;34H[52;78H [22;33H[52;93H3[22;33H[?25h[?25l[52;78Hh[22;33H[52;78H [22;32H[52;93H2[22;32H[?25h[?25l[52;78Hh[22;32H[52;78H [22;31H[52;93H1[22;31H[?25h[?25l[52;78Hh[22;31H[52;78H [22;30H[52;93H0[22;30H[?25h[?25l[52;78Hh[22;30H[52;78H [22;29H[52;92H29[22;29H[?25h[?25l[52;78Hh[22;29H[52;78H [22;28H[52;93H8[22;28H[?25h[?25l[52;78Hh[22;28H[52;78H [22;27H[52;93H7[22;27H[?25h[?25l[52;78Hh[22;27H[52;78H [22;26H[52;93H6[22;26H[?25h[?25l[52;78Hh[22;26H[52;78H [22;25H[52;93H5[22;25H[?25h[?25l[52;78Hh[22;25H[52;78H [22;24H[106m[[19C][m[52;93H4[22;24H[?25h[?25l[52;78Hh[22;24H[52;78H [22;23H[106m([m[[19C][106m)[m[52;93H3[22;23H[?25h[?25l[52;78Hh[22;23H[52;78H [22;22Hn([21C)[52;93H2[22;22H[?25h[?25l[52;78Hh[22;22H[52;78H [22;21H[52;93H1[22;21H[?25h[?25l[52;78Hh[22;21H[52;78H [22;20H[52;93H0[22;20H[?25h[?25l[52;78Hh[22;20H[52;78H [22;19H[52;92H19[22;19H[?25h[?25l[52;78Hh[22;19H[52;78H [22;18H[52;93H8[22;18H[?25h[?25l[52;78Hh[22;18H[52;78H [22;17H[52;93H7[22;17H[?25h[?25l[52;78Hh[22;17H[52;78H [22;16H[52;93H6[22;16H[?25h[?25l[52;78Hh[22;16H[52;78H [22;15H[52;93H5[22;15H[?25h[?25l[52;78Hh[22;15H[52;78H [22;14H[52;93H4[22;14H[?25h[?25l[52;78Hk[22;14H[52;78H [21;14H[52;89H09[21;14H[?25h[?25l[52;78Hh[21;14H[52;78H [21;13H[52;93H3[21;13H[?25h[?25l[52;78Hh[21;13H[52;78H [21;12H[52;93H2[21;12H[?25h[?25l[52;78Hi[21;12H[52;78H [21;12H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H309,12[8C90%[21;12H[?25h[?25l, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[21;45H[K[52;93H1[21;11H[?25h[?25l, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[21;44H[K[52;93H0[21;10H[?25h[?25l, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[21;43H[K[52;92H9 [21;9H[?25h[?25li, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[52;92H10[21;10H[?25h[52;1H[K[21;9H[?25l[52;78H^[[21;9H[52;78H  [21;10H[52;88H309,9[9C90%[21;9H[?25h[?25l[52;78H:[21;9H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11757B written[21;9H[52;88H309,9[9C90%[52;88H[K[52;88H309,9[9C90%[21;9H[?25h[?25l[52;78Hj[21;9H[52;78H [22;9H[52;89H10[22;9H[?25h[?25l[52;78Hj[22;9H[52;78H [23;9H[52;90H1[23;9H[?25h[?25l[52;78Hj[23;9H[52;78H [24;9H[52;90H2[24;9H[?25h[?25l[52;78Hk[24;9H[52;78H [23;9H[52;90H1[23;9H[?25h[?25l[52;78Hk[23;9H[52;78H [22;9H[52;90H0[22;9H[?25h[?25l[52;78Hk[22;9H[52;78H [21;9H[52;89H09[21;9H[?25h[?25l[52;78Hl[21;9H[52;78H [21;10H[52;92H10[21;10H[?25h[?25l[52;78Hl[21;10H[52;78H [21;11H[52;93H1[21;11H[?25h[?25l[52;78Hl[21;11H[52;78H [21;12H[52;93H2[21;12H[?25h[?25l[52;78Hl[21;12H[52;78H [21;13H[52;93H3[21;13H[?25h[?25l[52;78Hl[21;13H[52;78H [21;14H[52;93H4[21;14H[?25h[?25l[52;78Hl[21;14H[52;78H [21;15H[52;93H5[21;15H[?25h[?25l[52;78Hl[21;15H[52;78H [21;16H[52;93H6[21;16H[?25h[?25l[52;78Hl[21;16H[52;78H [21;17H[52;93H7[21;17H[?25h[?25l[52;78Hl[21;17H[52;78H [21;18H[52;93H8[21;18H[?25h[?25l[52;78Hl[21;18H[52;78H [21;19H[52;93H9[21;19H[?25h[?25l[52;78Hl[21;19H[52;78H [21;20H[52;92H20[21;20H[?25h[?25l[52;78Hl[21;20H[52;78H [21;21H[52;93H1[21;21H[?25h[?25l[52;78Hl[21;21H[52;78H [21;22H[52;93H2[21;22H[?25h[?25l[52;78Hl[21;22H[52;78H [21;23H[52;93H3[21;23H[?25h[?25l[52;78Hl[21;23H[52;78H [21;24H[52;93H4[21;24H[?25h[?25l[52;78Hl[21;24H[52;78H [21;25H[52;93H5[21;25H[?25h[?25l[52;78Hl[21;25H[52;78H [21;26H[106m([15C)[m[52;93H6[21;26H[?25h[?25l[52;78Hl[21;26H[52;78H [21;27H([15C)[52;93H7[21;27H[?25h[?25l[52;78Hl[21;27H[52;78H [21;28H[52;93H8[21;28H[?25h[?25l[52;78Hl[21;28H[52;78H [21;29H[52;93H9[21;29H[?25h[?25l[52;78Hl[21;29H[52;78H [21;30H[52;92H30[21;30H[?25h[?25l[52;78Hl[21;30H[52;78H [21;31H[52;93H1[21;31H[?25h[?25l[52;78Hl[21;31H[52;78H [21;32H[52;93H2[21;32H[?25h[?25l[52;78Hl[21;32H[52;78H [21;33H[52;93H3[21;33H[?25h[?25l[52;78Hj[21;33H[52;78H [22;33H[52;89H10[22;33H[?25h[?25l[52;78Hj[22;33H[52;78H [23;33H[52;90H1[23;33H[?25h[?25l[52;78Hj[23;33H[52;78H [24;33H[52;90H2[24;33H[?25h[?25l[52;78Hl[24;33H[52;78H [24;34H[52;93H4[24;34H[?25h[?25l[52;78Hl[24;34H[52;78H [24;35H[52;93H5[24;35H[?25h[?25l[52;78Hl[24;35H[52;78H [24;36H[24;17H[106m([18C)[m[52;93H6[24;36H[?25h[?25l[52;78Hi[24;36H[52;78H [24;36H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H312,36[8C90%[24;36H[?25h[?25l)[24;36H[K[24;35H[106m)[m[52;93H5[24;35H[?25h[?25l)[24;35H[K[24;34H[106m)[m[52;93H4[24;34H[?25h[?25l)[24;34H[K[24;33H[106m)[m[52;93H3[24;33H[?25h[?25l[106mf[m)f[106m)[m[52;93H4[24;34H[?25h[?25l[31m[106m'[m[31m)
    
    x_mid = (x_max + x_min)/
    y_mid = (y_max + y_min)/
    x_size_half = (x_max - x_min)/
    y_size_half = (y_max - y_min)/

    xi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale
    
    x_diff = x_max - xf
    y_diff = y_max - yf
    
    x_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position

    plt.axis([x_min, x_max, y_min, y_max])    
    plt.show()

def print_fn(*args, num=10):
    [24;34H'[m[31m[106m)[m[52;93H5[24;35H[?25h[?25l[31m[106m'[m)
    
    x_mid = (x_max + x_min)/
    y_mid = (y_max + y_min)/
    x_size_half = (x_max - x_min)/
    y_size_half = (y_max - y_min)/

    xi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale
    
    x_diff = x_max - xf
    y_diff = y_max - yf
    
    x_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position

    plt.axis([x_min, x_max, y_min, y_max])    
    plt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[2C):
    [24;35H[31m'[m[106m)[m[52;93H6[24;36H[?25h[?25l[24;17H([18C)[52;93H5[24;35H[?25h[?25l[31mp'[m)[52;93H6[24;36H[?25h[?25l[31ml'[m)[52;93H7[24;37H[?25h[?25l[31mo'[m)[52;93H8[24;38H[?25h[?25l[31mt'[m)[52;93H9[24;39H[?25h[?25l[31m '[m)[52;92H40[24;40H[?25h[?25l[31m{'[m)[52;93H1[24;41H[?25h[?25l[31mi'[m)[52;93H2[24;42H[?25h[?25l[31m}'[m)[31m[106m{[1C}[m[52;93H3[24;43H[?25h[52;1H[K[24;42H[?25l[52;78H^[[24;42H[52;78H  [24;43H[52;88H312,42[8C90%[24;42H[?25h[?25l[52;78H:[24;42H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11765B written[24;42H[52;88H312,42[8C90%[52;88H[K[52;88H312,42[8C90%[24;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;1H[K[52;88H312,42[8C89%[27;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H312,42[8C88%[30;42H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""[m[52;88H[K[52;88H312,42[8C89%[27;42H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    Prints the input objects up to the line num. It is useful to limit the output length of print
    in order to see multiple prints all at once on Jupyter lab.
    [m[52;88H[K[52;88H312,42[8C90%[24;42H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    Parameter
    ---------
    args: tuple[m[52;88H[K[52;88H312,42[8C91%[21;42H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Tuple of multiple input objects
    num: int
        Line number of strings to truncate after (default 10)[m[52;88H[K[52;88H312,42[8C92%[18;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H312,42[8C91%[21;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H312,42[8C90%[24;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;88H[K[52;88H312,42[8C89%[27;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H312,42[8C88%[30;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    )
    
    Parameter[m[52;88H[K[52;88H312,42[8C88%[33;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H312,42[8C87%[36;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H312,42[8C86%[39;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H312,42[8C85%[42;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H312,42[8C84%[45;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[46;40H[106m[[mi[106m][m[48;40H[31m{i}[m[52;88H[K[52;88H310,42[8C83%[46;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[46;19H[106m([4C)[m[49;40H[i][52;88H[K[52;88H307,24[8C82%[46;24H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[46;14H[106m[[2C][m[49;19H([4C)[52;88H[K[52;88H304,17[8C81%[46;17H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[46;22H[106m([13C)[m[49;14H[[2C][52;88H[K[52;88H301,36[8C80%[46;36H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_position=[31m0[m,
    grid=[36mFalse[m):
    [31m"""[m[49;22H([13C)[52;88H[K[52;88H298,14[8C79%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_scale=[31m1[m,
    y_scale=[31m1[m,
    x_position=[31m0[m,[52;88H[K[52;88H295,21[8C78%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx,
    Y,
    plot_checkboxes,[52;88H[K[52;88H292,21[8C77%[46;21H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m show: plt.show()

[38;5;130mdef[m [36minteract_plot[m([52;88H[K[52;88H289,42[8C76%[46;42H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[3;5H[34m# show the plot[m[46;19H[31m[106m[[5C][m[52;88H[K[52;88H286,25[8C75%[46;25H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[49;19H[31m[float][m[52;88H[K[52;88H283,13[8C74%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# tick locations with labels[m
    plt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[40;13H[31m[106m([46;5H)[m[52;88H[K[52;88H280,5[9C73%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m
    ax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[43;13H[31m([49;5H)[m[52;88H[K[52;88H277,33[8C72%[46;33H[?25h[?25l[52;89H54,12[23;12H[?25h[?25l[52;93H4[23;14H[?25h[?25l[52;90H0[19;14H[?25h[?25l[52;89H49,15[18;15H[?25h[?25l[52;78Hd[18;15H[?25h[?25l[52;79Hd[18;15H[52;78H  [18;5H[18;51r[51;1H
[1;52r[51;1H[31m    ---------[m[52;88H[K[52;88H249,5[9C73%[18;5H[?25h[?25l[52;78Hj[18;5H[52;78H [19;5H[52;89H50[19;5H[?25h[?25l[52;78Hj[19;5H[52;78H [20;5H[52;90H1[20;5H[?25h[?25l[52;78Hj[20;5H[52;78H [21;5H[52;90H2[21;5H[?25h[?25l[52;78Hj[21;5H[52;78H [22;5H[52;90H3[22;5H[?25h[?25l[52;78Hl[22;5H[52;78H [22;6H[52;92H6[22;6H[?25h[?25l[52;78Hl[22;6H[52;78H [22;7H[52;92H7[22;7H[?25h[?25l[52;78Hl[22;7H[52;78H [22;8H[52;92H8[22;8H[?25h[?25l[52;78Hl[22;8H[52;78H [22;9H[52;92H9[22;9H[?25h[?25l[52;78Hl[22;9H[52;78H [22;10H[52;92H10[22;10H[?25h[?25l[52;78Hl[22;10H[52;78H [22;11H[52;93H1[22;11H[?25h[?25l[52;78Hl[22;11H[52;78H [22;12H[52;93H2[22;12H[?25h[?25l[52;78Hl[22;12H[52;78H [22;13H[52;93H3[22;13H[?25h[?25l[52;78Hl[22;13H[52;78H [22;14H[52;93H4[22;14H[?25h[?25l[52;78Ha[22;14H[52;78H [22;15H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H253,15[8C73%[15;18H[106m([22;15H)[?25h[?25l,[m):,[106m)[m[52;93H6[22;16H[?25h[?25l[23;51r[23;1H[L[1;52r[22;16H[K[23;5H):[52;88H[K[52;88H254,5[9C72%[23;5H[106m)[?25h[?25lp[m):p[106m)[m[52;92H6[23;6H[?25h[?25l[106ml[m):l[106m)[m[52;92H7[23;7H[?25h[?25l[106mo[m):o[106m)[m[52;92H8[23;8H[?25h[?25l[106mt[m):t[106m)[m[52;92H9[23;9H[?25h[?25l[106m_[m):_[106m)[m[52;92H10[23;10H[?25h[?25l[106mb[m):b[106m)[m[52;93H1[23;11H[?25h[?25l[106mo[m):o[106m)[m[52;93H2[23;12H[?25h[?25l[106mx[m):x[106m)[m[52;93H3[23;13H[?25h[?25l[106me[m):e[106m)[m[52;93H4[23;14H[?25h[?25l[106ms[m):s[106m)[m[52;93H5[23;15H[?25h[52;1H[K[23;14H[?25l[52;78H^[[23;14H[52;78H  [23;15H[15;18H([23;15H)[52;88H254,14[8C72%[23;14H[?25h[?25l[52;78Hh[23;14H[52;78H [23;13H[52;93H3[23;13H[?25h[?25l[52;78Hh[23;13H[52;78H [23;12H[52;93H2[23;12H[?25h[?25l[52;78Hh[23;12H[52;78H [23;11H[52;93H1[23;11H[?25h[?25l[52;78Hh[23;11H[52;78H [23;10H[52;93H0[23;10H[?25h[?25l[52;78Hh[23;10H[52;78H [23;9H[52;92H9 [23;9H[?25h[?25l[52;78Hh[23;9H[52;78H [23;8H[52;92H8[23;8H[?25h[?25l[52;78Hh[23;8H[52;78H [23;7H[52;92H7[23;7H[?25h[?25l[52;78Hh[23;7H[52;78H [23;6H[52;92H6[23;6H[?25h[?25l[52;78Hh[23;6H[52;78H [23;5H[52;92H5[23;5H[?25h[?25l[52;78Hi[23;5H[52;78H [23;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H254,5[9C72%[23;5H[?25h[?25l*plot_boxes):[52;92H6[23;6H[?25h[?25l*plot_boxes):[52;92H7[23;7H[?25h[52;1H[K[23;6H[?25l[52;78H^[[23;6H[52;78H  [23;7H[52;88H254,6[9C72%[23;6H[?25h[?25l[52;78H:[23;6H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11762B written[23;6H[52;88H254,6[9C72%[52;88H[K[52;88H254,6[9C72%[23;6H[?25h[?25l[52;78Hl[23;6H[52;78H [23;7H[52;92H7[23;7H[?25h[?25l[52;78Hi[23;7H[52;78H [23;7H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H254,7[9C72%[23;7H[?25h[?25lplot_boxes): [52;92H6[23;6H[?25h[52;1H[K[23;5H[?25l[52;78H^[[23;5H[52;78H  [23;6H[52;88H254,5[9C72%[23;5H[?25h[?25l[52;78H:[23;5H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11761B written[23;5H[52;88H254,5[9C72%[52;88H[K[52;88H254,5[9C72%[23;5H[?25h[?25l[52;78H:[23;5H[52;1H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11761B written[23;5H[52;88H254,5[9C72%[52;88H[K[52;88H254,5[9C72%[23;5H[?25h[?25l[52;78Hv[23;5H[52;78H1[23;5H[52;1H[1m-- VISUAL --[m[52;13H[K[52;78H1[23;5H[52;88H254,5[9C72%[23;5H[?25h[?25l[52;78Hl[23;5H[52;78H2[23;6H[47m*[m[52;92H6[23;6H[?25h[?25l[52;78Hl[23;6H[52;78H3[23;7H[47mp[m[52;92H7[23;7H[?25h[?25l[52;78Hl[23;7H[52;78H4[23;8H[47ml[m[52;92H8[23;8H[?25h[?25l[52;78Hl[23;8H[52;78H5[23;9H[47mo[m[52;92H9[23;9H[?25h[?25l[52;78Hl[23;9H[52;78H6[23;10H[47mt[m[52;92H10[23;10H[?25h[?25l[52;78Hl[23;10H[52;78H7[23;11H[47m_[m[52;93H1[23;11H[?25h[?25l[52;78Hl[23;11H[52;78H8[23;12H[47mb[m[52;93H2[23;12H[?25h[?25l[52;78Hl[23;12H[52;78H9[23;13H[47mo[m[52;93H3[23;13H[?25h[?25l[52;78Hl[23;13H[52;78H10[23;14H[47mx[m[52;93H4[23;14H[?25h[?25l[52;78Hl [23;14H[52;78H11[23;15H[47me[m[52;93H5[23;15H[?25h[?25l[52;78Hd [23;15H[52;78H [23;5H[15;18H[106m([23;5H)[m: [23;8H[K[52;1H[K[52;88H254,5[9C72%[23;5H[?25h[?25l[52;78Hk[23;5H[52;78H [22;5H[15;18H([23;5H)[52;90H3[22;5H[?25h[?25l[52;78Hk[22;5H[52;78H [21;5H[52;90H2[21;5H[?25h[?25l[52;78Hk[21;5H[52;78H [20;5H[52;90H1[20;5H[?25h[?25l[52;78Hk[20;5H[52;78H [19;5H[52;90H0[19;5H[?25h[?25l[52;78Hk[19;5H[52;78H [18;5H[52;89H49[18;5H[?25h[?25l[52;78Hk[18;5H[52;78H [17;5H[52;90H8[17;5H[?25h[?25l[52;78Hp[17;5H[52;78H [17;16H    Y*plot_boxes,[52;92H16[17;16H[?25h[?25l[52;78Hu[17;16H[52;1H1 change; before #34  1 second ago[52;78H[K[17;5HY, [17;8H[K[52;88H248,5[9C72%[52;88H[K[52;88H248,5[9C72%[17;5H[?25h[?25l[52;78Hj[17;5H[52;78H [18;5H[52;90H9[18;5H[?25h[?25l[52;78Hp[18;5H[52;78H [18;16H    x*plot_boxes_scale=[31m1[m,[52;92H16[18;16H[?25h[?25l[52;78Hu[18;16H[52;20H5  2[7Cs ago[52;78H[K[18;5Hx_scale=[31m1[m, [18;16H[K[52;88H249,5[9C72%[52;88H[K[52;88H249,5[9C72%[18;5H[?25h[?25l[52;78Hk[18;5H[52;78H [17;5H[52;90H8[17;5H[?25h[?25l[52;78Hl[17;5H[52;78H [17;6H[52;92H6[17;6H[?25h[?25l[52;78Ha[17;6H[52;78H [17;7H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H248,7[9C72%[17;7H[?25h[?25l[18;51r[18;1H[L[1;52r[52;88H[K[52;88H249,5[9C72%[18;5H[?25h[52;1H[K[18;1H[?25l[52;78H^[[18;1H[52;78H  [18;5H[52;88H249,0-1[7C72%[18;1H[?25h[?25l[52;78Hi[18;1H[52;78H [18;1H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H249,1[9C72%[18;1H[?25h[?25lplot_checkboxes[52;93H6[18;16H[?25h[52;1H[K[18;15H[?25l[52;78H^[[18;15H[52;78H  [18;16H[52;88H249,15[8C72%[18;15H[?25h[?25l[52;78Hb[18;15H[52;78H [18;1H[52;93H [18;1H[?25h[?25l[52;78Hb[18;1H[52;78H [17;6H[52;90H8,6[17;6H[?25h[?25l[52;78Hj[17;6H[52;78H [18;6H[52;90H9[18;6H[?25h[?25l[52;78Hh[18;6H[52;78H [18;5H[52;92H5[18;5H[?25h[?25l[52;78Hh[18;5H[52;78H [18;4H[52;92H4[18;4H[?25h[?25l[52;78Hh[18;4H[52;78H [18;3H[52;92H3[18;3H[?25h[?25l[52;78Hh[18;3H[52;78H [18;2H[52;92H2[18;2H[?25h[?25l[52;78Hh[18;2H[52;78H [18;1H[52;92H1[18;1H[?25h[?25l[52;78Hi[18;1H[52;78H [18;1H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H249,1[9C72%[18;1H[?25h[?25l    plot_checkboxes[52;92H5[18;5H[?25h[52;1H[K[18;4H[?25l[52;78H^[[18;4H[52;78H  [18;5H[52;88H249,4[9C72%[18;4H[?25h[?25l[52;78Hl[18;4H[52;78H [18;5H[52;92H5[18;5H[?25h[?25l[52;78Hi[18;5H[52;78H [18;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H249,5[9C72%[18;5H[?25h[?25l*plot_checkboxes[52;92H6[18;6H[?25h[52;1H[K[18;5H[?25l[52;78H^[[18;5H[52;78H  [18;6H[52;88H249,5[9C72%[18;5H[?25h[?25l[52;78Hl[18;5H[52;78H [18;6H[52;92H6[18;6H[?25h[?25l[52;78Hl[18;6H[52;78H [18;7H[52;92H7[18;7H[?25h[?25l[52;78Hl[18;7H[52;78H [18;8H[52;92H8[18;8H[?25h[?25l[52;78Hl[18;8H[52;78H [18;9H[52;92H9[18;9H[?25h[?25l[52;78Hl[18;9H[52;78H [18;10H[52;92H10[18;10H[?25h[?25l[52;78Hl[18;10H[52;78H [18;11H[52;93H1[18;11H[?25h[?25l[52;78Hl[18;11H[52;78H [18;12H[52;93H2[18;12H[?25h[?25l[52;78Hl[18;12H[52;78H [18;13H[52;93H3[18;13H[?25h[?25l[52;78Hl[18;13H[52;78H [18;14H[52;93H4[18;14H[?25h[?25l[52;78Hl[18;14H[52;78H [18;15H[52;93H5[18;15H[?25h[?25l[52;78Hl[18;15H[52;78H [18;16H[52;93H6[18;16H[?25h[?25l[52;78Hl[18;16H[52;78H [18;17H[52;93H7[18;17H[?25h[?25l[52;78Hl[18;17H[52;78H [18;18H[52;93H8[18;18H[?25h[?25l[52;78Hl[18;18H[52;78H [18;19H[52;93H9[18;19H[?25h[?25l[52;78Hl[18;19H[52;78H [18;20H[52;92H20[18;20H[?25h[?25l[52;78Hl[18;20H[52;78H [18;20H[?25h[?25l[52;78Ha[18;20H[52;78H [18;21H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H249,21[8C72%[18;21H[?25h[?25l,[52;93H2[18;22H[?25h[52;1H[K[18;21H[?25l[52;78H^[[18;21H[52;78H  [18;22H[52;88H249,21[8C72%[18;21H[?25h[?25l[52;78H:[18;21H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11771B written[18;21H[52;88H249,21[8C72%[52;88H[K[52;88H249,21[8C72%[18;21H[?25h[?25l[52;78Hj[18;21H[52;78H [19;15H[52;89H50,15[19;15H[?25h[?25l[52;78Hj[19;15H[52;78H [20;15H[52;90H1[20;15H[?25h[?25l[52;78Hj[20;15H[52;78H [21;17H[52;90H2,17[21;17H[?25h[?25l[52;78Hj[21;17H[52;78H [22;17H[52;90H3[22;17H[?25h[?25l[52;78Hj[22;17H[52;78H [23;15H[52;90H4,15[23;15H[?25h[?25l[52;78Ha[23;15H[52;78H [23;16H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H254,16[8C72%[23;16H[?25h[?25l[23;15H[K[52;93H5[23;15H[?25h[52;1H[K[23;14H[?25l[52;78H^[[23;14H[52;78H  [23;15H[52;88H254,14[8C72%[23;14H[?25h[?25l[52;78H:[23;14H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11770B written[23;14H[52;88H254,14[8C72%[52;88H[K[52;88H254,14[8C72%[23;14H[?25h[?25l[52;78Hj[23;14H[52;78H [24;7H[52;90H5,7 [24;7H[?25h[?25l[52;78Hh[24;7H[52;78H [24;6H[52;92H6[24;6H[?25h[?25l[52;78Hh[24;6H[52;78H [24;5H[15;18H[106m([24;5H)[m[52;92H5[24;5H[?25h[?25l[52;78Hi[24;5H[52;78H [24;5H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H255,5[9C72%[24;5H[?25h[?25l):[24;5H[K[24;1H[106m)[m[52;92H1[24;1H[?25h[?25l[23;51r[51;1H
[1;52r[23;1H    grid=[36mFalse[m):
[106m [m[51;1H[31m    Parameter[m[52;88H[K[52;88H254,15[8C72%[23;15H[106m)[m
 [23;15H[?25h[?25lFals)[106m:[m [106m)[m:[52;93H4[23;14H[?25h[52;1H[K[23;13H[?25l[52;78H^[[23;13H[52;78H  [23;14H[15;18H([23;14H)[52;88H254,13[8C72%[23;13H[?25h[?25l[52;78Ha[23;13H[52;78H [23;14H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H254,14[8C72%[15;18H[106m([23;14H)[?25h[?25l[m[36mFals[m[36m[106me[m):[36me[m[106m)[m[52;93H5[23;15H[?25h[52;1H[K[23;14H[?25l[52;78H^[[23;14H[52;78H  [23;15H[15;18H([23;15H)[52;88H254,14[8C72%[23;14H[?25h[?25l[52;78H:[23;14H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 368L, 11765B written[23;14H[52;88H254,14[8C72%[52;88H[K[52;88H254,14[8C72%[23;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.spines[[31m'top'[m].set_visible([36mFalse[m)
    ax.spines[[31m'right'[m].set_visible([36mFalse[m)[52;1H[K[52;88H254,14[8C71%[26;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[3;5H[34m# deletes top and right spines[m[52;88H[K[52;88H254,14[8C70%[29;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H254,14[8C71%[26;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    )
    
    Parameter[m[52;88H[K[52;88H254,14[8C72%[23;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H254,14[8C73%[20;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;88H[K[52;88H254,14[8C74%[17;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H254,14[8C75%[14;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,14[8C76%[11;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,14[8C77%[8;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H255,7[9C78%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H258,14[8C79%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H261,12[8C80%[6;12H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[52;88H[K[52;88H264,14[8C81%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_min = np.min([y_min, np.min(Y[i])])[50;9Hy_max = np.max([y_max, np.max(Y[i])])[51;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[52;88H[K[52;88H267,14[8C82%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m[52;88H[K[52;88H270,14[8C83%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H273,14[8C84%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale[52;88H[K[52;88H276,14[8C85%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyf = y_mid + y_size_half*y_scale[51;5Hx_diff = x_max - xf[52;88H[K[52;88H279,14[8C86%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_diff = y_max - yf[51;5Hx_min = xi + x_diff*x_position[52;88H[K[52;88H282,13[8C87%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H285,14[8C88%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H288,14[8C88%[6;14H[?25h[?25l[52;88H307,18[25;18H[?25h[?25l[52;78Ho[25;18H[52;78H [26;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H308,5[9C88%[26;51r[26;1H[L[1;52r[52;88H[K[52;88H308,5[9C88%[26;5H[?25h[?25lp[52;92H6[26;6H[?25h[?25l[26;5H[K[52;92H5[26;5H[?25h[?25l[27;51r[27;1H[L[1;52r[52;88H[K[52;88H309,5[9C88%[27;5H[?25h[?25lp[52;92H6[27;6H[?25h[?25lr[52;92H7[27;7H[?25h[?25li[52;92H8[27;8H[?25h[?25ln[52;92H9[27;9H[?25h[?25l[36mprint[m[52;92H10[27;10H[?25h[?25l([52;93H1[27;11H[?25h[34m^[?25l[m[52;78H^V[27;11H[?25h[?25l[52;80Ha[27;11H [52;78H   [27;11Ha[52;93H2[27;12H[?25h[?25l[27;11H[K[52;93H1[27;11H[?25h[?25lp[52;93H2[27;12H[?25h[?25ll[52;93H3[27;13H[?25h[?25lo[52;93H4[27;14H[?25h[?25lt[52;93H5[27;15H[?25h[?25l_[52;93H6[27;16H[?25h[?25lc[52;93H7[27;17H[?25h[?25lh[52;93H8[27;18H[?25h[?25le[52;93H9[27;19H[?25h[?25lc[52;92H20[27;20H[?25h[?25lk[52;93H1[27;21H[?25h[?25lb[52;93H2[27;22H[?25h[?25lo[52;93H3[27;23H[?25h[?25lx[52;93H4[27;24H[?25h[?25le[52;93H5[27;25H[?25h[?25ls[52;93H6[27;26H[?25h[?25l)[27;10H[106m([15C)[m[52;93H7[27;27H[?25h[52;1H[K[27;26H[?25l[52;78H^[[27;26H[52;78H  [27;27H[52;88H309,26[8C88%[27;26H[?25h[?25l[52;78H^M[27;26H[52;78H  [28;1H[27;10H([15C)[52;89H10,0-1[28;1H[?25h[?25l[52;78Hw[28;1H[52;78H [29;5H[52;90H1,5  [29;5H[?25h[?25l[52;78H^[[29;5H[52;78H  [29;5H[52;78H^[[29;5H[52;78H  [29;5H[?25h[?25l[52;78Hk[29;5H[52;78H [28;1H[52;90H0,0-1[28;1H[?25h[?25l[52;78Hd[28;1H[?25h[?25l[52;79Hd[28;1H[52;78H  [28;5H[28;51r[51;1H
[1;52r[51;5Hplt.axis([x_min, x_max, y_min, y_max])[52;88H[K[52;88H310,5[9C88%[28;5H[?25h[?25l[52;78H:[28;5H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11796B written[28;5H[52;88H310,5[9C88%[52;88H[K[52;88H310,5[9C88%[28;5H[?25h[?25l[52;89H06,20[24;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    )
    
    Parameter[m[52;1H[K[52;88H306,20[8C87%[27;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H306,20[8C86%[30;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H306,20[8C85%[33;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H306,20[8C84%[36;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H306,20[8C83%[39;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H306,20[8C83%[42;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[52;88H[K[52;88H306,20[8C82%[45;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[46;14H[106m[[2C][m[52;88H[K[52;88H304,17[8C81%[46;17H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[49;14H[[2C][52;88H[K[52;88H301,20[8C80%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_position=[31m0[m,
    grid=[36mFalse[m):
    [31m"""[m[52;88H[K[52;88H298,14[8C79%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_scale=[31m1[m,
    y_scale=[31m1[m,
    x_position=[31m0[m,[52;88H[K[52;88H295,20[8C78%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx,
    Y,
    *plot_checkboxes,[52;88H[K[52;88H292,20[8C77%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m show: plt.show()

[38;5;130mdef[m [36minteract_plot[m([52;88H[K[52;88H289,20[8C76%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[3;5H[34m# show the plot[m[52;88H[K[52;88H286,20[8C75%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[52;88H[K[52;88H283,13[8C74%[46;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# tick locations with labels[m
    plt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[40;13H[31m[106m([46;5H)[m[52;88H[K[52;88H280,5[9C73%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m
    ax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[43;13H[31m([49;5H)[m[52;88H[K[52;88H277,20[8C72%[46;20H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.spines[[31m'top'[m].set_visible([36mFalse[m)
    ax.spines[[31m'right'[m].set_visible([36mFalse[m)[52;88H[K[52;88H274,13[8C71%[46;13H[?25h[?25l[52;89H53,17[25;17H[?25h[?25l[52;89H49,15[21;15H[?25h[?25l[52;78Hl[21;15H[52;78H [21;16H[52;93H6[21;16H[?25h[?25l[52;78Hl[21;16H[52;78H [21;17H[52;93H7[21;17H[?25h[?25l[52;78Hl[21;17H[52;78H [21;18H[52;93H8[21;18H[?25h[?25l[52;78Hl[21;18H[52;78H [21;19H[52;93H9[21;19H[?25h[?25l[52;78Hl[21;19H[52;78H [21;20H[52;92H20[21;20H[?25h[?25l[52;78Hl[21;20H[52;78H [21;21H[52;93H1[21;21H[?25h[?25l[52;78Hl[21;21H[52;78H [21;21H[?25h[?25l[52;78Ha[21;21H[52;78H [21;22H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H249,22[8C71%[21;22H[?25h[?25l[21;21H[K[52;93H1[21;21H[?25h[?25l[21;20H[K[52;93H0[21;20H[?25h[?25l[21;19H[K[52;92H19[21;19H[?25h[?25l[21;18H[K[52;93H8[21;18H[?25h[?25l[21;17H[K[52;93H7[21;17H[?25h[?25l[21;16H[K[52;93H6[21;16H[?25h[?25l[21;15H[K[52;93H5[21;15H[?25h[?25l[21;14H[K[52;93H4[21;14H[?25h[?25l[21;13H[K[52;93H3[21;13H[?25h[?25l[21;12H[K[52;93H2[21;12H[?25h[?25l[21;11H[K[52;93H1[21;11H[?25h[?25l[21;10H[K[52;93H0[21;10H[?25h[?25l[21;9H[K[52;92H9 [21;9H[?25h[?25l[21;8H[K[52;92H8[21;8H[?25h[?25l[21;7H[K[52;92H7[21;7H[?25h[?25l[21;6H[K[52;92H6[21;6H[?25h[?25l[21;5H[K[52;92H5[21;5H[?25h[?25l[52;92H1[21;1H[?25h[?25l[20;51r[51;1H
[1;52r[20;5HY,[51;1H[31m    )[m[52;88H[K[52;88H248,7[9C71%[20;7H[?25h[52;1H[K[20;6H[?25l[52;78H^[[20;6H[52;78H  [20;7H[52;88H248,6[9C71%[20;6H[?25h[?25l[52;78Hj[20;6H[52;78H [21;6H[52;90H9[21;6H[?25h[?25l[52;78Hj[21;6H[52;78H [22;6H[52;89H50[22;6H[?25h[?25l[52;78Hj[22;6H[52;78H [23;6H[52;90H1[23;6H[?25h[?25l[52;78Hj[23;6H[52;78H [24;6H[52;90H2[24;6H[?25h[?25l[52;78Hj[24;6H[52;78H [25;6H[52;90H3[25;6H[?25h[?25l[52;78Hl[25;6H[52;78H [25;7H[52;92H7[25;7H[?25h[?25l[52;78Hl[25;7H[52;78H [25;8H[52;92H8[25;8H[?25h[?25l[52;78Hl[25;8H[52;78H [25;9H[52;92H9[25;9H[?25h[?25l[52;78Hl[25;9H[52;78H [25;10H[52;92H10[25;10H[?25h[?25l[52;78Hl[25;10H[52;78H [25;11H[52;93H1[25;11H[?25h[?25l[52;78Hl[25;11H[52;78H [25;12H[52;93H2[25;12H[?25h[?25l[52;78Hl[25;12H[52;78H [25;13H[52;93H3[25;13H[?25h[?25l[52;78Hl[25;13H[52;78H [25;14H[52;93H4[25;14H[?25h[?25l[52;78Ha[25;14H[52;78H [25;15H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H253,15[8C71%[18;18H[106m([25;15H)[?25h[?25l,[m):,[106m)[m[52;93H6[25;16H[?25h[?25l[106m [m): [106m)[m[52;93H7[25;17H[?25h[?25l[26;51r[26;1H[L[1;52r[25;17H[K[26;5H):[52;88H[K[52;88H254,5[9C71%[26;5H[106m)[?25h[?25l[m[18;18H([26;5H)[52;90H3,14[25;14H[?25h[?25lFalsle,[52;93H5[25;15H[?25h[?25lle,[52;93H6[25;16H[?25h[?25le, [52;93H5[25;15H[?25h[?25l[36mFalse[m, [52;93H4[25;14H[?25h[52;1H[K[25;13H[?25l[52;78H^[[25;13H[52;78H  [25;14H[52;88H253,13[8C71%[25;13H[?25h[?25l[52;78Hl[25;13H[52;78H [25;14H[52;93H4[25;14H[?25h[?25l[52;78Hl[25;14H[52;78H [25;15H[52;93H5[25;15H[?25h[?25l[52;78Hl[25;15H[52;78H [25;16H[52;93H6[25;16H[?25h[?25l[52;78H^M[25;16H[52;78H  [26;5H[18;18H[106m([26;5H)[m[52;90H4,5 [26;5H[?25h[?25l[52;78Hi[26;5H[52;78H [26;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H254,5[9C71%[26;5H[?25h[?25l[106mL[m):L[106m)[m[52;92H6[26;6H[?25h[?25l[106m [m): [106m)[m[52;92H7[26;7H[?25h[?25l)[106m:[m [106m)[m:[52;92H6[26;6H[?25h[?25l[106m [m): [106m)[m[52;92H7[26;7H[?25h[?25l)[106m:[m [106m)[m:[52;92H6[26;6H[?25h[?25l)[106m:[m [106m)[m:[52;92H5[26;5H[?25h[?25l[106mL[m):L[106m)[m[52;92H6[26;6H[?25h[?25l[106m=[m):=[106m)[m[52;92H7[26;7H[?25h[?25l[106mN[m):N[106m)[m[52;92H8[26;8H[?25h[?25l[106mo[m):o[106m)[m[52;92H9[26;9H[?25h[?25l[106mn[m):n[106m)[m[52;92H10[26;10H[?25h[?25l[36mNon[m[36m[106me[m):[36me[m[106m)[m[52;93H1[26;11H[?25h[52;1H[K[26;10H[?25l[52;78H^[[26;10H[52;78H  [26;11H[18;18H([26;11H)[52;88H254,10[8C71%[26;10H[?25h[?25l[52;78H:[26;10H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11787B written[26;10H[52;88H254,10[8C71%[52;88H[K[52;88H254,10[8C71%[26;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    )
    
    Parameter[m[52;1H[K[52;88H254,10[8C72%[23;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H254,10[8C73%[20;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;88H[K[52;88H254,10[8C74%[17;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H254,10[8C75%[14;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,10[8C76%[11;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,10[8C77%[8;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H255,7[9C78%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H258,10[8C79%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H261,10[8C80%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[36mprint[m(plot_checkboxes)[52;88H[K[52;88H264,10[8C81%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[50;9Hy_min = np.min([y_min, np.min(Y[i])])[51;9Hy_max = np.max([y_max, np.max(Y[i])])[52;88H[K[52;88H267,10[8C82%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[51;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H270,10[8C83%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H273,10[8C83%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale[52;88H[K[52;88H276,10[8C84%[6;10H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H279,10[8C85%[6;10H[?25h[?25l[52;88H308,4 [35;4H[?25h[?25l[52;90H9,16[36;16H[?25h[?25l[52;78Hd[36;16H[?25h[?25l[52;79Hd[36;16H[52;78H  [36;5H[36;51r[51;1H
[1;52r[51;5Hx_diff = x_max - xf[52;88H[K[52;88H309,5[9C86%[36;5H[?25h[?25l[52;78HO[36;5H[52;78H [36;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H309,5[9C85%[36;51r[36;1H[L[1;52r[52;88H[K[52;88H309,5[9C85%[36;5H[?25h[?25lp[52;92H6[36;6H[?25h[?25lr[52;92H7[36;7H[?25h[?25li[52;92H8[36;8H[?25h[?25ln[52;92H9[36;9H[?25h[?25l[36mprint[m[52;92H10[36;10H[?25h[?25l([52;93H1[36;11H[?25h[?25lL[52;93H2[36;12H[?25h[?25l)[106m([mL[106m)[m[52;93H3[36;13H[?25h[52;1H[K[36;12H[?25l[52;78H^[[36;12H[52;78H  [36;13H[52;88H309,12[8C85%[36;12H[?25h[?25l[52;78H:[36;12H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11773B written[36;12H[52;88H309,12[8C85%[52;88H[K[52;88H309,12[8C85%[36;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;1H[K[52;88H309,12[8C84%[39;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H309,12[8C83%[42;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H309,12[8C83%[45;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[48;10H(L)[52;88H[K[52;88H307,12[8C82%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[52;88H[K[52;88H304,12[8C81%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[52;88H[K[52;88H301,12[8C80%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hgrid=[36mFalse[m,
    L=[36mNone[m):
    [31m"""[m[52;88H[K[52;88H298,12[8C79%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_scale=[31m1[m,
    x_position=[31m0[m,
    y_position=[31m0[m,[52;88H[K[52;88H295,12[8C78%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx,
    Y,
    x_scale=[31m1[m,[52;88H[K[52;88H292,12[8C77%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m show: plt.show()

[38;5;130mdef[m [36minteract_plot[m([52;88H[K[52;88H289,12[8C76%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[3;5H[34m# show the plot[m[52;88H[K[52;88H286,12[8C75%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# save the figure as eps vector image if save==True[m
    [38;5;130mif[m (save == [36mTrue[m):[52;88H[K[52;88H283,12[8C74%[46;12H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# tick locations with labels[m
    plt.xticks(xtick_locations, xtick_labels)
    plt.yticks(ytick_locations, ytick_labels)[40;13H[31m[106m([46;5H)[m[52;88H[K[52;88H280,5[9C73%[46;5H[?25h[?25l[40;13H[31m([46;5H)[m[52;89H52,17[18;17H[?25h[?25l[52;78Ha[18;17H[52;78H [18;18H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H252,18[8C73%[18;18H[?25h[?25l[19;51r[19;1H[L[1;52r[52;88H[K[52;88H253,5[9C73%[19;5H[?25h[?25lL[52;92H6[19;6H[?25h[?25l=[52;92H7[19;7H[?25h[?25lN[52;92H8[19;8H[?25h[?25lo[52;92H9[19;9H[?25h[?25ln[52;92H10[19;10H[?25h[?25l[36mNone[m[52;93H1[19;11H[?25h[?25l,[52;93H2[19;12H[?25h[?25lj[52;93H3[19;13H[?25h[?25l[19;12H[K[52;93H2[19;12H[?25h[52;1H[K[19;11H[?25l[52;78H^[[19;11H[52;78H  [19;12H[52;88H253,11[8C73%[19;11H[?25h[?25l[52;78Hj[19;11H[52;78H [20;11H[52;90H4[20;11H[?25h[?25l[52;78Hj[20;11H[52;78H [21;11H[12;18H[106m([21;11H)[m[52;90H5[21;11H[?25h[?25l[52;78Hl[21;11H[52;78H [21;12H[12;18H([21;11H)[52;93H2[21;12H[?25h[?25l[52;78Hh[21;12H[52;78H [21;11H[12;18H[106m([21;11H)[m[52;93H1[21;11H[?25h[?25l[52;78Hi[21;11H[52;78H [21;11H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H255,11[8C73%[21;11H[?25h[?25lNon)[106m:[m [106m)[m:[52;93H0[21;10H[?25h[?25l)[106m:[m [106m)[m:[52;92H9 [21;9H[?25h[?25l)[106m:[m [106m)[m:[52;92H8[21;8H[?25h[?25l)[106m:[m [106m)[m:[52;92H7[21;7H[?25h[?25l)[106m:[m [106m)[m:[52;92H6[21;6H[?25h[?25l)[106m:[m [106m)[m:[52;92H5[21;5H[?25h[?25l):[21;5H[K[21;1H[106m)[m[52;92H1[21;1H[?25h[?25l[20;51r[51;1H
[1;52r[20;1H    grid=[36mFalse[m, ):
[106m [m[51;1H[31m        Domain of the graph[m[52;88H[K[52;88H254,17[8C73%[20;17H[106m)[m
 [20;17H[?25h[?25l)[106m:[m [106m)[m:[52;93H6[20;16H[?25h[?25l)[106m:[m [106m)[m:[52;93H5[20;15H[?25h[52;1H[K[20;14H[?25l[52;78H^[[20;14H[52;78H  [20;15H[12;18H([20;15H)[52;88H254,14[8C73%[20;14H[?25h[?25l[52;78H:[20;14H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11772B written[20;14H[52;88H254,14[8C73%[52;88H[K[52;88H254,14[8C73%[20;14H[?25h[?25l[52;78H:[20;14H[52;1H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11772B written[20;14H[52;88H254,14[8C73%[52;88H[K[52;88H254,14[8C73%[20;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m
    ax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[52;1H[K[52;88H254,14[8C72%[23;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hax.spines[[31m'top'[m].set_visible([36mFalse[m)
    ax.spines[[31m'right'[m].set_visible([36mFalse[m)[52;88H[K[52;88H254,14[8C71%[26;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    )
    
    Parameter[m[52;88H[K[52;88H254,14[8C72%[23;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;88H[K[52;88H254,14[8C73%[20;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y: numpy array[float]
        Range of the graph
    x_scale: float[m[52;88H[K[52;88H254,14[8C74%[17;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float
        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)[m[52;88H[K[52;88H254,14[8C75%[14;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,14[8C76%[11;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H254,14[8C77%[8;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H255,7[9C78%[6;7H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H258,14[8C79%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H261,12[8C80%[6;12H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[36mprint[m(L)[52;88H[K[52;88H264,14[8C81%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[50;9Hy_min = np.min([y_min, np.min(Y[i])])[51;9Hy_max = np.max([y_max, np.max(Y[i])])[52;88H[K[52;88H267,14[8C82%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[51;5Hx_mid = (x_max + x_min)/[31m2.0[m[52;88H[K[52;88H270,14[8C83%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H273,14[8C83%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale[52;88H[K[52;88H276,14[8C84%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H279,14[8C85%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H282,13[8C86%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position[52;88H[K[52;88H285,14[8C87%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = yf + y_diff*y_position[51;5Hplt.axis([x_min, x_max, y_min, y_max])[52;88H[K[52;88H288,14[8C88%[6;14H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.show()

[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):[52;88H[K[52;88H291,14[8C89%[6;14H[?25h[?25l[24;10H[106m([mL[106m)[m[52;88H309,12[24;12H[?25h[?25l[52;78Ho[24;12H[52;78H [25;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H310,5[9C89%[25;51r[25;1H[L[1;52r[52;88H[K[52;88H310,5[9C89%[24;10H(L)
    [?25h[?25lp[52;92H6[25;6H[?25h[?25lr[52;92H7[25;7H[?25h[?25li[52;92H8[25;8H[?25h[?25ln[52;92H9[25;9H[?25h[?25l[36mprint[m[52;92H10[25;10H[?25h[?25l([52;93H1[25;11H[?25h[?25lg[52;93H2[25;12H[?25h[?25lr[52;93H3[25;13H[?25h[?25li[52;93H4[25;14H[?25h[?25ld[52;93H5[25;15H[?25h[?25l)[106m([mgrid[106m)[m[52;93H6[25;16H[?25h[52;1H[K[25;15H[?25l[52;78H^[[25;15H[52;78H  [25;16H[52;88H310,15[8C89%[25;15H[?25h[?25l[52;78H:[25;15H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 370L, 11788B written[25;15H[52;88H310,15[8C89%[52;88H[K[52;88H310,15[8C89%[25;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    ---------
    x: numpy array[float]
        Domain of the graph[m[52;1H[K[52;88H310,15[8C88%[28;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    )
    
    Parameter[m[52;88H[K[52;88H310,15[8C87%[31;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),
        y_position=(-1, 1, 0.02)[m[52;88H[K[52;88H310,15[8C86%[34;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H310,15[8C85%[37;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H310,15[8C84%[40;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H310,15[8C83%[43;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H310,15[8C82%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[49;10H(grid)[52;88H[K[52;88H307,15[8C81%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[52;88H[K[52;88H304,15[8C80%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[52;88H[K[52;88H301,15[8C79%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HL=[36mNone[m,
    grid=[36mFalse[m):
    [31m"""[m[52;88H[K[52;88H298,14[8C78%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_scale=[31m1[m,
    x_position=[31m0[m,
    y_position=[31m0[m,[52;88H[K[52;88H295,15[8C78%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx,
    Y,
    x_scale=[31m1[m,[52;88H[K[52;88H292,15[8C77%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m show: plt.show()

[38;5;130mdef[m [36minteract_plot[m([52;88H[K[52;88H289,15[8C76%[46;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H289,15[8C77%[43;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H289,15[8C78%[40;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H289,15[8C78%[37;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_scale=[31m1[m,
    x_position=[31m0[m,
    y_position=[31m0[m,[52;88H[K[52;88H289,15[8C78%[40;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx,
    Y,
    x_scale=[31m1[m,[52;88H[K[52;88H289,15[8C77%[43;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m show: plt.show()

[38;5;130mdef[m [36minteract_plot[m([52;88H[K[52;88H289,15[8C76%[46;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H289,15[8C77%[43;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H289,15[8C78%[40;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H289,15[8C78%[37;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H289,15[8C79%[34;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[36mprint[m(L)[52;88H[K[52;88H289,15[8C80%[31;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[36mprint[m(grid)
    [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[51;9Hy_min = np.min([y_min, np.min(Y[i])])[52;88H[K[52;88H289,15[8C81%[28;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(Y[i])])[50;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[52;88H[K[52;88H289,15[8C82%[25;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H289,15[8C83%[22;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H289,15[8C84%[19;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H289,15[8C85%[16;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H289,15[8C86%[13;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    interact(
        trigs,
        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H289,15[8C85%[16;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs.__name__ = 'interactive function'

    # from ipywidgets import interact first[m[52;88H[K[52;88H289,15[8C84%[19;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    trigs = partial(interact_plot, x, [sin, cos])

    # name the function to avoid AttributeError:[m[52;88H[K[52;88H289,15[8C83%[22;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    cos = np.cos(x)

    # from functools import partial first[m[52;88H[K[52;88H289,15[8C82%[25;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[52;88H[K[52;88H289,15[8C81%[28;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[52;88H[K[52;88H289,15[8C80%[31;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[52;88H[K[52;88H289,15[8C79%[34;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5HL=[36mNone[m,
    grid=[36mFalse[m):
    [31m"""[m[52;88H[K[52;88H289,15[8C78%[37;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_scale=[31m1[m,
    x_position=[31m0[m,
    y_position=[31m0[m,[52;88H[K[52;88H289,15[8C78%[40;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx,
    Y,
    x_scale=[31m1[m,[52;88H[K[52;88H289,15[8C77%[43;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m show: plt.show()

[38;5;130mdef[m [36minteract_plot[m([52;88H[K[52;88H289,15[8C76%[46;15H[?25h[?25l[52;89H53,11[10;11H[?25h[?25l[52;78Hd[10;11H[?25h[?25l[52;79Hd[10;11H[52;78H  [10;5H[10;51r[51;1H
[1;52r[51;1H[31m    y_position: float[m[52;88H[K[52;88H253,5[9C76%[10;5H[?25h[?25l[52;78Hk[10;5H[52;78H [9;5H[52;90H2[9;5H[?25h[?25l[52;78Hk[9;5H[52;78H [8;5H[52;90H1[8;5H[?25h[?25l[52;78Hk[8;5H[52;78H [7;5H[52;90H0[7;5H[?25h[?25l[52;78Hk[7;5H[52;78H [6;5H[52;89H49[6;5H[?25h[?25l[52;78Hk[6;5H[52;78H [6;5H[1;51r[1;1H[L[1;52r[1;5H[34m# show the plot[m[52;88H[K[52;88H248,5[9C76%[6;5H[?25h[?25l[52;78Ho[6;5H[52;78H [7;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H249,5[9C75%[7;51r[7;1H[L[1;52r[52;88H[K[52;88H249,5[9C75%[7;5H[?25h[?25l*[52;92H6[7;6H[?25h[?25l*[52;92H7[7;7H[?25h[?25lk[52;92H8[7;8H[?25h[?25le[52;92H9[7;9H[?25h[?25l[7;8H[K[52;92H8[7;8H[?25h[?25lw[52;92H9[7;9H[?25h[?25la[52;92H10[7;10H[?25h[?25lr[52;93H1[7;11H[?25h[?25lg[52;93H2[7;12H[?25h[?25ls[52;93H3[7;13H[?25h[?25l,[52;93H4[7;14H[?25h[52;1H[K[7;13H[?25l[52;78H^[[7;13H[52;78H  [7;14H[52;88H249,13[8C75%[7;13H[?25h[?25l[52;78H:[7;13H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 370L, 11790B written[7;13H[52;88H249,13[8C75%[52;88H[K[52;88H249,13[8C75%[7;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        between -1 and 1 (default 0)
    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is [m[52;1H[K[52;88H251,13[8C76%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        between -1 and 1 (default 0)
    grid: bool
        If true, grid is shown on the graph (default False)[m[52;88H[K[52;88H254,13[8C77%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H257,13[8C78%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_min = x[[31m0[m]
    x_max = x[-[31m1[m]
    plt.grid(grid)[52;88H[K[52;88H260,0-1[7C79%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H263,13[8C80%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[36mprint[m(L)
    [36mprint[m(grid)
    [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(plot_checkboxes):[52;88H[K[52;88H266,0-1[7C81%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_min = np.min([y_min, np.min(Y[i])])[50;9Hy_max = np.max([y_max, np.max(Y[i])])[51;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[52;88H[K[52;88H269,0-1[7C82%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m[52;88H[K[52;88H272,0-1[7C83%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_size_half = (x_max - x_min)/[31m2.0[m
    y_size_half = (y_max - y_min)/[31m2.0[m[52;88H[K[52;88H275,13[8C84%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxi = x_mid - x_size_half*x_scale
    xf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale[52;88H[K[52;88H278,13[8C85%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hyf = y_mid + y_size_half*y_scale[51;5Hx_diff = x_max - xf[52;88H[K[52;88H281,4[9C86%[6;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_diff = y_max - yf[51;5Hx_min = xi + x_diff*x_position[52;88H[K[52;88H284,13[8C87%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = xf + x_diff*x_position
    y_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H287,13[8C88%[6;13H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H290,13[8C89%[6;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Parameter
    ---------
    x: numpy array[float][m[52;88H[K[52;88H290,13[8C88%[9;13H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_position=(-1, 1, 0.02)
    )
    [m[52;88H[K[52;88H290,13[8C87%[12;13H[?25h[?25l[52;88H312,25[34;25H[?25h[?25l[52;78Hk[34;25H[52;78H [33;25H[52;90H1[33;25H[?25h[?25l[52;78Hl[33;25H[52;78H [33;26H[106m([15C)[m[52;93H6[33;26H[?25h[?25l[52;78Hl[33;26H[52;78H [33;27H([15C)[52;93H7[33;27H[?25h[?25l[52;78Hl[33;27H[52;78H [33;28H[52;93H8[33;28H[?25h[?25l[52;78Hl[33;28H[52;78H [33;29H[52;93H9[33;29H[?25h[?25l[52;78Hl[33;29H[52;78H [33;30H[52;92H30[33;30H[?25h[?25l[52;78Hl[33;30H[52;78H [33;31H[52;93H1[33;31H[?25h[?25l[52;78Hl[33;31H[52;78H [33;32H[52;93H2[33;32H[?25h[?25l[52;78Hl[33;32H[52;78H [33;33H[52;93H3[33;33H[?25h[?25l[52;78Hl[33;33H[52;78H [33;34H[52;93H4[33;34H[?25h[?25l[52;78Hl[33;34H[52;78H [33;35H[52;93H5[33;35H[?25h[?25l[52;78Hl[33;35H[52;78H [33;36H[52;93H6[33;36H[?25h[?25l[52;78Hl[33;36H[52;78H [33;37H[52;93H7[33;37H[?25h[?25l[52;78Hl[33;37H[52;78H [33;38H[52;93H8[33;38H[?25h[?25l[52;78Hl[33;38H[52;78H [33;39H[52;93H9[33;39H[?25h[?25l[52;78Hl[33;39H[52;78H [33;40H[52;92H40[33;40H[?25h[?25l[52;78Hl[33;40H[52;78H [33;41H[52;93H1[33;41H[?25h[?25l[52;78Hl[33;41H[52;78H [33;42H[33;26H[106m([15C)[m[52;93H2[33;42H[?25h[?25l[52;78Hi[33;42H[52;78H [33;42H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H311,42[8C87%[33;42H[?25h[?25l)[106m:[m[33;43H[K[33;41H[106m)[m:[52;93H1[33;41H[?25h[?25l)[106m:[m[33;42H[K[33;40H[106m)[m:[52;93H0[33;40H[?25h[?25l)[106m:[m[33;41H[K[33;39H[106m)[m:[52;92H39[33;39H[?25h[?25l)[106m:[m[33;40H[K[33;38H[106m)[m:[52;93H8[33;38H[?25h[?25l)[106m:[m[33;39H[K[33;37H[106m)[m:[52;93H7[33;37H[?25h[?25l)[106m:[m[33;38H[K[33;36H[106m)[m:[52;93H6[33;36H[?25h[?25l)[106m:[m[33;37H[K[33;35H[106m)[m:[52;93H5[33;35H[?25h[?25l)[106m:[m[33;36H[K[33;34H[106m)[m:[52;93H4[33;34H[?25h[?25l)[106m:[m[33;35H[K[33;33H[106m)[m:[52;93H3[33;33H[?25h[?25l)[106m:[m[33;34H[K[33;32H[106m)[m:[52;93H2[33;32H[?25h[?25l)[106m:[m[33;33H[K[33;31H[106m)[m:[52;93H1[33;31H[?25h[?25l)[106m:[m[33;32H[K[33;30H[106m)[m:[52;93H0[33;30H[?25h[?25l)[106m:[m[33;31H[K[33;29H[106m)[m:[52;92H29[33;29H[?25h[?25l)[106m:[m[33;30H[K[33;28H[106m)[m:[52;93H8[33;28H[?25h[?25l)[106m:[m[33;29H[K[33;27H[106m)[m:[52;93H7[33;27H[?25h[?25l[106mY[m):Y[106m)[m[52;93H8[33;28H[?25h[52;1H[K[33;27H[?25l[52;78H^[[33;27H[52;78H  [33;28H(Y)[52;88H311,27[8C87%[33;27H[?25h[?25l[52;78H:[33;27H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 370L, 11776B written[33;27H[52;88H311,27[8C87%[52;88H[K[52;88H311,27[8C87%[33;27H[?25h[?25l[52;78Hk[33;27H[52;78H [32;15H[106m([mgrid[106m)[m[52;90H0,15[32;15H[?25h[?25l[52;78Hk[32;15H[52;78H [31;12H[106m([mL[106m)[m[32;10H(grid)[52;89H09,12[31;12H[?25h[?25l[52;78Hj[31;12H[52;78H [32;15H[31;10H(L)[32;10H[106m([mgrid[106m)[m[52;89H10,15[32;15H[?25h[?25l[52;78Hk[32;15H[52;78H [31;12H[106m([mL[106m)[m[32;10H(grid)[52;89H09,12[31;12H[?25h[?25l[52;78Hd[31;12H[?25h[?25l[52;79Hd[31;12H[52;78H  [31;5H[31;51r[51;1H
[1;52r[51;5Hx_max = xf + x_diff*x_position[52;1H[K[52;88H309,5[9C87%[31;5H[?25h[?25l[52;78H:[31;5H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11763B written[31;5H[52;88H309,5[9C87%[52;88H[K[52;88H309,5[9C87%[31;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),[m[52;1H[K[52;88H309,5[9C86%[34;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    # from ipywidgets import interact first
    interact(
        trigs,[m[52;88H[K[52;88H309,5[9C85%[37;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H309,5[9C84%[40;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H309,5[9C83%[43;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    sin = np.sin(x)
    cos = np.cos(x)[m[52;88H[K[52;88H309,5[9C82%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Examples
    --------
    x = np.linspace(-5.0, 5.0, 101)[m[52;88H[K[52;88H306,5[9C81%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.[m[52;88H[K[52;88H303,5[9C80%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows[m[52;88H[K[52;88H300,5[9C79%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx_position=[31m0[m,
    y_position=[31m0[m,
    grid=[36mFalse[m):[52;88H[K[52;88H297,5[9C78%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H**kwargs,
    x_scale=[31m1[m,
    y_scale=[31m1[m,[52;88H[K[52;88H294,5[9C77%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[38;5;130mdef[m [36minteract_plot[m(
    x,
    Y,[52;88H[K[52;88H291,5[9C77%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# show the plot[m
    [38;5;130mif[m show: plt.show()[52;88H[K[52;88H288,5[9C76%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m (save == [36mTrue[m):[2;9Hplt.savefig(filename, [36mformat[m=[31m'eps'[m, transparent=[36mTrue[m)[52;88H[K[52;88H285,5[9C75%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hplt.yticks(ytick_locations, ytick_labels)[3;5H[34m# save the figure as eps vector image if save==True[m[52;88H[K[52;88H282,5[9C74%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# tick locations with labels[m
    plt.xticks(xtick_locations, xtick_labels)[52;88H[K[52;88H279,5[9C73%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[2;5H[34m# changes the size of ticks (both major and minor) to zero if ticks==False[m
    ax.tick_params(axis=[31mu'both'[m, which=[31mu'both'[m, length=[31m0[m)[52;88H[K[52;88H276,5[9C72%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# deletes top and right spines[m
    ax.spines[[31m'top'[m].set_visible([36mFalse[m)
    ax.spines[[31m'right'[m].set_visible([36mFalse[m)[52;88H[K[52;88H273,5[9C71%[46;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[34m# change the spine linewidth[m
    plt.rcParams[[31m'axes.linewidth'[m] = [31m0.2[m[52;88H[K[52;88H270,5[9C70%[46;5H[?25h[?25l[52;89H50,15[26;15H[?25h[?25l[52;78Hk[26;15H[52;78H [25;13H[52;89H49,13[25;13H[?25h[?25l[52;78Hd[25;13H[?25h[?25l[52;79Hd[25;13H[52;78H  [25;5H[25;51r[51;1H
[1;52r[51;1H[31m        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H249,5[9C70%[25;5H[?25h[?25l[52;78Hj[25;5H[52;78H [26;5H[52;89H50[26;5H[?25h[?25l[52;78Hj[26;5H[52;78H [27;5H[52;90H1[27;5H[?25h[?25l[52;78Hj[27;5H[52;78H [28;5H[52;90H2[28;5H[?25h[?25l[52;78Hj[28;5H[52;78H [29;5H[52;90H3[29;5H[?25h[?25l[52;78Hl[29;5H[52;78H [29;6H[52;92H6[29;6H[?25h[?25l[52;78Hl[29;6H[52;78H [29;7H[52;92H7[29;7H[?25h[?25l[52;78Hl[29;7H[52;78H [29;8H[52;92H8[29;8H[?25h[?25l[52;78Hl[29;8H[52;78H [29;9H[52;92H9[29;9H[?25h[?25l[52;78Hl[29;9H[52;78H [29;10H[52;92H10[29;10H[?25h[?25l[52;78Hl[29;10H[52;78H [29;11H[52;93H1[29;11H[?25h[?25l[52;78Hl[29;11H[52;78H [29;12H[52;93H2[29;12H[?25h[?25l[52;78Hl[29;12H[52;78H [29;13H[52;93H3[29;13H[?25h[?25l[52;78Hl[29;13H[52;78H [29;14H[52;93H4[29;14H[?25h[?25l[52;78Ha[29;14H[52;78H [29;15H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H253,15[8C70%[22;18H[106m([29;15H)[?25h[?25l,[m):,[106m)[m[52;93H6[29;16H[?25h[?25l[30;51r[30;1H[L[1;52r[29;16H[K[30;5H):[52;88H[K[52;88H254,5[9C70%[30;5H[106m)[?25h[?25l [m   L=A):        L=A[106m)[m[52;92H12[30;12H[?25h[52;1H[K[30;11H[?25l[52;78H^[[30;11H[52;78H  [30;12H[22;18H([30;12H)[52;88H254,11[8C70%[30;11H[?25h[?25l[52;78Hl[30;11H[52;78H [30;12H[22;18H[106m([30;12H)[m[52;93H2[30;12H[?25h[?25l[52;78Hp[30;12H[52;78H [31;5H[31;51r[31;1H[L[1;52r[22;18H([30;12H)
    **kwargs,[52;88H[K[52;88H255,5[9C70%[31;5H[?25h[?25l[52;78Hi[31;5H[52;78H [31;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H255,5[9C70%[31;5H[?25h[?25l**kwargs,[31;10H[K[52;92H1[31;1H[?25h[?25l[30;51r[51;1H
[1;52r[30;1H        L=A): **kwargs,[51;1H[31m        trigs,[m[52;88H[K[52;88H254,15[8C70%[30;15H[?25h[?25l**kwargs,[30;23H[K[52;93H4[30;14H[?25h[?25l**kwargs,[30;22H[K[22;18H[106m([30;12H)[m[52;93H3[30;13H[?25h[?25l[106m*[m*kwargs,[30;21H[K[22;18H([30;12H*[52;93H2[30;12H[?25h[?25l**kwargs,[30;20H[K[52;93H1[30;11H[?25h[?25l**kwargs,[30;19H[K[52;93H0[30;10H[?25h[?25l**kwargs,[30;18H[K[52;92H9 [30;9H[?25h[?25l**kwargs,[30;14H[K[52;92H5[30;5H[?25h[?25l**kwargs,[30;10H[K[52;92H1[30;1H[?25h[?25l[29;51r[51;1H
[1;52r[29;1H    grid=[36mFalse[m,**kwargs,[51;1H[31m        x_scale=(0.01, 1, 0.01), [m[52;88H[K[52;88H253,16[8C70%[29;16H[?25h[?25l[30;51r[30;1H[L[1;52r[29;16H[K[30;5H**kwargs,[52;88H[K[52;88H254,5[9C70%[30;5H[?25h[52;1H[K[30;1H[?25l[52;78H^[[30;1H[52;78H  [30;5H[52;88H254,4[9C70%[30;4H[?25h[?25l[52;78Hl[30;4H[52;78H [30;5H[52;92H5[30;5H[?25h[?25l[52;78Hl[30;5H[52;78H [30;6H[52;92H6[30;6H[?25h[?25l[52;78Hl[30;6H[52;78H [30;7H[52;92H7[30;7H[?25h[?25l[52;78Hl[30;7H[52;78H [30;8H[52;92H8[30;8H[?25h[?25l[52;78Hl[30;8H[52;78H [30;9H[52;92H9[30;9H[?25h[?25l[52;78Hl[30;9H[52;78H [30;10H[52;92H10[30;10H[?25h[?25l[52;78Hl[30;10H[52;78H [30;11H[52;93H1[30;11H[?25h[?25l[52;78Hl[30;11H[52;78H [30;12H[52;93H2[30;12H[?25h[?25l[52;78Hl[30;12H[52;78H [30;13H[52;93H3[30;13H[?25h[?25l[52;78Hl[30;13H[52;78H [30;13H[?25h[?25l[52;78Ha[30;13H[52;78H [30;14H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H254,14[8C70%[30;14H[?25h[?25l[30;13H[K[52;93H3[30;13H[?25h[?25l:[52;93H4[30;14H[?25h[52;1H[K[30;13H[?25l[52;78H^[[30;13H[52;78H  [30;14H[52;88H254,13[8C70%[30;13H[?25h[?25l[52;78H~@k[30;13H[52;78H   [30;12H[52;93H2[30;12H[?25h[?25l[52;78Ha[30;12H[52;78H [30;13H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H254,13[8C70%[30;13H[?25h[?25l):[22;18H[106m([30;13H)[m[52;93H4[30;14H[?25h[52;1H[K[30;13H[?25l[52;78H^[[30;13H[52;78H  [30;14H[52;88H254,13[8C70%[30;13H[?25h[?25l[52;78H:[30;13H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11762B written[30;13H[52;88H254,13[8C70%[52;88H[K[52;88H254,13[8C70%[30;13H[?25h[?25l[22;18H([30;13H)[52;89H48,6 [24;6H[?25h[?25l[52;78Hj[24;6H[52;78H [25;15H[52;90H9,15[25;15H[?25h[?25l[52;78Hj[25;15H[52;78H [26;15H[52;89H50[26;15H[?25h[?25l[52;78Hj[26;15H[52;78H [27;17H[52;90H1,17[27;17H[?25h[?25l[52;78Hj[27;17H[52;78H [28;17H[52;90H2[28;17H[?25h[?25l[52;78Hj[28;17H[52;78H [29;15H[52;90H3,15[29;15H[?25h[?25l[52;78Hj[29;15H[52;78H [30;14H[52;90H4,14[30;14H[?25h[?25l[52;78Hj[30;14H[52;78H [31;7H[52;90H5,7 [31;7H[?25h[?25l[52;78Hh[31;7H[52;78H [31;6H[52;92H6[31;6H[?25h[?25l[52;78Hi[31;6H[52;78H [31;6H[52;1H[1m-- INSERT --[m[52;13H[K[52;88H255,6[9C70%[31;6H[?25h[52;1H[K[31;5H[?25l[52;78H^[[31;5H[52;78H  [31;6H[52;88H255,5[9C70%[31;5H[?25h[?25l[52;78Hk[31;5H[52;78H [30;5H[52;90H4[30;5H[?25h[?25l[52;78Hl[30;5H[52;78H [30;6H[52;92H6[30;6H[?25h[?25l[52;78Hl[30;6H[52;78H [30;7H[52;92H7[30;7H[?25h[?25l[52;78Hl[30;7H[52;78H [30;8H[52;92H8[30;8H[?25h[?25l[52;78Hl[30;8H[52;78H [30;9H[52;92H9[30;9H[?25h[?25l[52;78Hi[30;9H[52;78H [30;9H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H254,9[9C70%[30;9H[?25h[?25largs):[30;14H[K[52;92H8[30;8H[?25h[?25largs):[30;13H[K[52;92H7[30;7H[?25h[?25largs):[30;12H[K[52;92H6[30;6H[?25h[52;1H[K[30;5H[?25l[52;78H^[[30;5H[52;78H  [30;6H[52;88H254,5[9C70%[30;5H[?25h[?25l[52;78H:[30;5H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 369L, 11759B written[30;5H[52;88H254,5[9C70%[52;88H[K[52;88H254,5[9C70%[30;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),[m[52;1H[K[52;88H254,5[9C71%[27;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        y_position=(-1, 1, 0.02)
    )
    [m[52;88H[K[52;88H254,5[9C72%[24;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    Parameter
    ---------
    x: numpy array[float][m[52;88H[K[52;88H254,5[9C73%[21;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Domain of the graph
    y: numpy array[float]
        Range of the graph[m[52;88H[K[52;88H254,5[9C74%[18;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    x_scale: float
        Scale of the graph along x-axis to be viewed. The value is between 0 and 1 (default 1)
    y_scale: float[m[52;88H[K[52;88H254,5[9C75%[15;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        Scale of the graph along y-axis to be viewed. The value is between 0 and 1 (default 1)
    x_position: float
        Horizontal position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H254,5[9C76%[12;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        between -1 and 1 (default 0)
    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is [m[52;88H[K[52;88H254,5[9C77%[9;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m        between -1 and 1 (default 0)
    grid: bool
        If true, grid is shown on the graph (default False)[m[52;88H[K[52;88H254,5[9C77%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    """[m
    x_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)[52;88H[K[52;88H257,5[9C78%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_min = x[[31m0[m]
    x_max = x[-[31m1[m]
    plt.grid(grid)[52;88H[K[52;88H260,0-1[7C79%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H263,5[9C80%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[36mprint[m(grid)
    [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(Y):[51;9Hy_min = np.min([y_min, np.min(Y[i])])[52;88H[K[52;88H266,0-1[7C81%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(Y[i])])[50;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[52;88H[K[52;88H269,0-1[7C82%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H272,0-1[7C83%[6;1H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H275,5[9C84%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H278,5[9C85%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H281,4[9C86%[6;4H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H284,5[9C87%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H287,5[9C88%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hplt.axis([x_min, x_max, y_min, y_max])
    plt.show()[52;88H[K[52;88H290,5[9C89%[6;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[38;5;130mdef[m [36mprint_fn[m(*args, num=[31m10[m):
    [31m"""
    Prints the input objects up to the line num. It is useful to limit the output length of print[m[52;88H[K[52;88H293,5[9C90%[6;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        Domain of the graph
    y: numpy array[float]
        Range of the graph[m[52;88H[K[52;88H293,5[9C89%[9;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Parameter
    ---------
    x: numpy array[float][m[52;88H[K[52;88H293,5[9C88%[12;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        y_position=(-1, 1, 0.02)
    )
    [m[52;88H[K[52;88H293,5[9C87%[15;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m        x_scale=(0.01, 1, 0.01), 
        y_scale=(0.01, 1, 0.01), 
        x_position=(-1, 1, 0.02),[m[52;88H[K[52;88H293,5[9C86%[18;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    # from ipywidgets import interact first
    interact(
        trigs,[m[52;88H[K[52;88H293,5[9C85%[21;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    # name the function to avoid AttributeError:
    trigs.__name__ = 'interactive function'[m[52;88H[K[52;88H293,5[9C84%[24;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    # from functools import partial first
    trigs = partial(interact_plot, x, [sin, cos])[m[52;88H[K[52;88H293,5[9C83%[27;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    sin = np.sin(x)
    cos = np.cos(x)[m[52;88H[K[52;88H293,5[9C82%[30;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    Examples
    --------
    x = np.linspace(-5.0, 5.0, 101)[m[52;88H[K[52;88H293,5[9C81%[33;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    to dynamically change the position and scale of the part of the graph to inspect the
    data easily. First, from ipywidgets import interact. Then from functools import partial.[m[52;88H[K[52;88H293,5[9C80%[36;5H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[31m"""
    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows[m[52;88H[K[52;88H293,5[9C79%[39;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = np.min(Y[[31m0[m])
    y_max = np.max(Y[[31m0[m])[52;88H[K[52;88H293,5[9C80%[36;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[36mprint[m(grid)
    [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(Y):[51;9Hy_min = np.min([y_min, np.min(Y[i])])[52;88H[K[52;88H293,5[9C81%[33;5H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(Y[i])])[50;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[52;88H[K[52;88H293,5[9C82%[30;5H[?25h[?25l[40;14H[106m[[1C][m[52;88H303,16[40;16H[?25h[?25l[[1C][52;90H8,4 [45;4H[?25h[?25l[52;78H^M[45;4H[52;78H  [46;5H[52;90H9,5[46;5H[?25h[?25l[52;78Ho[46;5H[52;78H [46;5H[52;1H[1m-- INSERT --[m[52;88H[K[52;88H310,5[9C82%[1;51r[51;1H
[1;52r[46;51r[46;1H[L[1;52r[52;88H[K[52;88H310,5[9C82%[46;5H[?25h[?25lp[52;92H6[46;6H[?25h[?25lr[52;92H7[46;7H[?25h[?25li[52;92H8[46;8H[?25h[?25ln[52;92H9[46;9H[?25h[?25l[36mprint[m[52;92H10[46;10H[?25h[?25l([52;93H1[46;11H[?25h[?25la[52;93H2[46;12H[?25h[?25lr[52;93H3[46;13H[?25h[?25lg[52;93H4[46;14H[?25h[?25ls[52;93H5[46;15H[?25h[?25l)[106m([margs[106m)[m[52;93H6[46;16H[?25h[52;1H[K[46;15H[?25l[52;78H^[[46;15H[52;78H  [46;16H[52;88H310,15[8C82%[46;15H[?25h[?25l[52;78H:[46;15H[52;78H[K[52;1H:[?25hw[?25l"mods.py" 370L, 11775B written[46;15H[52;88H310,15[8C82%[52;88H[K[52;88H310,15[8C82%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    --------
    x = np.linspace(-5.0, 5.0, 101)
    sin = np.sin(x)[m[49;10H(args)[52;1H[K[52;88H307,15[8C81%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    data easily. First, from ipywidgets import interact. Then from functools import partial.

    Examples[m[52;88H[K[52;88H304,15[8C80%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;1H[31m    function to plot multiple graphs, and it allows to change the scale and position of 
    a part of the graph you are looking at. With ipywidgets.interact, this allows
    to dynamically change the position and scale of the part of the graph to inspect the[m[52;88H[K[52;88H301,15[8C79%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hgrid=[36mFalse[m,
    *args):
    [31m"""[m[52;88H[K[52;88H298,14[8C78%[46;14H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hy_scale=[31m1[m,
    x_position=[31m0[m,
    y_position=[31m0[m,[52;88H[K[52;88H295,15[8C78%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5Hx,
    Y,
    x_scale=[31m1[m,[52;88H[K[52;88H292,15[8C77%[46;15H[?25h[?25l[1;51r[1;1H[3L[1;52r[1;5H[38;5;130mif[m show: plt.show()

[38;5;130mdef[m [36minteract_plot[m([52;88H[K[52;88H289,15[8C76%[46;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    y_position: float
        Vertical position of graph view with respect to the center of the graph. The value is 
        between -1 and 1 (default 0)[m[52;88H[K[52;88H289,15[8C77%[43;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;1H[31m    grid: bool
        If true, grid is shown on the graph (default False)
    """[m[52;88H[K[52;88H289,15[8C78%[40;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_scale = np.clip(x_scale, [31m0[m, [31m1[m)
    y_scale = np.clip(y_scale, [31m0[m, [31m1[m)
    x_min = x[[31m0[m][52;88H[K[52;88H289,15[8C78%[37;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_max = x[-[31m1[m]
    plt.grid(grid)
    y_min = np.min(Y[[31m0[m])[52;88H[K[52;88H289,15[8C79%[34;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_max = np.max(Y[[31m0[m])[51;5H[36mprint[m(grid)[52;88H[K[52;88H289,15[8C80%[31;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5H[36mprint[m(args)
    [38;5;130mfor[m i, _ [38;5;130min[m [36menumerate[m(Y):[51;9Hy_min = np.min([y_min, np.min(Y[i])])[52;88H[K[52;88H289,15[8C81%[28;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;9Hy_max = np.max([y_max, np.max(Y[i])])[50;9Hplt.plot(x, Y[i], label=f[31m'plot {i}'[m)[52;88H[K[52;88H289,15[8C82%[25;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hx_mid = (x_max + x_min)/[31m2.0[m
    y_mid = (y_max + y_min)/[31m2.0[m
    x_size_half = (x_max - x_min)/[31m2.0[m[52;88H[K[52;88H289,15[8C83%[22;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_size_half = (y_max - y_min)/[31m2.0[m[51;5Hxi = x_mid - x_size_half*x_scale[52;88H[K[52;88H289,15[8C84%[19;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hxf = x_mid + x_size_half*x_scale
    yi = y_mid - y_size_half*y_scale
    yf = y_mid + y_size_half*y_scale[52;88H[K[52;88H289,15[8C85%[16;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_diff = x_max - xf
    y_diff = y_max - yf[52;88H[K[52;88H289,15[8C86%[13;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[50;5Hx_min = xi + x_diff*x_position
    x_max = xf + x_diff*x_position[52;88H[K[52;88H289,15[8C87%[10;15H[?25h[?25l[1;51r[1;1H[3M[1;52r[49;5Hy_min = yi + y_diff*y_position
    y_max = yf + y_diff*y_position[52;88H[K[52;88H289,15[8C88%[7;15H[?25h[?25l[52;88H304,5 [22;5H[?25h[?25l[52;78H:[22;5H[52;78H[K[52;1H:[?25hwq[?25l[?1000l[?2004l[>4;m"mods.py" 370L, 11775B written[23;2t[23;1t
[?1004l[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t[1m[7m%[27m[1m[0m                                                                                                         ]2;sejinnam@gn-08-15-00:~/gd/projects/mods/scripts]1;../mods/scripts[0m[27m[24m[J(TF) [1m[38;5;226mgn-08-15-00[0m  [38;5;046mscripts[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004heexit[?1l>[?2004l
]2;exit]1;exit
Script done on 2024-01-26 04:57:22+00:00 [COMMAND_EXIT_CODE="0"]
